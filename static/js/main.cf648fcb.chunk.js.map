{"version":3,"sources":["components/Icon.module.css","components/RecipePicker.module.css","components/ErrorCatcher.module.css","components/RecipePart.module.css","components/RecipeRow.module.css","components/TotalCard.module.css","components/RecipeGroup.module.css","components/App.module.css","components/ErrorCatcher.tsx","atoms.ts","util.ts","rational.ts","game.ts","stateutil.ts","serialization.ts","signal.ts","totals.ts","components/generic/Dropdown.tsx","components/generic/Tooltip.tsx","components/generic/IntegerInput.tsx","components/generic/RationalInput.tsx","components/Icon.tsx","components/IngredientCard.tsx","components/RecipePart.tsx","components/MachineCard.tsx","components/RecipeCard.tsx","components/MachinePicker.tsx","components/ModuleCard.tsx","components/App.tsx","components/ModulePicker.tsx","components/RecipeRow.tsx","components/RecipePicker.tsx","components/TotalCard.tsx","components/RecipeGroup.tsx","components/Settings.tsx","actions.ts","components/AppLoader.tsx","components/GameDataLoader.tsx","index.tsx"],"names":["module","exports","ErrorCatcher","state","crashMsg","undefined","nextProps","nextState","this","error","errorInfo","setState","componentStack","stack","join","className","styles","crashed","props","children","React","Component","gameDataAtom","atom","key","default","useGameData","gameData","useRecoilValue","Error","recipeTargetAtom","groupAtomsAtom","groupsState","selector","get","map","groupAtom","settingsAtom","assemblerOverrides","assert","condition","message","mapValues","obj","fn","ret","clone","orig","Object","assign","create","getPrototypeOf","round2","num","places","mag","Math","pow","round","format_magnitude","amount","suffixes","i","length","debounce","ms","pendingId","debounced","args","setTimeout","defineProperty","value","clearTimeout","num_divmod","a","b","Number","isSafeInteger","quotient","floor","remainder","Rational","p","q","div","num_gcd","divmod","result","less","zero","sub","one","other","fromFloat","min","max","mul","toFraction","toString","maxDigits","roundingFactor","sign","x","isNegative","negate","add","integerPart","decimalPart","fraction","ten","equal","slice","isZero","parts","push","isInteger","r","lookups","str","sum","split","part","trim","index","indexOf","fromInts","oneThird","twoThirds","rounded","floored","BaseDisplayable","data","name","localisedName","iconCol","iconRow","localised_name","icon_col","icon_row","en","Item","d","group","subgroup","order","fuelValue","usedBy","madeBy","fuel_value","Module","type","limitedTo","effects","Set","limitation","speed","effect","bonus","productivity","consumption","pollution","recipe","size","has","Fluid","defaultTemperature","default_temperature","Ingredient","gd","item","getItem","toDecimal","niceName","FluidIngredient","minimumTemperature","maximumTemperature","getFluid","minimum_temperature","Infinity","maximum_temperature","range","Product","amount_min","amount_max","probability","ingredient","FluidProduct","temperature","temp","Recipe","category","ingredients","products","craftingTime","madeIn","energy_required","results","AssemblingMachine","craftingCategories","craftingSpeed","moduleSlots","crafting_categories","crafting_speed","module_slots","GameData","raw","itemMap","Map","fluids","fluidMap","modules","moduleMap","recipes","recipeMap","entityMap","categoryMap","groups","clockSprite","noModuleModule","spriteHash","sprites","hash","values","edata","entity","set","rawMiningDrill","rawMachine","resource_categories","mining_speed","ingredient_count","machine","items","rawItem","fluid","rawRecipe","resource","rawResource","minable","fluid_amount","required_fluid","mining_time","canBuildRecipe","some","isPositive","console","warn","entities","catMap","hasOwnProperty","createCategoryMap","extra","rocket_launch_products","groupOrder","subgroupOrder","subgroups","collection","keyFn","sort","ordersA","getItemOrder","ordersB","valA","valB","getDefaultMachine","input","settings","defaultMachine","game","groupv4to5","rows","serialize","version","row","machineName","numMachines","m","beaconModule","numBeacons","reStateUrl","migrateSerializedState","state1to2","state2to3","state3to4","state4to5","deserialize","unmigrated","migrated","deserializeSettings","recipeName","getRecipe","getEntity","fromString","n","getModule","serialized","Signal","handlers","dispatch","arg","handler","splice","addIngredientFilter","addProductFilter","addRecipeRow","Totals","addRow","newIngredient","oldIng","oldProd","satisfies","filter","newProduct","be","clamp","ingredientMult","invert","productMult","addIngredient","product","addProduct","Dropdown","buttonRef","isOpen","handleToggle","handleSelect","selected","onSelect","handleWantClose","floater","canToggle","options","option","disabled","classes","parentRef","renderOption","onWantClose","ref","onClick","renderSelected","DropdownMenu","popperInstance","menuRef","style","popperUpdate","handleBodyClick","event","current","target","contains","handleKeyEvent","keyCode","renderOptions","header","active","referenceEl","menuEl","Popper","modifiers","applyStyle","enabled","updateStateWithStyle","document","body","addEventListener","disableEventListeners","removeEventListener","ontop","zIndex","Tooltip","selfRef","handleMouseEnter","showSelf","handleMouseLeave","oldProps","oldState","relativeTo","content","selfEl","placement","offset","preventOverflow","boundariesElement","_","prevState","initPopper","cleanupPopper","ReactDOM","IntegerInput","handleChange","txtValue","isNaN","onChange","step","RationalInput","errmsg","parsed","stringToRational","err","positiveOnly","rationalToString","classNames","lastIndexOf","rational","dec","toFloat","toMixed","Icon","iconRef","createRef","y","divStyle","backgroundPosition","icon","title","tooltip","text","IconTextWrapper","IconText","PureComponent","IngredientCard","fuelValues","totalValue","RecipePart","showName","useRecoilState","recipeTarget","setRecipeTarget","handleClick","useCallback","shiftKey","preventDefault","stopPropagation","signal","includes","perSecond","copySource","MachineCard","RecipeCard","MachinePicker","machines","formatBonus","ActivePage","ModuleCard","ModulePicker","isBeacon","canUseWith","unshift","RawRecipeRow","handleRemoveRow","onRemoveRow","handleMachineChange","applyChange","handleNumMachinesChange","handleNumBeaconsChange","handleSetAllModules","Array","fill","handleSetModule","handleSetBeaconModule","handleInputGroupClick","output","find","newNum","change","onUpdateRow","t","numSlots","slots","getOutput","draggableId","provided","RecipeRow","innerRef","draggableProps","dragHandleProps","renderMachines","role","renderModules","renderBeacons","display","float","minWidth","getFn","path","RE_ADVANCED","RecipePicker","inputRef","query","matches","handleIngredientClick","term","setQuery","calculateMatches","scrollIntoView","handleProductClick","handleQueryInput","handleRecipeClick","onPickRecipe","callback","debCalculateMatches","cancel","bind","addHandler","removeHandler","toLowerCase","conditions","consumes","produces","replace","Fuse","shouldSort","keys","weight","search","placeholder","renderMatches","RecipeMatch","handleClickAdd","ing","prod","ResultName","TotalCard","totals","useMemo","sortByItem","RawRecipeGroup","handleDragEnd","destination","onMoveRow","source","renderRow","handleClickRename","prompt","onRenameGroup","handleClickClone","onCloneGroup","handleClickDelete","window","confirm","onRemoveGroup","onAddRow","availableRecipes","RecipeGroup","onDragEnd","droppableId","droppableProps","setGroup","handleRenameGroup","newName","oldGroup","handleCloneGroup","alert","handleRemoveGroup","handleMoveRow","oldIndex","newIndex","from","removed","handleAddRow","su","handleUpdateRow","Settings","setSettings","handleSetDefaultMachine","categoryNames","entries","entry","localeCompare","onSetDefaultMachine","CategoryRow","groupId","RawApp","activePage","Factory","activeGroupIdx","handleKeyDown","classList","handleKeyUp","remove","handleClickGroup","handleClickAddGroup","defaultName","onAddGroup","handleClickSettings","renderFactory","groupAtoms","renderSettings","settingsActive","activeKey","factoryPills","aria-label","assertNever","Sidebar","renderNavbar","App","setGroupAtoms","handleAddGroup","useSetRecoilState","atoms","useGroupAdd","RawAppLoader","loaded","load","then","urlState","exec","location","decodeURIComponent","inflate","atob","to","JSON","parse","serialization","storageState","statestr","localStorage","stateobj","previousState","getPreviousState","onSetPreviousState","sheet","process","href","StateWriter","completeState","useEffect","stringify","btoa","deflate","history","replaceState","setItem","Prefetch","rel","head","AppLoader","handleSetPreviousState","Date","now","GameDataLoader","jsonPath","child","setGameState","usePromise","fetch","response","status","json","String","JSON_PATH","getElementById"],"mappings":"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","file":"static/js/main.cf648fcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"Icon_Icon__377W-\",\"IconTextWrapper\":\"Icon_IconTextWrapper__Nb7R3\",\"IconText\":\"Icon_IconText__KjO-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipePicker\":\"RecipePicker_RecipePicker__3sU3V\",\"ResultName\":\"RecipePicker_ResultName__jSE56\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"crashed\":\"ErrorCatcher_crashed__3tour\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipePart\":\"RecipePart_RecipePart__3J39l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipeRow\":\"RecipeRow_RecipeRow__3swT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TotalCard\":\"TotalCard_TotalCard__2ci0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipeGroup\":\"RecipeGroup_RecipeGroup__3MC_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"App_Sidebar__3POeR\"};","import React from 'react';\n\nimport styles from './ErrorCatcher.module.css';\n\ninterface Props {}\n\ninterface State {\n  crashMsg: string | undefined;\n}\n\nexport class ErrorCatcher extends React.Component<Props, State> {\n  state: State = {\n    crashMsg: undefined,\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State): boolean {\n    return nextState.crashMsg !== this.state.crashMsg;\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      crashMsg: [\n        'Component Stack:',\n        errorInfo.componentStack,\n        '',\n        error && error.stack,\n      ].join('\\n'),\n    });\n  }\n\n  render(): React.ReactNode {\n    if (this.state.crashMsg) {\n      return (\n        <div className={styles.crashed}>\n          <h1>Crashed!</h1>\n          <pre>{this.state.crashMsg}</pre>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { atom, selector, useRecoilValue, RecoilState } from 'recoil';\nimport type { AppSettingsData, RecipeGroupData } from './state';\nimport type { GameData, Fluid, Item } from './game';\nimport type { Rational } from './rational';\n\n//\n// GameData\n//\nexport const gameDataAtom = atom<GameData | null>({\n  key: 'gameData',\n\n  // set early by apploader\n  default: null,\n});\n\nexport const useGameData = (): GameData => {\n  const gameData = useRecoilValue(gameDataAtom);\n  if (!gameData) {\n    throw new Error('useGameData called without gameData available');\n  }\n  return gameData;\n};\n\n//\n// RecipeTarget\n//\nexport interface RecipeTarget {\n  item: Item | Fluid;\n  amount: Rational;\n}\n\nexport const recipeTargetAtom = atom<RecipeTarget | undefined>({\n  key: 'recipeTarget',\n  default: undefined,\n});\n\n//\n// Groups\n//\nexport const groupAtomsAtom = atom<RecoilState<RecipeGroupData>[]>({\n  key: 'groupAtoms',\n  default: [],\n});\n\nexport const groupsState = selector<RecipeGroupData[]>({\n  key: 'groupsState',\n  get: ({ get }) => {\n    const groupAtoms = get(groupAtomsAtom);\n    return groupAtoms.map((groupAtom) => get(groupAtom));\n  },\n});\n\n//\n// Settings\n//\nexport const settingsAtom = atom<AppSettingsData>({\n  key: 'settings',\n  default: {\n    assemblerOverrides: {},\n  },\n});\n","export function assert(condition: any, message?: string): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nexport function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x);\n}\n\nexport function mapValues<T, V>(\n  obj: { [s: string]: T },\n  fn: (v: T) => V\n): { [s: string]: V } {\n  let ret: { [key: string]: V } = {};\n  for (const key in obj) {\n    ret[key] = fn(obj[key]);\n  }\n  return ret;\n}\n\nexport function clone<T>(orig: T): T {\n  return Object.assign(Object.create(Object.getPrototypeOf(orig)), orig);\n}\n\nexport function round2(num: number, places: number): number {\n  const mag = Math.pow(10, places);\n  return Math.round(num * mag) / mag;\n}\n\nexport function format_magnitude(amount: number, suffixes: string[]): string {\n  let i = 0;\n  for (; i < suffixes.length; i++) {\n    if (amount >= 1000) {\n      amount = amount / 1000;\n    } else {\n      break;\n    }\n  }\n\n  return `${round2(amount, 2)} ${suffixes[i]}`;\n}\n\nexport function format_watts(watts: number): string {\n  return format_magnitude(watts, ['W', 'kW', 'MW', 'GW', 'TW', 'PW']);\n}\n\nexport function format_joules(joules: number): string {\n  return format_magnitude(joules, ['J', 'kJ', 'MJ', 'GJ', 'TJ', 'PJ']);\n}\n\ninterface Func<T extends any[]> {\n  (...args: T): void;\n}\n\ninterface DebouncedFunc<T extends any[]> extends Func<T> {\n  cancel(): void;\n}\n\nexport function debounce<T extends any[]>(\n  fn: Func<T>,\n  ms: number\n): DebouncedFunc<T> {\n  let pendingId: any; // TODO: number when node is removed\n\n  function debounced(...args: T): void {\n    if (pendingId !== undefined) {\n      return;\n    }\n    pendingId = setTimeout(() => {\n      pendingId = undefined;\n      fn(...args);\n    }, ms);\n  }\n\n  function cancel(): void {\n    if (pendingId !== undefined) {\n      clearTimeout(pendingId);\n      pendingId = undefined;\n    }\n  }\n\n  Object.defineProperty(debounced, 'cancel', {\n    value: cancel,\n  });\n\n  return debounced as DebouncedFunc<T>;\n}\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(r => setTimeout(r, ms));\n}\n","import { assert } from './util';\n\nfunction num_gcd(a: number, b: number): number {\n  return !b ? a : num_gcd(b, a % b);\n}\n\nfunction num_divmod(\n  a: number,\n  b: number\n): {\n  quotient: number;\n  remainder: number;\n} {\n  assert(Number.isSafeInteger(a));\n  assert(Number.isSafeInteger(b));\n\n  return {\n    quotient: Math.floor(a / b),\n    remainder: a % b,\n  };\n}\n\nconst FLOAT_CONVERT_PRECISION = 10000;\n\nexport class Rational {\n  readonly p: number;\n  readonly q: number;\n\n  constructor(p: number, q: number) {\n    assert(\n      Number.isSafeInteger(p),\n      `Numerator must be a safe integer, got ${p}`\n    );\n    assert(\n      Number.isSafeInteger(q),\n      `Denominator must be a safe integer, got ${q}`\n    );\n    assert(q !== 0, 'Denominator must not be zero');\n\n    if (q < 0) {\n      p = -p;\n      q = -q;\n    }\n\n    if (p === 0) {\n      q = 1;\n    }\n\n    const div = num_gcd(p, q);\n    if (div > 1) {\n      p = p / div;\n      q = q / div;\n    }\n    this.p = p;\n    this.q = q;\n  }\n\n  //\n  // Operations returning Rational\n  //\n  floor(): Rational {\n    const divmod = num_divmod(this.p, this.q);\n    let result = new Rational(divmod.quotient, 1);\n    if (result.less(Rational.zero) && divmod.remainder !== 0) {\n      result = result.sub(Rational.one);\n    }\n    return result;\n  }\n\n  negate(): Rational {\n    return new Rational(-this.p, this.q);\n  }\n\n  invert(): Rational {\n    return new Rational(this.q, this.p);\n  }\n\n  add(other: Rational): Rational {\n    return new Rational(this.p * other.q + this.q * other.p, this.q * other.q);\n  }\n\n  sub(other: Rational): Rational {\n    return new Rational(this.p * other.q - this.q * other.p, this.q * other.q);\n  }\n\n  mul(other: Rational | number): Rational {\n    if (typeof other == 'number') {\n      other = Rational.fromFloat(other);\n    }\n    return new Rational(this.p * other.p, this.q * other.q);\n  }\n\n  div(other: Rational): Rational {\n    return new Rational(this.p * other.q, this.q * other.p);\n  }\n\n  clamp(min: Rational | number, max: Rational | number): Rational {\n    if (typeof min == 'number') {\n      min = Rational.fromFloat(min);\n    }\n    if (typeof max == 'number') {\n      max = Rational.fromFloat(max);\n    }\n\n    if (this.less(min)) return min;\n    if (max.less(this)) return max;\n    return this;\n  }\n\n  //\n  // Operations NOT returning Rational\n  //\n  divmod(other: Rational): { quotient: Rational; remainder: Rational } {\n    var quotient = this.div(other);\n    var div = quotient.floor();\n    var mod = this.sub(other.mul(div));\n    return { quotient: div, remainder: mod };\n  }\n\n  equal(other: Rational): boolean {\n    return this.p === other.p && this.q === other.q;\n  }\n\n  isNegative(): boolean {\n    return this.p < 0;\n  }\n  isPositive(): boolean {\n    return this.p > 0;\n  }\n\n  isOne(): boolean {\n    return this.p === 1;\n  }\n\n  isZero(): boolean {\n    return this.p === 0;\n  }\n\n  less(other: Rational): boolean {\n    return this.p * other.q < this.q * other.p;\n  }\n\n  toFloat(): number {\n    return this.p / this.q;\n  }\n\n  toString(): string {\n    return this.toFraction();\n  }\n\n  toFraction(): string {\n    if (this.q === 1) {\n      return this.p.toString();\n    }\n    return this.p.toString() + '/' + this.q.toString();\n  }\n\n  toDecimal(maxDigits?: number, roundingFactor?: Rational): string {\n    if (maxDigits == null) {\n      maxDigits = 3;\n    }\n    if (roundingFactor == null) {\n      roundingFactor = new Rational(5, 10 ** (maxDigits + 1));\n    }\n\n    let sign = '';\n    let x: Rational = this;\n    if (x.isNegative()) {\n      sign = '-';\n      x = x.negate();\n    }\n    x = x.add(roundingFactor);\n    let divmod = num_divmod(x.p, x.q);\n    var integerPart = divmod.quotient.toString();\n    var decimalPart = '';\n    var fraction = new Rational(divmod.remainder, x.q);\n    let ten = new Rational(10, 1);\n    while (maxDigits > 0 && !fraction.equal(roundingFactor)) {\n      fraction = fraction.mul(ten);\n      roundingFactor = roundingFactor.mul(ten);\n      let divmod = num_divmod(fraction.p, fraction.q);\n      decimalPart += divmod.quotient.toString();\n      fraction = new Rational(divmod.remainder, fraction.q);\n      maxDigits--;\n    }\n    if (fraction.equal(roundingFactor)) {\n      while (decimalPart[decimalPart.length - 1] === '0') {\n        decimalPart = decimalPart.slice(0, decimalPart.length - 1);\n      }\n    }\n    if (decimalPart !== '') {\n      return sign + integerPart + '.' + decimalPart;\n    }\n    return sign + integerPart;\n  }\n\n  toMixed(): string {\n    if (this.isZero()) {\n      return '0';\n    }\n\n    const { quotient, remainder } = this.divmod(Rational.one);\n\n    let parts: string[] = [];\n    if (!quotient.isZero()) {\n      parts.push(quotient.toFraction());\n    }\n    if (!remainder.isZero()) {\n      parts.push(remainder.toFraction());\n    }\n\n    return parts.join(' + ');\n  }\n\n  //\n  // Statics\n  //\n  static fromFloat(num: number): Rational {\n    if (Number.isInteger(num)) {\n      return new this(num, 1);\n    }\n\n    // Sufficient precision for our data?\n    const r = new Rational(\n      Math.round(num * FLOAT_CONVERT_PRECISION),\n      FLOAT_CONVERT_PRECISION\n    );\n\n    const divmod = r.divmod(Rational.one);\n    for (const [key, value] of lookups) {\n      if (divmod.remainder.equal(key)) {\n        return divmod.quotient.add(value);\n      }\n    }\n\n    return r;\n  }\n  static fromInts(p: number, q: number): Rational {\n    return new this(p, q);\n  }\n\n  static fromString(str: string): Rational {\n    let sum = Rational.zero;\n\n    for (let part of str.split('+')) {\n      part = part.trim();\n      if (!part) continue;\n\n      const index = part.indexOf('/');\n      if (index === -1) {\n        sum = sum.add(Rational.fromFloat(Number(part)));\n      } else {\n        const p = Number(part.slice(0, index));\n        const q = Number(part.slice(index + 1));\n        sum = sum.add(Rational.fromInts(p, q));\n      }\n    }\n\n    return sum;\n  }\n\n  static zero = new Rational(0, 1);\n  static one = new Rational(1, 1);\n  static oneThird = new Rational(1, 3);\n  static twoThirds = new Rational(2, 3);\n}\n\nconst lookups: [Rational, Rational][] = [];\n\nfor (let q = 2; q < 100; q++) {\n  for (let p = 1; p < q; p++) {\n    const num = p / q;\n\n    // Is there a better way to quickly filter out non-repeating decimals?\n    if (num.toString().length < 10) {\n      continue;\n    }\n\n    // Support computer input, use proper rounding\n    const rounded = new Rational(\n      Math.round(num * FLOAT_CONVERT_PRECISION),\n      FLOAT_CONVERT_PRECISION\n    );\n    lookups.push([rounded, Rational.fromInts(p, q)]);\n\n    // Support human input, who just leave off the end after a while\n    const floored = new Rational(\n      Math.floor(num * FLOAT_CONVERT_PRECISION),\n      FLOAT_CONVERT_PRECISION\n    );\n    lookups.push([floored, Rational.fromInts(p, q)]);\n  }\n}\n","import { Rational } from './rational';\nimport { assert } from './util';\n\nimport * as schema from './schema';\n\ninterface IBaseDisplayable {\n  name: string;\n  localised_name: schema.LocalisedName;\n  icon_col: number;\n  icon_row: number;\n}\n\nexport class BaseDisplayable {\n  readonly name: string;\n  readonly localisedName: schema.LocalisedName;\n  readonly iconCol: number;\n  readonly iconRow: number;\n\n  constructor(data: IBaseDisplayable) {\n    this.name = data.name;\n    this.localisedName = data.localised_name;\n    this.iconCol = data.icon_col;\n    this.iconRow = data.icon_row;\n  }\n\n  get niceName(): string {\n    return this.localisedName.en;\n  }\n}\n\nexport class Item extends BaseDisplayable {\n  readonly group: string;\n  readonly subgroup: string;\n  readonly order: string;\n  readonly fuelValue: number | null;\n\n  readonly usedBy: Recipe[] = [];\n  readonly madeBy: Recipe[] = [];\n\n  constructor(d: schema.Item) {\n    super(d);\n\n    this.group = d.group;\n    this.subgroup = d.subgroup;\n    this.order = d.order;\n    this.fuelValue = d.fuel_value ?? null;\n  }\n}\n\nexport class Module extends Item {\n  readonly type: 'module';\n  readonly limitedTo: Set<string>;\n  readonly effects: {\n    speed: Rational;\n    productivity: Rational;\n    consumption: Rational;\n    pollution: Rational;\n  };\n\n  constructor(d: schema.ModuleItem) {\n    super(d);\n    this.type = d.type;\n    this.limitedTo = new Set(d.limitation);\n\n    this.effects = {\n      speed: Rational.fromFloat((d.effect.speed || { bonus: 0 }).bonus),\n      productivity: Rational.fromFloat(\n        (d.effect.productivity || { bonus: 0 }).bonus\n      ),\n      consumption: Rational.fromFloat(\n        (d.effect.consumption || { bonus: 0 }).bonus\n      ),\n      pollution: Rational.fromFloat((d.effect.pollution || { bonus: 0 }).bonus),\n    };\n  }\n\n  canUseWith(recipe: Recipe): boolean {\n    if (this.limitedTo.size === 0) {\n      return true;\n    }\n\n    return this.limitedTo.has(recipe.name);\n  }\n}\n\nexport class Fluid extends Item {\n  readonly defaultTemperature: number;\n  readonly type: 'fluid' = 'fluid';\n\n  constructor(d: schema.FluidItem) {\n    super(d);\n    this.defaultTemperature = d.default_temperature;\n  }\n}\n\nexport class Ingredient {\n  readonly type: 'item' | 'fluid';\n  readonly name: string;\n  amount: Rational; // TODO: readonly\n  readonly item: Item;\n\n  constructor(d: schema.Ingredient, gd: GameData) {\n    this.name = d.name;\n    this.amount = Rational.fromFloat(d.amount);\n    this.type = d.type ?? 'item';\n    this.item = gd.getItem(d.name);\n  }\n\n  get niceName(): string {\n    return `${this.amount.toDecimal()} × ${this.item.niceName}`;\n  }\n}\n\nexport class FluidIngredient extends Ingredient {\n  readonly type: 'fluid' = 'fluid';\n  readonly item: Fluid;\n  readonly minimumTemperature: number;\n  readonly maximumTemperature: number;\n\n  constructor(d: schema.Ingredient, gd: GameData) {\n    super(d, gd);\n    this.item = gd.getFluid(d.name);\n\n    this.minimumTemperature = d.minimum_temperature || -Infinity;\n    this.maximumTemperature = d.maximum_temperature || Infinity;\n\n    if (this.maximumTemperature >= 1.797e308) {\n      this.maximumTemperature = Infinity;\n    }\n    if (this.minimumTemperature <= -1.797e308) {\n      this.minimumTemperature = -Infinity;\n    }\n  }\n\n  get niceName(): string {\n    const min = this.minimumTemperature;\n    const max = this.maximumTemperature;\n    let range = '';\n    if (min !== -Infinity && max !== Infinity) {\n      range = ` (${min}° – ${max}°)`;\n    } else if (max !== Infinity) {\n      range = ` (≤ ${max}°)`;\n    } else if (min !== -Infinity) {\n      range = ` (≥ ${max}°)`;\n    }\n    return `${this.amount.toDecimal()} × ${this.item.niceName}${range}`;\n  }\n}\n\nexport class Product {\n  readonly name: string;\n  readonly item: Item;\n  amount: Rational;\n\n  constructor(d: schema.Product, gd: GameData) {\n    this.name = d.name;\n    this.item = gd.getItem(d.name);\n\n    let amount;\n    if ('amount' in d) {\n      amount = Rational.fromFloat(d.amount);\n    } else {\n      amount = Rational.fromInts(d.amount_min + d.amount_max, 2);\n    }\n\n    if (typeof d.probability == 'number') {\n      if (d.probability === 0) {\n        amount = Rational.zero;\n      } else if (d.probability !== 1) {\n        assert(d.probability > 0);\n        assert(d.probability < 1);\n        amount = amount.mul(Rational.fromFloat(d.probability));\n      }\n    }\n    this.amount = amount;\n  }\n\n  get niceName(): string {\n    return `${this.amount.toDecimal()} × ${this.item.niceName}`;\n  }\n\n  satisfies(ingredient: Ingredient): boolean {\n    return ingredient.item === this.item;\n  }\n}\n\nexport class FluidProduct extends Product {\n  readonly item: Fluid;\n  readonly temperature: number;\n\n  constructor(d: schema.Product, gd: GameData) {\n    super(d, gd);\n    this.item = gd.getFluid(d.name);\n    this.temperature = d.temperature || this.item.defaultTemperature;\n  }\n\n  get niceName(): string {\n    let temp = '';\n    if (this.temperature !== this.item.defaultTemperature) {\n      temp = ` (${this.temperature}°)`;\n    }\n    return `${this.amount.toDecimal()} × ${this.item.niceName}${temp}`;\n  }\n\n  satisfies(ingredient: Ingredient): boolean {\n    return (\n      ingredient.item === this.item &&\n      ingredient instanceof FluidIngredient &&\n      ingredient.maximumTemperature >= this.temperature &&\n      ingredient.minimumTemperature <= this.temperature\n    );\n  }\n}\n\nexport class Recipe extends BaseDisplayable {\n  readonly category: string;\n  readonly ingredients: Ingredient[];\n  readonly products: Product[];\n  readonly craftingTime: Rational;\n\n  readonly madeIn: AssemblingMachine[] = [];\n\n  constructor(d: schema.Recipe, gd: GameData) {\n    super(d);\n    this.category = d.category;\n    this.craftingTime = Rational.fromFloat(d.energy_required);\n\n    this.ingredients = d.ingredients.map((ingredient) => {\n      if (ingredient.type === 'fluid') {\n        return new FluidIngredient(ingredient, gd);\n      } else {\n        return new Ingredient(ingredient, gd);\n      }\n    });\n\n    this.products = d.results.map((result) => {\n      if (result.type === 'fluid') {\n        return new FluidProduct(result, gd);\n      } else {\n        return new Product(result, gd);\n      }\n    });\n  }\n\n  get niceName(): string {\n    if (this.products.length !== 1) {\n      return super.niceName;\n    } else if (this.products[0].amount.equal(Rational.one)) {\n      return this.products[0].item.niceName;\n    } else {\n      return this.products[0].niceName;\n    }\n  }\n}\n\nexport abstract class BaseEntity extends BaseDisplayable {\n  // constructor exists to constrain type\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(data: schema.BaseEntity) {\n    super(data);\n  }\n}\n\nexport class AssemblingMachine extends BaseEntity {\n  readonly craftingCategories: string[];\n  readonly craftingSpeed: number;\n  readonly moduleSlots: number;\n\n  constructor(data: schema.AssemblingMachine) {\n    super(data);\n    this.craftingCategories = data.crafting_categories;\n    this.craftingSpeed = data.crafting_speed;\n    this.moduleSlots = data.module_slots;\n  }\n\n  canBuildRecipe(recipe: Recipe): boolean {\n    // TODO: this needs to account for entity fluid boxes\n    if (this.craftingCategories.indexOf(recipe.category) === -1) {\n      return false;\n    }\n\n    // ingredient_count seems to be item specific. this is disabled until\n    // I can figure out how many fluids a machine can support\n    // if (recipe.ingredients.length > this.data.ingredient_count) {\n    //     return false\n    // }\n    return true;\n  }\n}\n\nexport type Entity = AssemblingMachine;\n\ntype CategoryMap = { [category: string]: AssemblingMachine[] };\n\nconst createCategoryMap = (entities: Iterable<Entity>): CategoryMap => {\n  const catMap: CategoryMap = {};\n  for (const entity of entities) {\n    for (const category of entity.craftingCategories) {\n      if (!catMap.hasOwnProperty(category)) {\n        catMap[category] = [];\n      }\n      catMap[category].push(entity);\n    }\n  }\n  return catMap;\n};\n\nexport class GameData {\n  readonly itemMap = new Map<string, Item>();\n\n  readonly fluids: Fluid[] = [];\n  readonly fluidMap = new Map<string, Fluid>();\n\n  readonly modules: Module[] = [];\n  readonly moduleMap = new Map<string, Module>();\n\n  readonly recipes: Recipe[] = [];\n  readonly recipeMap = new Map<string, Recipe>();\n\n  readonly entityMap = new Map<string, Entity>();\n\n  readonly categoryMap: CategoryMap;\n  readonly groups: schema.Groups;\n\n  readonly clockSprite: BaseDisplayable;\n  readonly noModuleModule: Module;\n\n  readonly spriteHash: string;\n\n  constructor(raw: schema.Root) {\n    this.spriteHash = raw.sprites.hash;\n\n    for (const edata of Object.values(raw['assembling-machine'])) {\n      const entity = new AssemblingMachine(edata);\n      this.entityMap.set(entity.name, entity);\n    }\n\n    for (const edata of Object.values(raw['furnace'])) {\n      const entity = new AssemblingMachine(edata);\n      this.entityMap.set(entity.name, entity);\n    }\n\n    for (const edata of Object.values(raw['rocket-silo'])) {\n      const entity = new AssemblingMachine(edata);\n      this.entityMap.set(entity.name, entity);\n    }\n\n    for (const rawMiningDrill of Object.values(raw['mining-drill'])) {\n      const rawMachine: schema.AssemblingMachine = {\n        ...rawMiningDrill,\n        crafting_categories: rawMiningDrill.resource_categories.map(\n          (r) => 'resource-' + r\n        ),\n        crafting_speed: rawMiningDrill.mining_speed,\n        ingredient_count: 1,\n      };\n      const machine = new AssemblingMachine(rawMachine);\n      this.entityMap.set(rawMachine.name, machine);\n    }\n\n    for (const rawItem of Object.values(raw.items)) {\n      if ('type' in rawItem && rawItem.type === 'fluid') {\n        const fluid = new Fluid(rawItem);\n        this.itemMap.set(fluid.name, fluid);\n        this.fluids.push(fluid);\n        this.fluidMap.set(fluid.name, fluid);\n      } else if ('type' in rawItem && rawItem.type === 'module') {\n        const item = new Module(rawItem);\n        this.itemMap.set(item.name, item);\n        this.modules.push(item);\n        this.moduleMap.set(item.name, item);\n      } else {\n        const item = new Item(rawItem);\n        this.itemMap.set(item.name, item);\n      }\n    }\n\n    const recipes: Recipe[] = [];\n\n    // Add real recipes\n    for (const rawRecipe of Object.values(raw.recipes)) {\n      recipes.push(new Recipe(rawRecipe, this));\n    }\n\n    // Add fake recipes for resources\n    for (const rawResource of Object.values(raw.resource)) {\n      const category = `resource-${rawResource.category}`;\n      const ingredients: schema.Ingredient[] = [];\n      const { fluid_amount, required_fluid } = rawResource.minable;\n      if (fluid_amount && required_fluid) {\n        ingredients.push({\n          name: required_fluid,\n          type: 'fluid',\n          // 10 in lua becomes 1 in game. not sure why\n          amount: fluid_amount / 10,\n        });\n      }\n      recipes.push(\n        new Recipe(\n          {\n            name: `resource-${rawResource.name}`,\n            localised_name: rawResource.localised_name,\n            category,\n            energy_required: rawResource.minable.mining_time,\n            group: category, // TODO: better group?\n            subgroup: category, // TODO: better subgroup?\n            icon_col: rawResource.icon_col,\n            icon_row: rawResource.icon_row,\n            ingredients,\n            results: rawResource.minable.results,\n            type: 'recipe',\n            order: 'A',\n          },\n          this\n        )\n      );\n    }\n\n    for (const recipe of recipes) {\n      for (const entity of this.entityMap.values()) {\n        if ('canBuildRecipe' in entity && entity.canBuildRecipe(recipe)) {\n          recipe.madeIn.push(entity);\n        }\n      }\n      if (!recipe.madeIn.length) {\n        // Filter to only recipes buildable by knonwn assembling machines\n        console.warn(`Ignoring uncraftable recipe: ${recipe.name}`);\n        continue;\n      }\n\n      const hasProducts = recipe.products.some((p) => p.amount.isPositive());\n      if (!hasProducts) {\n        continue;\n      }\n\n      for (const ingredient of recipe.ingredients) {\n        ingredient.item.usedBy.push(recipe);\n      }\n      for (const product of recipe.products) {\n        product.item.madeBy.push(recipe);\n      }\n      this.recipes.push(recipe);\n      this.recipeMap.set(recipe.name, recipe);\n    }\n\n    this.categoryMap = createCategoryMap(this.entityMap.values());\n    this.groups = raw.groups;\n\n    this.clockSprite = new BaseDisplayable({\n      ...raw.sprites.extra['clock'],\n      name: 'clock',\n      localised_name: { en: 'Clock' },\n    });\n\n    this.noModuleModule = new Module({\n      ...raw.sprites.extra['slot_icon_module'],\n      type: 'module',\n      name: 'no_module',\n      localised_name: { en: 'No Module' },\n      category: 'speed',\n      effect: {},\n      limitation: [],\n      rocket_launch_products: [],\n\n      group: '',\n      subgroup: '',\n      order: '',\n    });\n  }\n\n  getEntity(name: string): Entity {\n    const entity = this.entityMap.get(name);\n    assert(entity, `no entity with name: ${name}`);\n    return entity;\n  }\n\n  getFluid(name: string): Fluid {\n    const fluid = this.fluidMap.get(name);\n    assert(fluid, `no fluid with name: ${name}`);\n    return fluid;\n  }\n\n  getItem(name: string): Item {\n    const item = this.itemMap.get(name);\n    assert(item, `no item with name: ${name}`);\n    return item;\n  }\n\n  getModule(name: string): Module {\n    const module = this.moduleMap.get(name);\n    assert(module, `no module with name: ${name}`);\n    return module;\n  }\n\n  getRecipe(name: string): Recipe {\n    const recipe = this.recipeMap.get(name);\n    assert(recipe, `no recipe with name: ${name}`);\n    return recipe;\n  }\n\n  getItemOrder(item: Item | Fluid): [string, string, string, string] {\n    let groupOrder = '';\n    let subgroupOrder = '';\n    const group = this.groups[item.group];\n    if (group) {\n      groupOrder = group.order;\n      subgroupOrder = group.subgroups[item.subgroup] || '';\n    }\n    return [groupOrder, subgroupOrder, item.order, item.name];\n  }\n\n  // Sort by\n  // 1. group\n  // 2. subgroup\n  // 3. item order string\n  // 4. item name\n  sortByItem<T>(collection: T[], keyFn: (obj: T) => Item | Fluid): void {\n    collection.sort((a: T, b: T) => {\n      const ordersA = this.getItemOrder(keyFn(a));\n      const ordersB = this.getItemOrder(keyFn(b));\n\n      for (const i in ordersA) {\n        const valA = ordersA[i];\n        const valB = ordersB[i];\n        if (valA > valB) {\n          return 1;\n        } else if (valA < valB) {\n          return -1;\n        }\n      }\n\n      return 0;\n    });\n  }\n}\n","import * as game from './game';\nimport { AppSettingsData } from './state';\nimport { assert } from './util';\n\nexport function getDefaultMachine(\n  input: game.Recipe | string,\n  settings: AppSettingsData,\n  gameData: game.GameData\n): game.AssemblingMachine {\n  const category = input instanceof game.Recipe ? input.category : input;\n\n  let defaultMachine: game.AssemblingMachine;\n  if (category in settings.assemblerOverrides) {\n    defaultMachine = settings.assemblerOverrides[category];\n  } else {\n    defaultMachine = gameData.categoryMap[category][0];\n  }\n\n  if (input instanceof game.Recipe) {\n    assert(input.madeIn.indexOf(defaultMachine) !== -1);\n  }\n\n  return defaultMachine;\n}\n","import * as game from './game';\nimport { Rational } from './rational';\nimport { CompleteState, AppSettingsData } from './state';\nimport { getDefaultMachine } from './stateutil';\nimport { mapValues } from './util';\n\nimport { inflate, deflate } from 'pako';\n\ntype SerializedRowV1 = [\n  string, // recipe name, required\n  string | null, // assembling machine, null if default\n  number, // num assembling machines\n  (string | null)[], // modules,\n  string | undefined, // beacon module, if chosen\n  number // num beacon modules\n];\n\ninterface SerializedAppStateV1 {\n  version: 1;\n  data: SerializedRowV1[];\n}\n\nfunction state1to2(state: SerializedAppStateV1): SerializedAppStateV2 {\n  return {\n    version: 2,\n    data: {\n      rows: state.data,\n      settings: {\n        assemblerOverrides: {},\n      },\n    },\n  };\n}\n\ninterface SerializedAppStateV2 {\n  version: 2;\n  data: {\n    rows: SerializedRowV1[];\n    settings: SerializedSettings;\n  };\n}\n\n// V3 = v2 but compressed\nfunction state2to3(state: SerializedAppStateV2): SerializedAppStateV3 {\n  return {\n    version: 3,\n    data: state.data,\n  };\n}\n\ninterface SerializedAppStateV3 {\n  version: 3;\n  data: SerializedAppStateV2['data'];\n}\n\n// v4 is multiple groups of rows\nfunction state3to4(state: SerializedAppStateV3): SerializedAppStateV4 {\n  return {\n    version: 4,\n    data: {\n      settings: state.data.settings,\n      groups: [\n        {\n          name: 'Factory 1',\n          rows: state.data.rows,\n        },\n      ],\n    },\n  };\n}\n\n// v4 has multiple groups, each with multiple rows\ninterface SerializedGroupV4 {\n  name: string;\n  rows: SerializedRowV1[];\n}\ninterface SerializedAppStateV4 {\n  version: 4;\n  data: {\n    groups: SerializedGroupV4[];\n    settings: SerializedSettings;\n  };\n}\n\nfunction groupv4to5(group: SerializedGroupV4): SerializedGroupV5 {\n  return {\n    name: group.name,\n    rows: group.rows.map((r) => {\n      return [r[0], r[1], r[2].toString(), r[3], r[4], r[5]];\n    }),\n  };\n}\n\n// v5 has multiple groups, each with multiple rows\nfunction state4to5(state: SerializedAppStateV4): SerializedAppStateV5 {\n  return {\n    version: 5,\n    data: {\n      settings: state.data.settings,\n      groups: state.data.groups.map(groupv4to5),\n    },\n  };\n}\ntype SerializedRowV5 = [\n  string, // recipe name, required\n  string | null, // assembling machine, null if default\n  string, // num assembling machines as a rational\n  (string | null)[], // modules,\n  string | undefined, // beacon module, if chosen\n  number // num beacon modules\n];\n\ninterface SerializedGroupV5 {\n  name: string;\n  rows: SerializedRowV5[];\n}\ninterface SerializedAppStateV5 {\n  version: 5;\n  data: {\n    groups: SerializedGroupV5[];\n    settings: SerializedSettings;\n  };\n}\n\ninterface SerializedAppStateOther {\n  version: 0;\n  data: unknown;\n}\n\ntype MultiSerializedAppState =\n  | SerializedAppStateOther\n  | SerializedAppStateV1\n  | SerializedAppStateV2\n  | SerializedAppStateV3\n  | SerializedAppStateV4\n  | SerializedAppStateV5;\n\n// Latest values\ntype SerializedRow = SerializedRowV5;\ntype SerializedAppState = SerializedAppStateV5;\n\ninterface SerializedSettings {\n  assemblerOverrides: {\n    [category: string]: string;\n  };\n}\n\nexport function setLocalStorageState(\n  state: CompleteState,\n  gameData: game.GameData\n): void {\n  localStorage.setItem('appstate', JSON.stringify(serialize(state, gameData)));\n}\n\nexport function getLocalStorageState(\n  gameData: game.GameData\n): CompleteState | null {\n  const statestr = localStorage.getItem('appstate');\n  if (!statestr) {\n    return null;\n  }\n  const stateobj: MultiSerializedAppState = JSON.parse(statestr);\n  if (stateobj.version === 1) {\n    (stateobj as any).version = 3;\n  }\n\n  return deserialize(gameData, stateobj);\n}\n\nexport function setUrlState(\n  state: CompleteState,\n  gameData: game.GameData\n): void {\n  const serialized = serialize(state, gameData);\n  const version = serialized.version;\n  let str = JSON.stringify(serialized.data);\n  // compress\n  str = btoa(deflate(str, { to: 'string' }));\n\n  window.history.replaceState('', '', `#${version}-${str}`);\n}\n\nfunction serialize(\n  state: CompleteState,\n  gameData: game.GameData\n): SerializedAppState {\n  const groups = state.groups.map((group) => {\n    return {\n      name: group.name,\n      rows: group.rows.map((row) => {\n        let machineName: string | null = row.machine.name;\n        const defaultMachine = getDefaultMachine(\n          row.recipe,\n          state.settings,\n          gameData\n        );\n\n        if (defaultMachine.name === machineName) {\n          machineName = null;\n        }\n\n        const srow: SerializedRow = [\n          row.recipe.name,\n          machineName,\n          row.numMachines.toFraction(),\n          row.modules.map((m) => (m ? m.name : null)),\n          row.beaconModule ? row.beaconModule.name : undefined,\n          row.numBeacons,\n        ];\n        return srow;\n      }),\n    };\n  });\n\n  const settings = {\n    assemblerOverrides: mapValues(\n      state.settings.assemblerOverrides,\n      (a) => a.name\n    ),\n  };\n\n  return {\n    version: 5,\n    data: { groups, settings },\n  };\n}\n\nconst reStateUrl = /^#(\\d+)?(?:-)?(.+)$/;\n\nexport function getUrlState(gameData: game.GameData): CompleteState | null {\n  const matches = reStateUrl.exec(document.location.hash);\n  if (!matches) {\n    return null;\n  }\n  const version = Number(matches[1] || 1);\n\n  let str = decodeURIComponent(matches[2]);\n  if (version > 2) {\n    str = inflate(atob(str), { to: 'string' });\n  }\n\n  let data = JSON.parse(str);\n\n  return deserialize(gameData, {\n    version: version as 0,\n    data,\n  });\n}\n\nfunction migrateSerializedState(\n  state: MultiSerializedAppState\n): SerializedAppState {\n  switch (state.version) {\n    case 1:\n      state = state1to2(state);\n    // fall through\n    case 2:\n      state = state2to3(state);\n    // fall through\n    case 3:\n      state = state3to4(state);\n    // fall through\n    case 4:\n      state = state4to5(state);\n    // fall through\n    case 5:\n      // the latest\n      break;\n    default:\n      throw new Error(`unknown state: ${state}`);\n  }\n\n  return state;\n}\n\nfunction deserialize(\n  gameData: game.GameData,\n  unmigrated: MultiSerializedAppState\n): CompleteState {\n  const migrated = migrateSerializedState(unmigrated).data;\n\n  const state: CompleteState = {\n    settings: deserializeSettings(gameData, migrated.settings),\n    groups: [],\n  };\n\n  state.groups = migrated.groups.map((group) => {\n    return {\n      name: group.name,\n      rows: group.rows.map(\n        ([\n          recipeName,\n          machineName,\n          numMachines,\n          modules,\n          beaconModule,\n          numBeacons,\n        ]) => {\n          const recipe = gameData.getRecipe(recipeName);\n\n          const machine = machineName\n            ? gameData.getEntity(machineName)\n            : getDefaultMachine(recipe, state.settings, gameData);\n\n          return {\n            recipe: recipe,\n            machine: machine,\n            numMachines: Rational.fromString(numMachines),\n            modules: modules.map((n) => (n ? gameData.getModule(n) : null)),\n            beaconModule: beaconModule\n              ? gameData.getModule(beaconModule)\n              : null,\n            numBeacons: numBeacons || 0,\n          };\n        }\n      ),\n    };\n  });\n\n  return state;\n}\n\nfunction deserializeSettings(\n  gameData: game.GameData,\n  serialized: SerializedSettings\n): AppSettingsData {\n  return {\n    assemblerOverrides: mapValues(\n      serialized.assemblerOverrides,\n      (name) => gameData.getEntity(name)\n    ),\n  };\n}\n","import * as game from './game';\n\ninterface SignalHandler<T> {\n  (arg: T): void;\n}\n\nexport class Signal<T> {\n  handlers: SignalHandler<T>[] = [];\n\n  addHandler(handler: SignalHandler<T>): void {\n    const index = this.handlers.indexOf(handler);\n    if (index === -1) {\n      this.handlers.push(handler);\n    }\n  }\n\n  removeHandler(handler: SignalHandler<T>): void {\n    const index = this.handlers.indexOf(handler);\n    if (index !== -1) {\n      this.handlers.splice(index, 1);\n    }\n  }\n\n  dispatch = (arg: T): void => {\n    for (const handler of this.handlers) {\n      handler(arg);\n    }\n  };\n}\n\nexport const addIngredientFilter = new Signal<game.Ingredient>();\nexport const addProductFilter = new Signal<game.Product>();\nexport const addRecipeRow = new Signal<game.Recipe>();\n","import * as game from './game';\n\nimport { clone } from './util';\n\nimport { Rational } from './rational';\n\nimport { RecipeRowData } from './state';\n\nexport class Totals {\n  ingredients: game.Ingredient[] = [];\n  products: game.Product[] = [];\n\n  constructor(rows?: RecipeRowData[]) {\n    if (rows && rows.length) {\n      for (const row of rows) {\n        this.addRow(row);\n      }\n    }\n  }\n\n  addIngredient(newIngredient: game.Ingredient): void {\n    for (const oldIng of this.ingredients) {\n      if (oldIng.name !== newIngredient.name) {\n        continue;\n      }\n      if (\n        newIngredient instanceof game.FluidIngredient &&\n        oldIng instanceof game.FluidIngredient\n      ) {\n        if (\n          newIngredient.maximumTemperature !== oldIng.maximumTemperature ||\n          newIngredient.minimumTemperature !== oldIng.minimumTemperature\n        ) {\n          continue;\n        }\n      }\n\n      oldIng.amount = oldIng.amount.add(newIngredient.amount);\n      return;\n    }\n\n    for (const oldProd of this.products) {\n      if (!oldProd.satisfies(newIngredient)) continue;\n      if (oldProd.amount.less(newIngredient.amount)) {\n        newIngredient.amount = newIngredient.amount.sub(oldProd.amount);\n        oldProd.amount = Rational.zero;\n        if (newIngredient.amount.isZero()) break;\n      } else {\n        oldProd.amount = oldProd.amount.sub(newIngredient.amount);\n        newIngredient.amount = Rational.zero;\n        break;\n      }\n    }\n\n    this.ingredients.push(newIngredient);\n    this.ingredients = this.ingredients.filter((p) => !p.amount.isZero());\n    this.products = this.products.filter((p) => !p.amount.isZero());\n  }\n\n  addProduct(newProduct: game.Product): void {\n    for (const oldProd of this.products) {\n      if (newProduct.name !== oldProd.name) continue;\n\n      if (\n        newProduct instanceof game.FluidProduct &&\n        oldProd instanceof game.FluidProduct\n      ) {\n        if (newProduct.temperature !== oldProd.temperature) {\n          continue;\n        }\n      }\n\n      oldProd.amount = oldProd.amount.add(newProduct.amount);\n      return;\n    }\n\n    for (const oldIng of this.ingredients) {\n      if (!newProduct.satisfies(oldIng)) continue;\n      if (newProduct.amount.less(oldIng.amount)) {\n        oldIng.amount = oldIng.amount.sub(newProduct.amount);\n        newProduct.amount = Rational.zero;\n        break;\n      } else {\n        newProduct.amount = newProduct.amount.sub(oldIng.amount);\n        oldIng.amount = Rational.zero;\n        if (newProduct.amount.isZero()) break;\n      }\n    }\n\n    this.products.push(newProduct);\n    this.ingredients = this.ingredients.filter((i) => !i.amount.isZero());\n    this.products = this.products.filter((i) => !i.amount.isZero());\n  }\n\n  addRow(row: RecipeRowData): void {\n    const effects = {\n      consumption: Rational.one,\n      pollution: Rational.one,\n      productivity: Rational.one,\n      speed: Rational.one,\n    };\n\n    for (const module of row.modules) {\n      if (!module) continue;\n      effects.consumption = effects.consumption.add(module.effects.consumption);\n      effects.pollution = effects.pollution.add(module.effects.pollution);\n      effects.productivity = effects.productivity.add(\n        module.effects.productivity\n      );\n      effects.speed = effects.speed.add(module.effects.speed);\n    }\n\n    if (row.beaconModule && row.numBeacons > 0) {\n      // assumes \"distribution_effectivity\" of 0.5 from default beacons\n      const be = row.beaconModule.effects;\n      const num = Rational.fromInts(row.numBeacons, 2);\n      effects.consumption = effects.consumption.add(be.consumption.mul(num));\n      effects.pollution = effects.pollution.add(be.pollution.mul(num));\n      effects.productivity = effects.productivity.add(be.productivity.mul(num));\n      effects.speed = effects.speed.add(be.speed.mul(num));\n    }\n\n    // Allowed -80% to de facto max of signed short int\n    effects.consumption = effects.consumption.clamp(0.2, 32767);\n    effects.pollution = effects.pollution.clamp(0.2, 32767);\n    effects.speed = effects.speed.clamp(0.2, 32767);\n\n    // Special minimum: -0%\n    effects.productivity = effects.productivity.clamp(1, 32767);\n\n    const ingredientMult = Rational.one\n      .mul(row.recipe.craftingTime.invert())\n      .mul(row.numMachines)\n      .mul(row.machine.craftingSpeed)\n      .mul(effects.speed);\n\n    const productMult = ingredientMult.mul(effects.productivity);\n\n    for (const ingredient of row.recipe.ingredients.map((ingredient) => {\n      ingredient = clone(ingredient);\n      ingredient.amount = ingredient.amount.mul(ingredientMult);\n      return ingredient;\n    })) {\n      this.addIngredient(ingredient);\n    }\n\n    for (const product of row.recipe.products.map((product) => {\n      product = clone(product);\n      product.amount = product.amount.mul(productMult);\n      return product;\n    })) {\n      this.addProduct(product);\n    }\n  }\n}\n","import * as React from 'react';\nimport Popper from 'popper.js';\n\ninterface DropdownHeader {\n  header: React.ReactNode;\n}\n\ninterface DropdownDivider {\n  divider: true;\n}\n\ninterface DropdownEntry<T> {\n  key: React.Key;\n  disabled?: boolean;\n  active?: boolean;\n  option: T;\n}\n\ntype DropdownOption<T> = DropdownHeader | DropdownDivider | DropdownEntry<T>;\n\ninterface Props<T> {\n  options: DropdownOption<T>[];\n  selected: T;\n  onSelect(selected: T): void;\n\n  renderOption(option: T): React.ReactNode;\n  renderSelected(option: T): React.ReactNode;\n}\ninterface State {\n  isOpen: boolean;\n}\n\nconst ESC_KEYCODE = 27;\n\nexport class Dropdown<T> extends React.PureComponent<Props<T>, State> {\n  buttonRef: React.RefObject<HTMLButtonElement> = React.createRef();\n\n  state: State = {\n    isOpen: false,\n  };\n\n  handleToggle = (): void => {\n    this.setState((state) => ({\n      ...state,\n      isOpen: !state.isOpen,\n    }));\n  };\n\n  handleSelect = (selected: T): void => {\n    this.props.onSelect(selected);\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  handleWantClose = (): void => {\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  render(): React.ReactNode {\n    const canToggle = this.props.options.some((option) => {\n      return 'option' in option && !option.disabled;\n    });\n\n    const classes = ['btn', 'btn-secondary'];\n    if (canToggle) {\n      classes.push('dropdown-toggle');\n    } else {\n      classes.push('disabled');\n    }\n\n    let floater: React.ReactNode | null;\n    if (this.state.isOpen) {\n      floater = (\n        <DropdownMenu\n          parentRef={this.buttonRef}\n          options={this.props.options}\n          renderOption={this.props.renderOption}\n          onSelect={this.handleSelect}\n          onWantClose={this.handleWantClose}\n        />\n      );\n    }\n\n    return (\n      <>\n        <button\n          ref={this.buttonRef}\n          className={classes.join(' ')}\n          type=\"button\"\n          onClick={() => {\n            canToggle && this.handleToggle();\n          }}\n        >\n          {this.props.renderSelected(this.props.selected)}\n        </button>\n        {floater}\n      </>\n    );\n  }\n}\n\ninterface DropdownMenuProps<T> {\n  parentRef: React.RefObject<any>;\n  options: DropdownOption<T>[];\n  renderOption(option: T): React.ReactNode;\n  onSelect(selected: T): void;\n  onWantClose(): void;\n}\n\ninterface DropdownMenuState {\n  style: object;\n}\n\nclass DropdownMenu<T> extends React.PureComponent<\n  DropdownMenuProps<T>,\n  DropdownMenuState\n> {\n  popperInstance: Popper | null = null;\n  menuRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  state: DropdownMenuState = {\n    style: {},\n  };\n\n  popperUpdate = (data: Popper.Data): Popper.Data => {\n    this.setState({\n      style: data.styles,\n    });\n    return data;\n  };\n\n  handleBodyClick = (event: MouseEvent): void => {\n    if (!this.menuRef.current) {\n      throw new Error(\n        'Click event without menu rendered. This should not happen.'\n      );\n    }\n    if (!event.target) {\n      throw new Error(\n        'Click event without click target. This should not happen.'\n      );\n    }\n    // TODO: why doesnt EventTarget satisfy \"Node\"\n    const target = event.target as any;\n    if (!this.menuRef.current.contains(target)) {\n      // Click was outside menu\n      this.props.onWantClose();\n    }\n  };\n\n  handleKeyEvent = (event: KeyboardEvent): void => {\n    if (event.keyCode === ESC_KEYCODE) {\n      this.props.onWantClose();\n    }\n  };\n\n  componentDidMount(): void {\n    if (this.popperInstance) {\n      throw new Error('Component mounted twice?');\n    }\n\n    const referenceEl = this.props.parentRef.current;\n    if (!referenceEl) {\n      throw new Error('Cannot mount DropdownMenu without parentRef');\n    }\n\n    const menuEl = this.menuRef.current;\n    if (!menuEl) {\n      throw new Error('Cannot mount DropdownMenu without menuRef');\n    }\n\n    this.popperInstance = new Popper(referenceEl, menuEl, {\n      modifiers: {\n        applyStyle: { enabled: false },\n        updateStateWithStyle: {\n          enabled: true,\n          fn: this.popperUpdate,\n        },\n      },\n    });\n\n    document.body.addEventListener('click', this.handleBodyClick);\n    document.body.addEventListener('keyup', this.handleKeyEvent);\n  }\n\n  componentWillUnmount(): void {\n    if (this.popperInstance) {\n      this.popperInstance.disableEventListeners();\n      this.popperInstance = null;\n    }\n    document.body.removeEventListener('click', this.handleBodyClick);\n    document.body.removeEventListener('keyup', this.handleKeyEvent);\n  }\n\n  renderOptions = (): React.ReactNode => {\n    return this.props.options.map((option, i) => {\n      if ('header' in option) {\n        return (\n          <h6 className=\"dropdown-header\" key={'ddkey' + i}>\n            {option.header}\n          </h6>\n        );\n      }\n      if ('divider' in option) {\n        return <div className=\"dropdown-divider\" key={'ddkey' + i} />;\n      }\n\n      const classes = ['dropdown-item'];\n      option.active && classes.push('active');\n      option.disabled && classes.push('disabled');\n\n      return (\n        <button\n          key={option.key}\n          className={classes.join(' ')}\n          onClick={() => this.props.onSelect(option.option)}\n          type=\"button\"\n        >\n          {this.props.renderOption(option.option)}\n        </button>\n      );\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div\n        className=\"dropdown-menu show\"\n        style={this.state.style}\n        ref={this.menuRef}\n      >\n        {this.renderOptions()}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Popper from 'popper.js';\n\ninterface Props {\n  relativeTo: React.RefObject<HTMLElement>;\n  content: () => React.ReactNode;\n}\n\ninterface State {\n  showSelf: boolean;\n}\n\nconst ontop: React.CSSProperties = { zIndex: 1001 };\n\nexport class Tooltip extends React.Component<Props, State> {\n  selfRef: React.RefObject<any>;\n  popperInstance: Popper | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.selfRef = React.createRef();\n    this.popperInstance = null;\n    this.state = {\n      showSelf: false,\n    };\n  }\n\n  shouldComponentUpdate(oldProps: Props, oldState: State): boolean {\n    // universal props\n    if (\n      this.props.relativeTo !== oldProps.relativeTo ||\n      this.state.showSelf !== oldState.showSelf\n    ) {\n      return true;\n    }\n\n    // Only re-render due to props.content changes if we're displaying that content\n    return this.state.showSelf && this.props.content !== oldProps.content;\n  }\n\n  initPopper(): void {\n    if (this.popperInstance) {\n      return;\n    }\n\n    const referenceEl = this.props.relativeTo.current;\n    if (!referenceEl) {\n      throw new Error('Invalid relativeTo');\n    }\n\n    const selfEl = this.selfRef.current;\n    if (!selfEl) {\n      throw new Error('No self reference yet?');\n    }\n\n    this.popperInstance = new Popper(referenceEl, selfEl, {\n      placement: 'right',\n      modifiers: {\n        offset: {\n          enabled: true,\n          offset: '0, 20',\n        },\n        preventOverflow: {\n          enabled: true,\n          boundariesElement: 'window',\n        },\n      },\n    });\n  }\n\n  cleanupPopper(): void {\n    if (this.popperInstance) {\n      this.popperInstance.disableEventListeners();\n      this.popperInstance = null;\n    }\n  }\n\n  componentDidUpdate(_: Props, prevState: State): void {\n    if (prevState.showSelf !== this.state.showSelf) {\n      if (this.state.showSelf) {\n        this.initPopper();\n      } else {\n        this.cleanupPopper();\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const referenceEl = this.props.relativeTo.current;\n    if (!referenceEl) {\n      throw new Error('Invalid relativeTo');\n    }\n\n    referenceEl.addEventListener('mouseenter', this.handleMouseEnter);\n    referenceEl.addEventListener('mouseleave', this.handleMouseLeave);\n  }\n\n  handleMouseEnter = (): void => {\n    this.setState({\n      showSelf: true,\n    });\n  };\n\n  handleMouseLeave = (): void => {\n    this.setState({\n      showSelf: false,\n    });\n  };\n\n  componentWillUnmount(): void {\n    const referenceEl = this.props.relativeTo.current;\n    if (referenceEl) {\n      referenceEl.removeEventListener('mouseenter', this.handleMouseEnter);\n      referenceEl.removeEventListener('mouseleave', this.handleMouseLeave);\n    }\n  }\n\n  render(): React.ReactNode {\n    if (!this.state.showSelf) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(\n      <div style={ontop} ref={this.selfRef}>\n        {this.props.content()}\n      </div>,\n      document.body\n    );\n  }\n}\n","import * as React from 'react';\n\ninterface Props {\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n}\n\ninterface State {\n  txtValue: string;\n}\n\nexport class IntegerInput extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      txtValue: props.value.toString(),\n    };\n  }\n\n  componentDidUpdate(oldProps: Props): void {\n    if (oldProps.value !== this.props.value) {\n      this.setState((state) => ({\n        txtValue:\n          Number(state.txtValue) === this.props.value\n            ? state.txtValue\n            : this.props.value.toString(),\n      }));\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const value = event.target.value;\n    this.setState({ txtValue: value }, () => {\n      if (!value.trim()) {\n        return;\n      }\n      const num = Number(value);\n      if (isNaN(num)) {\n        return;\n      }\n      if (!Number.isInteger(num)) {\n        return;\n      }\n\n      if (typeof this.props.min === 'number' && num < this.props.min) {\n        // TODO: Error\n        return;\n      }\n\n      this.props.onChange(num);\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <input\n        className=\"form-control\"\n        value={this.state.txtValue}\n        onChange={this.handleChange}\n        type=\"number\"\n        min={this.props.min}\n        step=\"1\"\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Rational } from '../../rational';\n\ninterface Props {\n  value: Rational;\n  onChange: (value: Rational) => void;\n  positiveOnly?: boolean;\n}\n\ninterface State {\n  error: string | undefined;\n  txtValue: string;\n}\n\nexport class RationalInput extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      error: '',\n      txtValue: rationalToString(props.value),\n    };\n  }\n\n  componentDidUpdate(oldProps: Props): void {\n    if (!this.props.value.equal(oldProps.value)) {\n      let parsed: Rational;\n      try {\n        parsed = stringToRational(this.state.txtValue);\n      } catch (err) {\n        return;\n      }\n\n      if (!parsed.equal(this.props.value)) {\n        this.setState({\n          txtValue: rationalToString(this.props.value),\n        });\n      }\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const str = event.target.value;\n\n    let errmsg: string | undefined;\n    let parsed: Rational | undefined;\n\n    try {\n      parsed = stringToRational(str);\n    } catch (err) {\n      errmsg = err.message;\n    }\n\n    if (parsed && this.props.positiveOnly && parsed.isNegative()) {\n      parsed = undefined;\n      errmsg = 'Number must be positive';\n    }\n    this.setState({ txtValue: str, error: errmsg }, () => {\n      if (parsed) {\n        this.props.onChange(parsed);\n      }\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <input\n        className={classNames('form-control', {\n          'is-invalid': !!this.state.error,\n        })}\n        value={this.state.txtValue}\n        onChange={this.handleChange}\n        type=\"text\"\n      />\n    );\n  }\n}\n\nfunction stringToRational(str: string): Rational {\n  if (!str.trim()) {\n    throw new Error('Empty!');\n  }\n\n  const index = str.indexOf('/');\n  const lastIndex = str.lastIndexOf('/');\n  if (index !== lastIndex) {\n    throw new Error('Too many slashes');\n  }\n\n  return Rational.fromString(str);\n}\n\nfunction rationalToString(rational: Rational): string {\n  const dec = rational.toFloat().toString();\n  if (dec.length < 10) {\n    return dec;\n  }\n\n  return rational.toMixed();\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { BaseDisplayable } from '../game';\nimport { Tooltip } from './generic';\n\nimport styles from './Icon.module.css';\n\ninterface Props {\n  obj: BaseDisplayable;\n\n  className?: string;\n  title?: string;\n  onClick?(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\n  tooltip?: () => React.ReactNode;\n  text?: React.ReactNode;\n}\n\ninterface State {}\n\nexport class Icon extends React.PureComponent<Props, State> {\n  iconRef = React.createRef<HTMLDivElement>();\n\n  render(): React.ReactNode {\n    const x = -this.props.obj.iconCol * 32;\n    const y = -this.props.obj.iconRow * 32;\n\n    const divStyle: React.CSSProperties = {\n      backgroundPosition: `${x}px ${y}px`,\n    };\n\n    let icon = (\n      <div\n        ref={this.iconRef}\n        onClick={this.props.onClick}\n        title={this.props.title}\n        className={classNames(styles.Icon, 'game-icon', this.props.className)}\n        style={divStyle}\n      >\n        &nbsp;\n      </div>\n    );\n\n    if (this.props.tooltip) {\n      icon = (\n        <>\n          {icon}\n          <Tooltip content={this.props.tooltip} relativeTo={this.iconRef} />\n        </>\n      );\n    }\n\n    if (this.props.text) {\n      icon = (\n        <div className={styles.IconTextWrapper}>\n          {icon}\n          <span className={styles.IconText}>{this.props.text}</span>\n        </div>\n      );\n    }\n\n    return icon;\n  }\n}\n","import * as React from 'react';\n\nimport { format_joules, format_watts } from '../util';\nimport * as game from '../game';\n\ninterface Props {\n  obj: game.Ingredient | game.Product;\n}\n\nexport const IngredientCard: React.FC<Props> = (props) => {\n  const { obj } = props;\n\n  let fuelValues: React.ReactNode;\n  if (obj.item.fuelValue) {\n    const totalValue = format_watts(\n      obj.amount.mul(obj.item.fuelValue).toFloat()\n    );\n    fuelValues = (\n      <div className=\"card-body\">\n        <div>\n          <b>Fuel value</b>: {format_joules(obj.item.fuelValue)}\n        </div>\n        <div>\n          <b>Total fuel value</b>: {totalValue}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        {obj.item.niceName} ({obj.item.name})\n      </div>\n      {fuelValues}\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { Rational } from '../rational';\nimport * as game from '../game';\nimport * as signal from '../signal';\n\nimport { Icon } from './Icon';\nimport { IngredientCard } from './IngredientCard';\n\nimport { recipeTargetAtom } from '../atoms';\n\nimport styles from './RecipePart.module.css';\n\ninterface Props {\n  obj: game.Ingredient | game.Product;\n  showName?: boolean;\n}\n\nexport const RecipePart: React.FC<Props> = ({ obj, showName }) => {\n  const [recipeTarget, setRecipeTarget] = useRecoilState(recipeTargetAtom);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent): void => {\n      if (event.shiftKey) {\n        event.preventDefault();\n        event.stopPropagation();\n        setRecipeTarget({\n          item: obj.item,\n          amount: obj.amount,\n        });\n        return;\n      }\n\n      if (obj instanceof game.Ingredient) {\n        if (obj.item.madeBy.length === 1) {\n          signal.addRecipeRow.dispatch(obj.item.madeBy[0]);\n        } else {\n          signal.addIngredientFilter.dispatch(obj);\n        }\n      } else {\n        if (obj.item.usedBy.length === 1) {\n          signal.addRecipeRow.dispatch(obj.item.usedBy[0]);\n        } else {\n          signal.addProductFilter.dispatch(obj);\n        }\n      }\n    },\n    [obj, setRecipeTarget]\n  );\n\n  let text = perSecond(obj.amount);\n  if (showName) {\n    text = (\n      <>\n        {obj.item.niceName} -- {text}\n      </>\n    );\n  }\n\n  const isTarget =\n    recipeTarget &&\n    recipeTarget.item === obj.item &&\n    recipeTarget.amount.equal(obj.amount);\n  const copySource = isTarget ? 'copy-source' : '';\n\n  return (\n    <Icon\n      className={`${styles.RecipePart} ${copySource}`}\n      onClick={handleClick}\n      tooltip={() => <IngredientCard obj={obj} />}\n      obj={obj.item}\n      text={text}\n    />\n  );\n};\n\nfunction perSecond(rational: Rational): React.ReactNode {\n  const dec = rational.toDecimal().toString();\n  let amount: React.ReactNode;\n  if (dec.includes('.') && dec.length > 4) {\n    amount = <abbr title={rational.toFraction()}>{rational.toDecimal()}</abbr>;\n  } else {\n    amount = dec;\n  }\n  return <>{amount} / sec</>;\n}\n","import * as React from 'react';\nimport * as game from '../game';\n\ninterface Props {\n  machine: game.AssemblingMachine;\n}\n\nexport const MachineCard: React.FC<Props> = (props) => {\n  return (\n    <div className=\"machine-card card\">\n      <div className=\"card-body\">\n        <b>{props.machine.niceName}</b>\n        <br />\n        <b>Crafting Speed:</b> {props.machine.craftingSpeed}\n        <br />\n        <b>Module Slots:</b> {props.machine.moduleSlots}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport * as game from '../game';\n\nimport { Icon } from './Icon';\nimport { MachineCard } from './MachineCard';\nimport { useGameData } from '../atoms';\n\ninterface Props {\n  recipe: game.Recipe;\n  onClick?(r: game.Recipe): void;\n}\n\nexport const RecipeCard: React.FC<Props> = ({ recipe, onClick }) => {\n  const gameData = useGameData();\n\n  const handleClick = (): void => {\n    onClick && onClick(recipe);\n  };\n\n  const ingredients = recipe.ingredients.map((ingredient) => (\n    <Icon\n      key={ingredient.name}\n      obj={ingredient.item}\n      text={ingredient.niceName}\n    />\n  ));\n  const products = recipe.products.map((product) => (\n    <Icon key={product.name} obj={product.item} text={product.niceName} />\n  ));\n\n  const madeIn = recipe.madeIn.map((machine) => (\n    <Icon\n      key={machine.name}\n      obj={machine}\n      tooltip={() => <MachineCard machine={machine} />}\n    />\n  ));\n\n  return (\n    <div className=\"recipe-tooltip card\" onClick={handleClick}>\n      <div className=\"card-header\">\n        <Icon obj={recipe} text={`${recipe.niceName} (Recipe)`} />\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item\">\n          <b>Ingredients:</b>\n          {ingredients}\n          <Icon\n            obj={gameData.clockSprite}\n            text={\n              <span>\n                <b>{recipe.craftingTime.toDecimal()} s</b> Crafting time\n              </span>\n            }\n          />\n        </li>\n        <li className=\"list-group-item\">\n          <b>Products:</b>\n          {products}\n        </li>\n        <li className=\"list-group-item\">\n          <b>Made In:</b>\n          <br />\n          {madeIn}\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { AssemblingMachine } from '../game';\n\nimport { Icon } from './Icon';\nimport { MachineCard } from './MachineCard';\nimport { Dropdown } from './generic';\n\ninterface MachinePickerProps {\n  machines: AssemblingMachine[];\n  selected: AssemblingMachine;\n  onChange(m: AssemblingMachine): void;\n}\n\nconst renderSelected = (machine: AssemblingMachine): React.ReactNode => {\n  return <Icon obj={machine} tooltip={() => <MachineCard machine={machine} />} />;\n};\n\nconst renderOption = (machine: AssemblingMachine): React.ReactNode => {\n  return (\n    <Icon\n      obj={machine}\n      tooltip={() => <MachineCard machine={machine} />}\n      text={machine.niceName}\n    />\n  );\n};\n\nexport const MachinePicker: React.FC<MachinePickerProps> = (props) => {\n  const options = props.machines.map((machine) => ({\n    key: machine.name,\n    option: machine,\n    active: machine === props.selected,\n  }));\n\n  return (\n    <Dropdown\n      options={options}\n      selected={props.selected}\n      onSelect={props.onChange}\n      renderOption={renderOption}\n      renderSelected={renderSelected}\n    />\n  );\n};\n","import React from 'react';\n\nimport type { Rational } from '../rational';\nimport type { Module } from '../game';\nimport { round2 } from '../util';\n\ninterface Props {\n  module: Module;\n}\n\nfunction formatBonus(name: string, bonus: Rational): React.ReactNode {\n  if (bonus.isZero()) return null;\n  return (\n    <div>\n      <b>\n        {name} {round2(bonus.toFloat() * 100, 2)}%\n      </b>\n    </div>\n  );\n}\n\nexport const ModuleCard: React.FC<Props> = ({ module }) => {\n  return (\n    <div className=\"module-card card\">\n      <div className=\"card-header\">\n        <b>{module.niceName}</b>\n      </div>\n      <div className=\"card-body\">\n        {formatBonus('Speed', module.effects.speed)}\n        {formatBonus('Productivity', module.effects.productivity)}\n        {formatBonus('Energy Consumption', module.effects.consumption)}\n        {formatBonus('Pollution', module.effects.pollution)}\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useRecoilValue, useRecoilState, RecoilState } from 'recoil';\n\nimport { RecipeGroup } from './RecipeGroup';\nimport { Settings } from './Settings';\n\nimport { useGroupAdd, AddGroupAction } from '../actions';\nimport { groupAtomsAtom, groupsState } from '../atoms';\nimport { RecipeGroupData } from '../state';\nimport { GameData } from '../game';\nimport { assert, assertNever } from '../util';\n\nimport styles from './App.module.css';\n\ninterface Props {\n  gameData: GameData;\n  groupAtoms: RecoilState<RecipeGroupData>[];\n  groups: RecipeGroupData[];\n  onAddGroup: AddGroupAction;\n  onRemoveGroup(groupAtom: RecoilState<RecipeGroupData>): void;\n}\n\ninterface State {\n  activePage: ActivePage;\n  activeGroupIdx: number;\n}\n\nenum ActivePage {\n  Factory,\n  Settings,\n}\n\nclass RawApp extends React.PureComponent<Props, State> {\n  state: State = {\n    activePage: ActivePage.Factory,\n    activeGroupIdx: 0,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n  componentWillUnmount(): void {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (event.key === 'Shift') {\n      document.body.classList.add('shift-down');\n    }\n  };\n  handleKeyUp = (event: KeyboardEvent): void => {\n    if (event.key === 'Shift') {\n      document.body.classList.remove('shift-down');\n    }\n  };\n\n  handleClickGroup = (i: number): void => {\n    this.setState({\n      activePage: ActivePage.Factory,\n      activeGroupIdx: i,\n    });\n  };\n\n  handleClickAddGroup: React.MouseEventHandler<any> = (event): void => {\n    event.preventDefault();\n    const defaultName = `Factory ${this.props.groups.length + 1}`;\n    const name = prompt('What do you want to name this group?', defaultName);\n    if (!name || !name.trim()) {\n      return;\n    }\n    this.props.onAddGroup({ name, rows: [] });\n  };\n\n  handleClickSettings = (): void => {\n    this.setState({\n      activePage: ActivePage.Settings,\n    });\n  };\n\n  renderNavbar(): React.ReactNode {\n    const settingsActive = this.state.activePage === ActivePage.Settings;\n\n    const activeKey = settingsActive ? 'settings' : this.state.activeGroupIdx;\n\n    const factoryPills = this.props.groups.map((group, i) => {\n      const active = activeKey === i;\n      return (\n        <button\n          key={i}\n          type=\"button\"\n          className={`list-group-item list-group-item-action ${\n            active ? 'active' : ''\n          }`}\n          onClick={() => this.handleClickGroup(i)}\n        >\n          {group.name}\n        </button>\n      );\n    });\n\n    return (\n      <>\n        <ul className=\"list-group mt-3\">\n          <li className=\"list-group-item\">\n            <span role=\"img\" aria-label=\"Factory icon\">\n              🏭\n            </span>{' '}\n            Factories\n          </li>\n\n          {factoryPills}\n\n          <button\n            type=\"button\"\n            className=\"list-group-item list-group-item-action\"\n            onClick={this.handleClickAddGroup}\n          >\n            <span role=\"img\" aria-label=\"Factory icon\">\n              ＋\n            </span>{' '}\n            Add a Factory\n          </button>\n        </ul>\n\n        <ul className=\"list-group mt-3\">\n          <button\n            type=\"button\"\n            className={`list-group-item list-group-item-action ${\n              settingsActive ? 'active' : ''\n            }`}\n            onClick={this.handleClickSettings}\n          >\n            <span role=\"img\" aria-label=\"Gear icon\">\n              ⚙️\n            </span>{' '}\n            Settings\n          </button>\n        </ul>\n      </>\n    );\n  }\n\n  renderFactory = (): React.ReactNode => {\n    const groupAtom = this.props.groupAtoms[this.state.activeGroupIdx];\n    return (\n      <RecipeGroup\n        groupAtom={groupAtom}\n        onRemoveGroup={this.props.onRemoveGroup}\n      />\n    );\n  };\n\n  renderSettings = (): React.ReactNode => {\n    return <Settings />;\n  };\n\n  render(): React.ReactNode {\n    assert(this.props.gameData, 'falsy gameData, should never happen');\n    let body: React.ReactNode;\n    if (this.state.activePage === ActivePage.Factory) {\n      body = this.renderFactory();\n    } else if (this.state.activePage === ActivePage.Settings) {\n      body = this.renderSettings();\n    } else {\n      return assertNever(this.state.activePage);\n    }\n\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className={classNames('col col-2 bg-primary', styles.Sidebar)}>\n            {this.renderNavbar()}\n          </div>\n          <div className=\"col pt-3\">{body}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const App: React.FC<{\n  gameData: GameData;\n}> = ({ gameData }) => {\n  const groups = useRecoilValue(groupsState);\n\n  const [groupAtoms, setGroupAtoms] = useRecoilState(groupAtomsAtom);\n\n  const handleAddGroup = useGroupAdd();\n\n  const handleRemoveGroup = useCallback(\n    (groupAtom: RecoilState<RecipeGroupData>) => {\n      setGroupAtoms((atoms) => atoms.filter((a) => a !== groupAtom));\n    },\n    [setGroupAtoms]\n  );\n\n  return (\n    <RawApp\n      gameData={gameData}\n      groups={groups}\n      groupAtoms={groupAtoms}\n      onAddGroup={handleAddGroup}\n      onRemoveGroup={handleRemoveGroup}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport type { Module, Recipe } from '../game';\n\nimport { Icon } from './Icon';\nimport { ModuleCard } from './ModuleCard';\nimport { Dropdown } from './generic';\nimport { useGameData } from '../atoms';\n\ninterface ModulePickerProps {\n  recipe: Recipe;\n  isBeacon?: boolean;\n  selected: Module | null;\n  onChange(m: Module | null): void;\n}\n\nexport const ModulePicker: React.FC<ModulePickerProps> = (props) => {\n  const gameData = useGameData();\n  const renderSelected = (module: Module | null): React.ReactNode => {\n    if (module) {\n      return (\n        <Icon obj={module} tooltip={() => <ModuleCard module={module} />} />\n      );\n    } else {\n      return <Icon obj={gameData.noModuleModule} />;\n    }\n  };\n\n  const renderOption = (module: Module | null): React.ReactNode => {\n    if (module) {\n      return (\n        <Icon\n          obj={module}\n          tooltip={() => <ModuleCard module={module} />}\n          text={module.niceName}\n        />\n      );\n    } else {\n      return (\n        <Icon\n          obj={gameData.noModuleModule}\n          text={gameData.noModuleModule.niceName}\n        />\n      );\n    }\n  };\n\n  const options = gameData.modules\n    .filter((m) => {\n      // TODO: what is the actual logic for which modules are allowed in beacons?\n      if (props.isBeacon && m.effects.productivity.isPositive()) {\n        return false;\n      }\n      return m.canUseWith(props.recipe);\n    })\n    .map((m) => ({\n      key: m.name,\n      option: m as Module | null,\n      active: m === props.selected,\n    }));\n\n  options.unshift({\n    key: 'no_module',\n    option: null,\n    active: !props.selected,\n  });\n\n  return (\n    <Dropdown\n      options={options}\n      selected={props.selected}\n      onSelect={props.onChange}\n      renderOption={renderOption}\n      renderSelected={renderSelected}\n    />\n  );\n};\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport * as game from '../game';\nimport { Rational } from '../rational';\nimport { Totals } from '../totals';\nimport { RecipeRowData } from '../state';\nimport { recipeTargetAtom, RecipeTarget } from '../atoms';\n\nimport { Icon } from './Icon';\nimport { RecipePart } from './RecipePart';\nimport { RecipeCard } from './RecipeCard';\nimport { MachinePicker } from './MachinePicker';\nimport { ModulePicker } from './ModulePicker';\nimport { IntegerInput, RationalInput } from './generic';\n\nimport styles from './RecipeRow.module.css';\n\ninterface Props {\n  index: number;\n  recipeTarget: RecipeTarget | undefined;\n  data: RecipeRowData;\n\n  onUpdateRow(row: RecipeRowData): void;\n  onRemoveRow(recipe: game.Recipe): void;\n}\n\nclass RawRecipeRow extends React.PureComponent<Props, never> {\n  handleRemoveRow = (): void => {\n    this.props.onRemoveRow(this.props.data.recipe);\n  };\n\n  handleMachineChange = (machine: game.AssemblingMachine): void => {\n    this.applyChange({\n      machine: machine,\n      modules: this.props.data.modules\n        .filter((module) => module !== null)\n        .slice(0, machine.moduleSlots),\n    });\n  };\n\n  handleNumMachinesChange = (num: Rational): void => {\n    this.applyChange({ numMachines: num });\n  };\n\n  handleNumBeaconsChange = (num: number): void => {\n    this.applyChange({ numBeacons: num });\n  };\n\n  handleSetAllModules = (): void => {\n    this.applyChange({\n      modules: new Array(this.props.data.machine.moduleSlots).fill(\n        this.props.data.modules[0]\n      ),\n    });\n  };\n\n  handleSetModule = (index: number, module: game.Module | null): void => {\n    const modules = this.props.data.modules.slice();\n    modules[index] = module;\n    this.applyChange({ modules: modules });\n  };\n\n  handleSetBeaconModule = (module: game.Module | null): void => {\n    this.applyChange({ beaconModule: module });\n  };\n\n  handleInputGroupClick: React.MouseEventHandler<any> = (event): void => {\n    const { recipeTarget } = this.props;\n    if (!event.shiftKey || !recipeTarget) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n\n    const output = new Totals();\n    output.addRow({\n      ...this.props.data,\n      numMachines: Rational.one,\n    });\n\n    let current: game.Ingredient | game.Product | undefined;\n    current = output.ingredients.find((x) => {\n      return x.item.name === recipeTarget.item.name;\n    });\n\n    current =\n      current ||\n      output.products.find((x) => {\n        return x.item.name === recipeTarget.item.name;\n      });\n\n    if (!current) {\n      console.error(\n        `Could not find ${recipeTarget.item.name} in totals`,\n        output\n      );\n      return;\n    }\n\n    const newNum = recipeTarget.amount.div(current.amount);\n\n    this.applyChange({\n      numMachines: newNum,\n    });\n  };\n\n  applyChange(change: Partial<RecipeRowData>): void {\n    this.props.onUpdateRow({\n      ...this.props.data,\n      ...change,\n    });\n  }\n\n  getOutput(): Totals {\n    const t = new Totals();\n    t.addRow(this.props.data);\n    return t;\n  }\n\n  renderModules(): React.ReactNode {\n    const numSlots = this.props.data.machine.moduleSlots;\n\n    const slots = [];\n    for (let i = 0; i < numSlots; i++) {\n      const module = this.props.data.modules[i];\n      slots.push(\n        <ModulePicker\n          key={i}\n          recipe={this.props.data.recipe}\n          selected={module}\n          onChange={(m) => this.handleSetModule(i, m)}\n        />\n      );\n    }\n\n    if (numSlots > 1) {\n      slots.splice(\n        1,\n        0,\n        <button\n          onClick={this.handleSetAllModules}\n          key=\"applicator\"\n          className=\"btn\"\n        >\n          →\n        </button>\n      );\n    }\n\n    return slots;\n  }\n\n  renderBeacons(): React.ReactNode {\n    return (\n      <div className=\"btn-toolbar\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Beacon Modules</span>\n          </div>\n          <IntegerInput\n            value={this.props.data.numBeacons}\n            onChange={this.handleNumBeaconsChange}\n            min={0}\n          />\n          <div className=\"input-group-append btn-icon-wrapper\">\n            <ModulePicker\n              isBeacon={true}\n              recipe={this.props.data.recipe}\n              selected={this.props.data.beaconModule}\n              onChange={this.handleSetBeaconModule}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderMachines(): React.ReactNode {\n    return (\n      <div className=\"btn-toolbar mb-3\">\n        <div className=\"input-group\" onClick={this.handleInputGroupClick}>\n          <RationalInput\n            value={this.props.data.numMachines}\n            onChange={this.handleNumMachinesChange}\n            positiveOnly={true}\n          />\n          <div className=\"input-group-append btn-icon-wrapper\">\n            <MachinePicker\n              machines={this.props.data.recipe.madeIn}\n              selected={this.props.data.machine}\n              onChange={this.handleMachineChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render(): React.ReactNode {\n    const recipe = this.props.data.recipe;\n    const output = this.getOutput();\n\n    const ingredients = output.ingredients.map((ingredient) => (\n      <div className=\"mb-1\" key={ingredient.name}>\n        <RecipePart obj={ingredient} />\n      </div>\n    ));\n    const products = output.products.map((product) => (\n      <div className=\"mb-1\" key={product.name}>\n        <RecipePart obj={product} />\n      </div>\n    ));\n    return (\n      <Draggable draggableId={recipe.name} index={this.props.index}>\n        {(provided) => (\n          <div\n            className={`${styles.RecipeRow} recipe-row card mb-3`}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n          >\n            <div className=\"card-header clearfix\" {...provided.dragHandleProps}>\n              <div className=\"float-left\">\n                <Icon\n                  obj={recipe}\n                  text={recipe.niceName}\n                  tooltip={() => <RecipeCard recipe={recipe} />}\n                />\n              </div>\n              <div className=\"float-right\">\n                <button\n                  className=\"btn btn-danger btn-sm\"\n                  onClick={this.handleRemoveRow}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n            <div className=\"card-body clearfix\">\n              <div className=\"float-left\">\n                {this.renderMachines()}\n                <div className=\"mb-3 btn-group btn-icon-wrapper\" role=\"group\">\n                  {this.renderModules()}\n                </div>\n                {this.renderBeacons()}\n              </div>\n\n              <div className=\"float-right\">\n                <div\n                  className=\"mr-3\"\n                  style={{\n                    display: 'inline-block',\n                    float: 'left',\n                    minWidth: '150px',\n                  }}\n                >\n                  <b>Ingredients:</b>\n                  {ingredients}\n                </div>\n\n                <div\n                  className=\"mr-2\"\n                  style={{\n                    display: 'inline-block',\n                    minWidth: '150px',\n                  }}\n                >\n                  <b>Products:</b>\n                  {products}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport const RecipeRow: React.FC<{\n  index: number;\n  data: RecipeRowData;\n  onUpdateRow(data: RecipeRowData): void;\n  onRemoveRow(recipe: game.Recipe): void;\n}> = ({ index, data, onRemoveRow, onUpdateRow }) => {\n  const recipeTarget = useRecoilValue(recipeTargetAtom);\n\n  return (\n    <RawRecipeRow\n      index={index}\n      data={data}\n      recipeTarget={recipeTarget}\n      onUpdateRow={onUpdateRow}\n      onRemoveRow={onRemoveRow}\n    />\n  );\n};\n","import * as React from 'react';\nimport Fuse from 'fuse.js';\n\nimport { debounce } from '../util';\n\nimport * as game from '../game';\nimport * as signal from '../signal';\n\nimport { Icon } from './Icon';\nimport { IngredientCard } from './IngredientCard';\nimport { RecipeCard } from './RecipeCard';\n\nimport styles from './RecipePicker.module.css';\n\ntype KeyTypes = 'niceName' | 'name';\n\nconst getFn: Fuse.FuseGetFunction<game.Recipe> = (obj, path) => {\n  if (typeof path === 'string') {\n    throw new Error(`path unexpectedly string: ${path}`);\n  }\n  if (path.length !== 1) {\n    throw new Error(`path unexpectedly long/short: ${path}`);\n  }\n  switch (path[0]) {\n    case 'niceName':\n      return obj.niceName;\n    case 'name':\n      return obj.name;\n    default:\n      throw new Error(`Unsupported path: ${path}`);\n  }\n};\n\nconst RE_ADVANCED = /((?:produces)|(?:consumes)):([a-z0-9-]+)/g;\n\ninterface Props {\n  recipes: game.Recipe[];\n  onPickRecipe(r: game.Recipe): void;\n}\n\ninterface State {\n  query: string;\n  matches: game.Recipe[];\n}\n\nexport class RecipePicker extends React.PureComponent<Props, State> {\n  inputRef = React.createRef<HTMLInputElement>();\n\n  state: State = {\n    query: '',\n    matches: [],\n  };\n\n  componentDidMount(): void {\n    signal.addIngredientFilter.addHandler(this.handleIngredientClick);\n    signal.addProductFilter.addHandler(this.handleProductClick);\n  }\n\n  componentWillUnmount(): void {\n    this.debCalculateMatches.cancel();\n    signal.addIngredientFilter.removeHandler(this.handleIngredientClick);\n    signal.addProductFilter.removeHandler(this.handleProductClick);\n  }\n\n  handleIngredientClick = (ingredient: game.Ingredient): void => {\n    const term = `produces:${ingredient.name}`;\n    if (!this.state.query.includes(term)) {\n      this.setQuery(`${this.state.query} ${term}`, () => {\n        this.calculateMatches();\n      });\n      this.inputRef.current?.scrollIntoView();\n    }\n  };\n\n  handleProductClick = (product: game.Product): void => {\n    const term = `consumes:${product.name}`;\n    if (!this.state.query.includes(term)) {\n      this.setQuery(`${this.state.query} ${term}`, () => {\n        this.calculateMatches();\n      });\n      this.inputRef.current?.scrollIntoView();\n    }\n  };\n\n  handleQueryInput = (event: React.FormEvent<HTMLInputElement>): void => {\n    const target = event.target as HTMLInputElement;\n    this.setQuery(target.value);\n  };\n\n  handleRecipeClick = (recipe: game.Recipe): void => {\n    this.props.onPickRecipe(recipe);\n    this.setQuery('');\n  };\n\n  setQuery = (query: string, callback?: () => void): void => {\n    if (!query.trim()) {\n      this.debCalculateMatches.cancel();\n      this.setState(\n        {\n          query: '',\n          matches: [],\n        },\n        callback\n      );\n    } else {\n      this.setState({ query: query }, callback);\n      this.debCalculateMatches();\n    }\n  };\n\n  calculateMatches(): void {\n    let query = this.state.query.trim().toLowerCase();\n    if (!query) {\n      this.setState({ matches: [] });\n      return;\n    }\n\n    const conditions = {\n      consumes: [] as string[],\n      produces: [] as string[],\n    };\n\n    type ckey = keyof typeof conditions;\n\n    query = query\n      .replace(RE_ADVANCED, (_, key, value) => {\n        conditions[key as ckey].push(value);\n        return '';\n      })\n      .trim();\n\n    let recipes = this.props.recipes;\n    if (conditions.consumes.length || conditions.produces.length) {\n      recipes = recipes.filter((recipe) => {\n        for (const name of conditions.consumes) {\n          if (!recipe.ingredients.some((i) => i.name === name)) {\n            return false;\n          }\n        }\n        for (const name of conditions.produces) {\n          if (!recipe.products.some((i) => i.name === name)) {\n            return false;\n          }\n        }\n        return true;\n      });\n    }\n\n    if (query) {\n      const fuse = new Fuse(recipes, {\n        shouldSort: true,\n        getFn: getFn,\n        keys: [\n          {\n            name: 'niceName',\n            weight: 0.7,\n          },\n          {\n            name: 'name',\n            weight: 0.2,\n          },\n        ],\n      });\n      const results = fuse.search(query);\n      recipes = results.map((r) => r.item);\n    }\n    this.setState({ matches: recipes });\n  }\n\n  debCalculateMatches = debounce(this.calculateMatches.bind(this), 200);\n\n  renderMatches(): React.ReactNode {\n    if (!this.state.matches.length) {\n      return '';\n    }\n    let matches = this.state.matches;\n    if (matches.length > 100) {\n      matches = matches.slice(0, 100);\n    }\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>Recipe</th>\n            <th>Time</th>\n            <th>Ingredients</th>\n            <th>Products</th>\n          </tr>\n        </thead>\n        <tbody>\n          {matches.map((r) => (\n            <RecipeMatch\n              recipe={r}\n              key={r.name}\n              onClick={this.handleRecipeClick}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className={styles.RecipePicker}>\n        <div>\n          <input\n            type=\"search\"\n            ref={this.inputRef}\n            className=\"editable-display form-control\"\n            placeholder=\"What do you want to build?\"\n            value={this.state.query}\n            onChange={this.handleQueryInput}\n          />\n        </div>\n        {this.renderMatches()}\n      </div>\n    );\n  }\n}\n\ninterface RecipeMatchProps {\n  recipe: game.Recipe;\n  onClick(recipe: game.Recipe): void;\n}\n\nclass RecipeMatch extends React.PureComponent<RecipeMatchProps, never> {\n  handleClickAdd = (): void => {\n    this.props.onClick(this.props.recipe);\n  };\n\n  render(): React.ReactNode {\n    const recipe = this.props.recipe;\n    const ingredients = recipe.ingredients.map((ing) => (\n      <Icon\n        key={ing.name}\n        obj={ing.item}\n        tooltip={() => <IngredientCard obj={ing} />}\n      />\n    ));\n    const products = recipe.products.map((prod) => (\n      <Icon\n        key={prod.name}\n        obj={prod.item}\n        tooltip={() => <IngredientCard obj={prod} />}\n      />\n    ));\n    return (\n      <tr onClick={this.handleClickAdd}>\n        <td className={styles.ResultName}>\n          <Icon\n            obj={recipe}\n            text={recipe.niceName}\n            tooltip={() => <RecipeCard recipe={recipe} />}\n          />\n        </td>\n        <td>{recipe.craftingTime.toDecimal()}</td>\n        <td>{ingredients}</td>\n        <td>{products}</td>\n      </tr>\n    );\n  }\n}\n","import React, { useMemo } from 'react';\nimport { RecipePart } from './RecipePart';\nimport { RecipeRowData } from '../state';\nimport { useGameData } from '../atoms';\nimport { Totals } from '../totals';\n\nimport styles from './TotalCard.module.css';\n\ninterface Props {\n  rows: RecipeRowData[];\n}\n\nexport const TotalCard: React.FC<Props> = ({ rows }) => {\n  const gameData = useGameData();\n\n  const totals: Totals = useMemo(() => {\n    const t = new Totals(rows);\n    gameData.sortByItem(t.ingredients, (p) => p.item);\n    gameData.sortByItem(t.products, (p) => p.item);\n    return t;\n  }, [gameData, rows]);\n\n  if (!totals.ingredients.length && !totals.products.length) {\n    return <div />;\n  }\n\n  return (\n    <div className={`card ${styles.TotalCard}`}>\n      <div className=\"card-header\">Combined Totals</div>\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col\">\n            Ingredients:\n            {totals.ingredients.map((ing) => (\n              <RecipePart key={ing.name} obj={ing} showName />\n            ))}\n          </div>\n          <div className=\"col\">\n            Products:\n            {totals.products.map((prod) => (\n              <RecipePart key={prod.name} obj={prod} showName />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useRecoilState, useRecoilValue, RecoilState } from 'recoil';\nimport { DropResult, DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nimport * as signal from '../signal';\nimport * as game from '../game';\nimport * as su from '../stateutil';\nimport { Rational } from '../rational';\nimport { settingsAtom, useGameData } from '../atoms';\n\nimport { RecipeRow } from './RecipeRow';\nimport { RecipePicker } from './RecipePicker';\nimport { TotalCard } from './TotalCard';\n\nimport { RecipeGroupData, RecipeRowData } from '../state';\n\nimport styles from './RecipeGroup.module.css';\n\ninterface Props {\n  group: RecipeGroupData;\n  gameData: game.GameData;\n\n  onRenameGroup(newName: string): void;\n  onCloneGroup(newName: string): void;\n  onRemoveGroup(): void;\n\n  onAddRow(recipe: game.Recipe): void;\n  onMoveRow(oldIndex: number, newIndex: number): void;\n  onUpdateRow(data: RecipeRowData): void;\n  onRemoveRow(recipe: game.Recipe): void;\n}\n\nclass RawRecipeGroup extends React.PureComponent<Props, never> {\n  componentDidMount(): void {\n    signal.addRecipeRow.addHandler(this.props.onAddRow);\n  }\n\n  componentDidUpdate(oldProps: Props, oldState: never): void {\n    if (this.props.onAddRow !== oldProps.onAddRow) {\n      signal.addRecipeRow.removeHandler(oldProps.onAddRow);\n      signal.addRecipeRow.addHandler(this.props.onAddRow);\n    }\n  }\n\n  componentWillUnmount(): void {\n    signal.addRecipeRow.removeHandler(this.props.onAddRow);\n  }\n\n  handleDragEnd = (result: DropResult): void => {\n    if (!result.destination) {\n      return;\n    }\n    this.props.onMoveRow(result.source.index, result.destination.index);\n  };\n\n  renderRow = (data: RecipeRowData, index: number): React.ReactNode => {\n    return (\n      <RecipeRow\n        key={data.recipe.name}\n        index={index}\n        data={data}\n        onUpdateRow={this.props.onUpdateRow}\n        onRemoveRow={this.props.onRemoveRow}\n      />\n    );\n  };\n\n  handleClickRename = (): void => {\n    const name = prompt('Whatcha wanna call it now?', this.props.group.name);\n    if (name) {\n      this.props.onRenameGroup(name);\n    }\n  };\n\n  handleClickClone = (): void => {\n    const name = prompt('Whatcha wanna call it now?', this.props.group.name);\n    if (name) {\n      this.props.onCloneGroup(name);\n    }\n  };\n\n  handleClickDelete = (): void => {\n    if (this.props.group.rows.length) {\n      if (\n        !window.confirm(\n          `Are you sure you want to delete ${this.props.group.name}`\n        )\n      ) {\n        return;\n      }\n    }\n    this.props.onRemoveGroup();\n  };\n\n  render(): React.ReactNode {\n    const gd = this.props.gameData;\n    const availableRecipes = gd.recipes.filter((recipe) => {\n      return !this.props.group.rows.some((row) => row.recipe === recipe);\n    });\n\n    return (\n      <div className={styles.RecipeGroup}>\n        <div className=\"clearfix\">\n          <h3 className=\"float-left\">{this.props.group.name}</h3>\n          <div className=\"float-right\">\n            <div className=\"button-group\">\n              <button className=\"btn btn-info\" onClick={this.handleClickRename}>\n                Rename\n              </button>\n              <button className=\"btn btn-info\" onClick={this.handleClickClone}>\n                Clone\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={this.handleClickDelete}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n        <RecipePicker\n          recipes={availableRecipes}\n          onPickRecipe={this.props.onAddRow}\n        />\n        <hr />\n\n        <DragDropContext onDragEnd={this.handleDragEnd}>\n          <Droppable droppableId={'eyy'}>\n            {(provided) => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {this.props.group.rows.map(this.renderRow)}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        <hr />\n        <TotalCard rows={this.props.group.rows} />\n      </div>\n    );\n  }\n}\n\ninterface RecipeGroupProps {\n  groupAtom: RecoilState<RecipeGroupData>;\n  onRemoveGroup(groupAtom: RecoilState<RecipeGroupData>): void;\n}\nexport const RecipeGroup: React.FC<RecipeGroupProps> = ({\n  groupAtom,\n  onRemoveGroup,\n}) => {\n  const [group, setGroup] = useRecoilState(groupAtom);\n  const settings = useRecoilValue(settingsAtom);\n  const gameData = useGameData();\n\n  const handleRenameGroup = useCallback(\n    (newName: string) => {\n      setGroup((oldGroup) => ({\n        ...oldGroup,\n        name: newName,\n      }));\n    },\n    [setGroup]\n  );\n\n  const handleCloneGroup = useCallback((newName: string) => {\n    alert('TODO: handleCloneGroup');\n  }, []);\n\n  const handleRemoveGroup = useCallback(() => {\n    onRemoveGroup(groupAtom);\n  }, [onRemoveGroup, groupAtom]);\n\n  const handleMoveRow = useCallback(\n    (oldIndex: number, newIndex: number) => {\n      const rows = Array.from(group.rows);\n      const [removed] = rows.splice(oldIndex, 1);\n      rows.splice(newIndex, 0, removed);\n\n      setGroup((oldGroup) => ({\n        ...oldGroup,\n        rows,\n      }));\n    },\n    [group, setGroup]\n  );\n\n  const handleAddRow = useCallback(\n    (recipe: game.Recipe) => {\n      setGroup((group) => {\n        // only allow one instance of a recipe per group\n        if (group.rows.find((row) => row.recipe.name === recipe.name)) {\n          return group;\n        }\n\n        return {\n          ...group,\n          rows: [\n            ...group.rows,\n            {\n              recipe: recipe,\n              machine: su.getDefaultMachine(recipe, settings, gameData),\n              numMachines: Rational.one,\n              modules: [],\n              beaconModule: null,\n              numBeacons: 0,\n            },\n          ],\n        };\n      });\n    },\n    [settings, gameData, setGroup]\n  );\n\n  const handleUpdateRow = useCallback(\n    (data: RecipeRowData) => {\n      setGroup((group) => ({\n        ...group,\n        rows: group.rows.map((r) => (r.recipe === data.recipe ? data : r)),\n      }));\n    },\n    [setGroup]\n  );\n\n  const handleRemoveRow = useCallback(\n    (recipe: game.Recipe) => {\n      setGroup((group) => ({\n        ...group,\n        rows: group.rows.filter((r) => r.recipe !== recipe),\n      }));\n    },\n    [setGroup]\n  );\n\n  return (\n    <RawRecipeGroup\n      group={group}\n      gameData={gameData}\n      onRenameGroup={handleRenameGroup}\n      onCloneGroup={handleCloneGroup}\n      onRemoveGroup={handleRemoveGroup}\n      onAddRow={handleAddRow}\n      onMoveRow={handleMoveRow}\n      onUpdateRow={handleUpdateRow}\n      onRemoveRow={handleRemoveRow}\n    />\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport * as game from '../game';\n\nimport { settingsAtom, useGameData } from '../atoms';\nimport { AppSettingsData } from '../state';\nimport { getDefaultMachine } from '../stateutil';\n\nimport { MachinePicker } from './MachinePicker';\n\ninterface RawSettingsProps {\n  gameData: game.GameData;\n}\n\nexport const Settings: React.FC<{}> = () => {\n  const gameData = useGameData();\n  const [settings, setSettings] = useRecoilState(settingsAtom);\n\n  const handleSetDefaultMachine = useCallback(\n    (category: string, machine: game.AssemblingMachine) => {\n      setSettings((settings) => ({\n        ...settings,\n        assemblerOverrides: {\n          ...settings.assemblerOverrides,\n          [category]: machine,\n        },\n      }));\n    },\n    [setSettings]\n  );\n\n  const categoryNames = Object.entries(gameData.categoryMap)\n    .filter((entry) => entry[1].length > 1)\n    .map((entry) => entry[0]);\n\n  categoryNames.sort((a, b) => a.localeCompare(b));\n\n  return (\n    <div>\n      <h3>Default Assemblers</h3>\n      {categoryNames.map((name) => (\n        <CategoryRow\n          gameData={gameData}\n          settings={settings}\n          key={name}\n          category={name}\n          onSetDefaultMachine={handleSetDefaultMachine}\n        />\n      ))}\n    </div>\n  );\n};\n\ninterface CategoryRowProps {\n  category: string;\n  gameData: game.GameData;\n  settings: AppSettingsData;\n  onSetDefaultMachine(category: string, machine: game.AssemblingMachine): void;\n}\n\nclass CategoryRow extends React.PureComponent<CategoryRowProps, never> {\n  handleChange = (machine: game.AssemblingMachine): void => {\n    this.props.onSetDefaultMachine(this.props.category, machine);\n  };\n\n  render(): React.ReactNode {\n    const machines = this.props.gameData.categoryMap[this.props.category];\n    const selected = getDefaultMachine(\n      this.props.category,\n      this.props.settings,\n      this.props.gameData\n    );\n    return (\n      <div className=\"btn-toolbar mb-3\" key={this.props.category}>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">{this.props.category}</span>\n          </div>\n          <div className=\"input-group-append btn-icon-wrapper\">\n            <MachinePicker\n              machines={machines}\n              selected={selected}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useCallback } from 'react';\nimport { atom, useSetRecoilState } from 'recoil';\n\nimport { RecipeGroupData } from './state';\nimport { groupAtomsAtom } from './atoms';\n\nlet groupId = 0;\n\nexport interface AddGroupAction {\n  (group: RecipeGroupData): void;\n}\nexport const useGroupAdd = (): AddGroupAction => {\n  const setGroupAtoms = useSetRecoilState(groupAtomsAtom);\n\n  return useCallback(\n    function (group: RecipeGroupData): void {\n      setGroupAtoms((atoms) => [\n        ...atoms,\n        atom<RecipeGroupData>({\n          key: `group-${++groupId}`,\n          default: group,\n        }),\n      ]);\n    },\n    [setGroupAtoms]\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { atom, useRecoilValue, useSetRecoilState } from 'recoil';\n\nimport * as game from '../game';\nimport { groupsState, groupAtomsAtom, settingsAtom } from '../atoms';\nimport { CompleteState, RecipeGroupData } from '../state';\nimport * as serialization from '../serialization';\n\nimport { App } from './App';\n\ninterface RawAppLoaderProps {\n  gameData: game.GameData;\n  onSetPreviousState(state: CompleteState): void;\n}\n\ninterface State {\n  loaded: boolean;\n}\n\nclass RawAppLoader extends React.PureComponent<RawAppLoaderProps, State> {\n  state: State = {\n    loaded: false,\n  };\n\n  componentDidMount(): void {\n    this.load().then(\n      () => {\n        this.setState({ loaded: true });\n      },\n      (err) => {\n        this.setState(() => {\n          throw err;\n        });\n      }\n    );\n  }\n\n  getPreviousState(): CompleteState | undefined {\n    const urlState = serialization.getUrlState(this.props.gameData);\n    if (urlState) return urlState;\n\n    try {\n      const storageState = serialization.getLocalStorageState(\n        this.props.gameData\n      );\n      if (storageState) return storageState;\n    } catch (err) {\n      console.error('Failed to load local storage state', err);\n    }\n  }\n\n  async load(): Promise<void> {\n    const previousState = this.getPreviousState();\n    if (!previousState) return;\n\n    this.props.onSetPreviousState(previousState);\n  }\n\n  render(): React.ReactNode {\n    if (!this.state.loaded) {\n      return <h1>Loading...</h1>;\n    }\n    const sheet = `${process.env.PUBLIC_URL}/assets/sprite-sheet-${this.props.gameData.spriteHash}.png`;\n    const style = `\n        .game-icon {\n            background-image: url(${sheet});\n        }\n        `;\n    return (\n      <>\n        <StateWriter gameData={this.props.gameData} />\n        <Prefetch href={sheet} />\n        <style>{style}</style>\n        <App gameData={this.props.gameData} />\n      </>\n    );\n  }\n}\n\nconst StateWriter: React.FC<{ gameData: game.GameData }> = ({ gameData }) => {\n  const groups = useRecoilValue(groupsState);\n  const settings = useRecoilValue(settingsAtom);\n  const completeState: CompleteState = {\n    groups,\n    settings: settings,\n  };\n\n  useEffect(() => {\n    serialization.setUrlState(completeState, gameData);\n    serialization.setLocalStorageState(completeState, gameData);\n  }, [gameData, completeState]);\n\n  return null;\n};\n\nconst Prefetch: React.FC<{ href: string }> = (props) => {\n  return ReactDOM.createPortal(\n    <link rel=\"prefetch\" href={props.href} />,\n    document.head\n  );\n};\n\ninterface AppLoaderProps {\n  gameData: game.GameData;\n}\n\nexport const AppLoader: React.FC<AppLoaderProps> = ({ gameData }) => {\n  const setGroupAtoms = useSetRecoilState(groupAtomsAtom);\n  const setSettings = useSetRecoilState(settingsAtom);\n\n  const handleSetPreviousState = useCallback(\n    (state: CompleteState) => {\n      let i = 0;\n      setGroupAtoms(\n        state.groups.map((group) => {\n          return atom<RecipeGroupData>({\n            key: `group-${Date.now()}-${i++}`,\n            default: group,\n          });\n        })\n      );\n      setSettings(state.settings);\n    },\n    [setGroupAtoms, setSettings]\n  );\n\n  return (\n    <RawAppLoader\n      gameData={gameData}\n      onSetPreviousState={handleSetPreviousState}\n    />\n  );\n};\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport usePromise from 'react-use-promise';\n\nimport { gameDataAtom } from '../atoms';\n\nimport { GameData } from '../game';\n\ninterface Props {\n  jsonPath: string;\n  child(gameData: GameData): React.ReactElement;\n}\n\nexport const GameDataLoader: React.FC<Props> = ({ jsonPath, child }) => {\n  const setGameState = useRecoilState(gameDataAtom)[1];\n\n  const [gameData, error, status] = usePromise<GameData>(async () => {\n    const response = await fetch(\n      `${process.env.PUBLIC_URL}/assets/kras-18.json`\n    );\n\n    if (response.status !== 200) {\n      throw new Error(\n        `Could not load game data, got HTTP status ${response.status}`\n      );\n    }\n\n    let parsed;\n    try {\n      parsed = await response.json();\n    } catch (err) {\n      throw new Error(`Could not parse game data: ${err}`);\n    }\n    const gameData = new GameData(parsed);\n    setGameState(gameData);\n    return gameData;\n  }, [jsonPath]);\n\n  if (status === 'pending') {\n    return <h3>Loading game data...</h3>;\n  } else if (status === 'rejected') {\n    return (\n      <div>\n        <h3>Error loading game data!</h3>\n        <pre>{String(error)}</pre>\n      </div>\n    );\n  } else {\n    return child(gameData!);\n  }\n};\n\nexport default GameDataLoader;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\n\nimport { ErrorCatcher } from './components/ErrorCatcher';\nimport { AppLoader } from './components/AppLoader';\nimport { GameDataLoader } from './components/GameDataLoader';\n\nimport './index.css';\n\nconst JSON_PATH = `${process.env.PUBLIC_URL}/assets/kras-18.json`;\n\nReactDOM.render(\n  <ErrorCatcher>\n    <RecoilRoot>\n      <GameDataLoader\n        jsonPath={JSON_PATH}\n        child={(gameData) => <AppLoader gameData={gameData} />}\n      />\n    </RecoilRoot>\n  </ErrorCatcher>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}