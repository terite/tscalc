{"version":3,"sources":["components/Icon.module.css","components/RecipePicker.module.css","components/ErrorCatcher.module.css","components/RecipePart.module.css","components/RecipeRow.module.css","components/TotalCard.module.css","components/RecipeGroup.module.css","components/App.module.css","components/ToastPortal.module.css","components/ErrorCatcher.tsx","atoms.ts","util.ts","rational.ts","game.ts","stateutil.ts","serialization.ts","signal.ts","notifications.ts","actions.ts","totals.ts","components/generic/Dropdown.tsx","components/generic/Tooltip.tsx","components/generic/IntegerInput.tsx","components/generic/RationalInput.tsx","components/Icon.tsx","components/IngredientCard.tsx","components/RecipePart.tsx","components/MachineCard.tsx","components/RecipeCard.tsx","components/MachinePicker.tsx","components/ModuleCard.tsx","components/ModulePicker.tsx","components/RecipeRow.tsx","components/RecipePicker.tsx","components/TotalCard.tsx","components/RecipeGroup.tsx","components/Settings.tsx","components/App.tsx","components/AppLoader.tsx","components/GameDataLoader.tsx","components/Toast.tsx","components/ToastPortal.tsx","index.tsx"],"names":["module","exports","ErrorCatcher","state","crashMsg","undefined","nextProps","nextState","this","error","errorInfo","setState","componentStack","stack","join","className","styles","crashed","props","children","React","Component","gameDataAtom","atom","key","default","useGameData","gameData","useRecoilValue","Error","recipeTargetAtom","groupAtomsAtom","groupsState","selector","get","map","groupAtom","settingsAtom","assemblerOverrides","assert","condition","message","mapValues","obj","fn","ret","Object","entries","value","clone","orig","assign","create","getPrototypeOf","round2","num","places","mag","Math","pow","round","format_magnitude","amount","suffixes","i","length","format_joules","joules","debounce","ms","pendingId","debounced","args","clearTimeout","setTimeout","defineProperty","useRelativeTime","when","whenUnix","valueOf","nowUnix","Date","now","suffix","secDiff","floor","abs","minDiff","unit","changeTime","relativeTime","reltime","change","useState","setRenderInc","useEffect","tId","setInterval","r","clearInterval","num_gcd","a","b","num_divmod","Number","isSafeInteger","quotient","remainder","FLOAT_CONVERT_PRECISION","Rational","p","q","div","divmod","result","less","zero","sub","one","other","fromFloat","min","max","mul","toFraction","toString","maxDigits","roundingFactor","sign","x","isNegative","negate","add","integerPart","decimalPart","fraction","ten","equal","slice","isZero","parts","push","isInteger","lookups","str","sum","split","part","trim","index","indexOf","fromInts","oneThird","twoThirds","rounded","floored","BaseDisplayable","data","name","localisedName","iconCol","iconRow","localised_name","icon_col","icon_row","en","Item","d","group","subgroup","order","fuelValue","usedBy","madeBy","fuel_value","Module","type","limitedTo","effects","Set","limitation","speed","effect","bonus","productivity","consumption","pollution","recipe","size","has","Fluid","defaultTemperature","default_temperature","Ingredient","gd","item","getItem","toDecimal","niceName","FluidIngredient","minimumTemperature","maximumTemperature","getFluid","minimum_temperature","Infinity","maximum_temperature","range","Product","amount_min","amount_max","probability","ingredient","FluidProduct","temperature","temp","Recipe","category","ingredients","products","craftingTime","madeIn","energy_required","results","product","AssemblingMachine","craftingCategories","craftingSpeed","moduleSlots","crafting_categories","crafting_speed","module_slots","GameData","raw","itemMap","Map","fluids","fluidMap","modules","moduleMap","recipes","recipeMap","entityMap","categoryMap","groups","clockSprite","noModuleModule","spriteHash","sprites","hash","values","edata","entity","set","rawMiningDrill","rawMachine","resource_categories","mining_speed","ingredient_count","machine","items","rawItem","fluid","rawRecipe","resource","rawResource","minable","fluid_amount","required_fluid","mining_time","canBuildRecipe","some","isPositive","console","warn","entities","catMap","machines","createCategoryMap","extra","noModuleIcon","rocket_launch_products","groupOrder","subgroupOrder","subgroups","collection","keyFn","sort","ordersA","getItemOrder","ordersB","valA","valB","getDefaultMachine","input","settings","defaultMachine","game","groupv4to5","rows","STATEKEY","document","location","pathname","serialize","version","row","machineName","numMachines","m","beaconModule","numBeacons","reStateUrl","migrateSerializedState","state1to2","state2to3","state3to4","state4to5","deserialize","unmigrated","migrated","deserializeSettings","recipeName","getRecipe","getEntity","fromString","n","getModule","serialized","Signal","handlers","dispatch","arg","handler","splice","addIngredientFilter","addProductFilter","addRecipeRow","newNotification","groupId","useGroupAdd","setGroupAtoms","useSetRecoilState","useCallback","atoms","Totals","addRow","newIngredient","oldIng","oldProd","satisfies","filter","newProduct","be","clamp","ingredientMult","invert","productMult","addIngredient","addProduct","Dropdown","buttonRef","isOpen","handleClick","e","getCanToggle","stopPropagation","handleSelect","selected","onSelect","handleWantClose","options","option","disabled","floater","classes","parentRef","renderOption","onWantClose","ref","onClick","renderSelected","DropdownMenu","popperInstance","menuRef","style","popperUpdate","handleBodyClick","event","target","Node","current","contains","handleKeyEvent","keyCode","renderOptions","header","active","referenceEl","menuEl","Popper","modifiers","applyStyle","enabled","updateStateWithStyle","body","addEventListener","disableEventListeners","removeEventListener","ontop","zIndex","Tooltip","selfRef","handleMouseEnter","showSelf","handleMouseLeave","oldProps","oldState","relativeTo","content","selfEl","placement","offset","preventOverflow","boundariesElement","_","prevState","initPopper","cleanupPopper","ReactDOM","IntegerInput","handleChange","errMsg","txtValue","NaN","isNaN","onChange","step","RationalInput","errmsg","parsed","stringToRational","err","positiveOnly","rationalToString","classNames","lastIndexOf","rational","dec","toFloat","toMixed","Icon","iconRef","createRef","y","divStyle","backgroundPosition","icon","title","tooltip","text","IconTextWrapper","IconText","PureComponent","IngredientCard","fuelValues","totalValue","RecipePart","showName","useRecoilState","recipeTarget","setRecipeTarget","shiftKey","preventDefault","signal","includes","perSecond","copySource","MachineCard","RecipeCard","MachinePicker","formatBonus","ModuleCard","ModulePicker","isBeacon","canUseWith","unshift","RawRecipeRow","handleRemoveRow","onRemoveRow","handleMachineChange","applyChange","handleNumMachinesChange","handleNumBeaconsChange","handleSetAllModules","Array","fill","handleSetModule","handleSetBeaconModule","handleInputGroupClick","output","find","newNum","onUpdateRow","t","numSlots","slots","getOutput","draggableId","provided","RecipeRow","innerRef","draggableProps","dragHandleProps","renderMachines","role","renderModules","renderBeacons","display","float","minWidth","getFn","path","RE_ADVANCED","RecipePicker","inputRef","query","matches","handleIngredientClick","term","setQuery","calculateMatches","scrollIntoView","handleProductClick","handleQueryInput","handleRecipeClick","onPickRecipe","callback","debCalculateMatches","cancel","bind","addHandler","removeHandler","toLowerCase","conditions","consumes","produces","replace","Fuse","shouldSort","keys","weight","search","placeholder","renderMatches","RecipeMatch","handleClickAdd","ing","prod","ResultName","TotalCard","totals","useMemo","sortByItem","RawRecipeGroup","handleDragEnd","destination","source","onMoveRow","renderRow","handleClickRename","prompt","onRenameGroup","handleClickClone","onCloneGroup","handleClickDelete","window","confirm","onRemoveGroup","onAddRow","availableRecipes","RecipeGroup","onDragEnd","droppableId","droppableProps","setGroup","addGroup","handleRenameGroup","newName","oldGroup","handleCloneGroup","handleRemoveGroup","handleMoveRow","oldIndex","newIndex","from","removed","handleAddRow","su","handleUpdateRow","Settings","setSettings","handleSetDefaultMachine","categoryNames","names","entry","localeCompare","onSetDefaultMachine","CategoryRow","RawApp","handleKeyDown","classList","handleKeyUp","remove","handleClickGroup","activePage","handleClickAddGroup","defaultName","onAddGroup","handleRemoveGroupAtom","changed","xy","onRemoveGroupAtom","handleClickSettings","settingsActive","factoryPills","aria-label","assertNever","Sidebar","renderNavbar","renderBody","App","handleAddGroup","RawAppLoader","loaded","load","then","urlState","exec","decodeURIComponent","inflate","atob","to","JSON","parse","serialization","bodyText","String","storageState","statestr","localStorage","setItem","removeItem","stateobj","previousState","getPreviousState","onSetPreviousState","sheet","process","href","StateWriter","initialRender","useRef","completeState","g","stringify","btoa","deflate","history","replaceState","Prefetch","rel","head","AppLoader","handleSetPreviousState","loadGameData","filename","fetch","response","status","json","GameDataLoader","child","setGameState","usePromise","Toast","onClose","aria-live","aria-atomic","data-dismiss","aria-hidden","nextKey","ToastPortal","toasts","handleNotification","notification","toastPortal","toast","handleClose","renderToast","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,gBAAkB,8BAA8B,SAAW,yB,mBCAvGD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,WAAa,mC,mBCAjFD,EAAOC,QAAU,CAAC,QAAU,gC,mBCA5BD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,QAAU,uB,mBCA5BD,EAAOC,QAAU,CAAC,YAAc,mC,mJCSnBC,EAAb,4MACEC,MAAe,CACbC,cAAUC,GAFd,oEAKwBC,EAAkBC,GACtC,OAAOA,EAAUH,WAAaI,KAAKL,MAAMC,WAN7C,wCASoBK,EAAcC,GAE9BF,KAAKG,SAAS,CACZP,SAAU,CACR,mBACAM,EAAUE,eACV,GACAH,GAASA,EAAMI,OACfC,KAAK,UAjBb,+BAsBI,OAAIN,KAAKL,MAAMC,SAEX,sBAAKW,UAAWC,IAAOC,QAAvB,UACE,0CACA,8BAAMT,KAAKL,MAAMC,cAKhBI,KAAKU,MAAMC,aA/BtB,GAAkCC,IAAMC,W,yBCF3BC,EAAeC,YAAsB,CAChDC,IAAK,WAGLC,QAAS,OAGEC,EAAc,WACzB,IAAMC,EAAWC,YAAeN,GAChC,IAAKK,EACH,MAAM,IAAIE,MAAM,iDAElB,OAAOF,GAWIG,EAAmBP,YAA+B,CAC7DC,IAAK,eACLC,aAASpB,IAOE0B,EAAiBR,YAAkB,CAC9CC,IAAK,aACLC,QAAS,KAGEO,EAAcC,YAAyC,CAClET,IAAK,cACLU,IAAK,YAAc,IAAXA,EAAU,EAAVA,IAEN,OADmBA,EAAIH,GACLI,KAAI,SAACC,GAAD,MAAe,CAACF,EAAIE,GAAYA,SAO7CC,EAAed,YAAsB,CAChDC,IAAK,WACLC,QAAS,CACPa,mBAAoB,M,cCzDjB,SAASC,EAAOC,EAAgBC,GACrC,IAAKD,EACH,MAAM,IAAIX,MAAMY,GAAW,oBAQxB,SAASC,EACdC,EACAC,GAGA,IADA,IAAIC,EAA4B,GAChC,MAA2BC,OAAOC,QAAQJ,GAA1C,eAAgD,CAAC,IAAD,sBAApCnB,EAAoC,KAA/BwB,EAA+B,KAC9CH,EAAIrB,GAAOoB,EAAGI,GAEhB,OAAOH,EAGF,SAASI,EAASC,GACvB,OAAOJ,OAAOK,OAAOL,OAAOM,OAAON,OAAOO,eAAeH,IAAQA,GAG5D,SAASI,EAAOC,EAAaC,GAClC,IAAMC,EAAMC,KAAKC,IAAI,GAAIH,GACzB,OAAOE,KAAKE,MAAML,EAAME,GAAOA,EAG1B,SAASI,EAAiBC,EAAgBC,GAE/C,IADA,IAAIC,EAAI,EACDA,EAAID,EAASE,QACdH,GAAU,IADYE,IAExBF,GAAkB,IAMtB,MAAM,GAAN,OAAUR,EAAOQ,EAAQ,GAAzB,YAA+BC,EAASC,IAOnC,SAASE,EAAcC,GAC5B,OAAON,EAAiBM,EAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,OAWzD,SAASC,EACdxB,EACAyB,GAEA,IAAIC,EAEJ,SAASC,IAA6B,IAAD,uBAAfC,EAAe,yBAAfA,EAAe,qBACjBnE,IAAdiE,GACFG,aAAaH,GAEfA,EAAYI,YAAW,WACrBJ,OAAYjE,EACZuC,EAAE,WAAF,EAAM4B,KACLH,GAcL,OAJAvB,OAAO6B,eAAeJ,EAAW,SAAU,CACzCvB,MARF,gBACoB3C,IAAdiE,IACFG,aAAaH,GACbA,OAAYjE,MAQTkE,EAwBF,SAASK,EAAgBC,GAAqB,IAAD,EAjB7C,SAAsBA,GAC3B,IAAMC,EAAWD,EAAKE,UAChBC,EAAUC,KAAKC,MACfC,EAASH,EAAUF,EAAW,MAAQ,WAEtCM,EAAU1B,KAAK2B,MAAM3B,KAAK4B,IAAIN,EAAUF,GAAY,KAC1D,GAAIM,GAAW,GAAI,CACjB,IAAMG,EAAU7B,KAAK2B,MAAMD,EAAU,IAC/BI,EAAmB,IAAZD,EAAgB,SAAW,UAClCE,EAAqC,KAAvB,GAAML,EAAU,IACpC,MAAO,CAAC,GAAD,OAAIG,EAAJ,YAAeC,EAAf,YAAuBL,GAAUM,GAExC,IAAMD,EAAmB,IAAZJ,EAAgB,SAAW,UACxC,MAAO,CAAC,GAAD,OAAIA,EAAJ,YAAeI,EAAf,YAAuBL,GAAU,KAKhBO,CAAab,GADW,mBAC3Cc,EAD2C,KAClCC,EADkC,OAGhBC,mBAAS,GAHO,mBAGhCC,GAHgC,WAiBlD,OAXAC,qBAAU,WACR,IAAMC,EAAMC,aAAY,WAEtBH,GAAa,SAACI,GAAD,OAAOA,EAAI,OACvBN,GAEH,OAAO,WACLO,cAAcH,MAEf,CAACJ,IAEGD,EC/HT,SAASS,EAAQC,EAAWC,GAC1B,OAAQA,EAAQF,EAAQE,EAAGD,EAAIC,GAAnBD,EAGd,SAASE,EACPF,EACAC,GAQA,OAHA/D,EAAOiE,OAAOC,cAAcJ,IAC5B9D,EAAOiE,OAAOC,cAAcH,IAErB,CACLI,SAAUhD,KAAK2B,MAAMgB,EAAIC,GACzBK,UAAWN,EAAIC,GAInB,IAAMM,EAA0B,IAEnBC,EAAb,WAIE,WAAYC,EAAWC,GAAY,yBAH1BD,OAGyB,OAFzBC,OAEyB,EAChCxE,EACEiE,OAAOC,cAAcK,GADjB,gDAEqCA,IAE3CvE,EACEiE,OAAOC,cAAcM,GADjB,kDAEuCA,IAE7CxE,EAAa,IAANwE,EAAS,gCAEZA,EAAI,IACND,GAAKA,EACLC,GAAKA,GAGG,IAAND,IACFC,EAAI,GAGN,IAAMC,EAAMZ,EAAQU,EAAGC,GACnBC,EAAM,IACRF,GAAQE,EACRD,GAAQC,GAEVxG,KAAKsG,EAAIA,EACTtG,KAAKuG,EAAIA,EA9Bb,oDAqCI,IAAME,EAASV,EAAW/F,KAAKsG,EAAGtG,KAAKuG,GACnCG,EAAS,IAAIL,EAASI,EAAOP,SAAU,GAI3C,OAHIQ,EAAOC,KAAKN,EAASO,OAA8B,IAArBH,EAAON,YACvCO,EAASA,EAAOG,IAAIR,EAASS,MAExBJ,IA1CX,+BA8CI,OAAO,IAAIL,GAAUrG,KAAKsG,EAAGtG,KAAKuG,KA9CtC,+BAkDI,OAAO,IAAIF,EAASrG,KAAKuG,EAAGvG,KAAKsG,KAlDrC,0BAqDMS,GACF,OAAO,IAAIV,EAASrG,KAAKsG,EAAIS,EAAMR,EAAIvG,KAAKuG,EAAIQ,EAAMT,EAAGtG,KAAKuG,EAAIQ,EAAMR,KAtD5E,0BAyDMQ,GACF,OAAO,IAAIV,EAASrG,KAAKsG,EAAIS,EAAMR,EAAIvG,KAAKuG,EAAIQ,EAAMT,EAAGtG,KAAKuG,EAAIQ,EAAMR,KA1D5E,0BA6DMQ,GAIF,MAHoB,iBAATA,IACTA,EAAQV,EAASW,UAAUD,IAEtB,IAAIV,EAASrG,KAAKsG,EAAIS,EAAMT,EAAGtG,KAAKuG,EAAIQ,EAAMR,KAjEzD,0BAoEMQ,GACF,OAAO,IAAIV,EAASrG,KAAKsG,EAAIS,EAAMR,EAAGvG,KAAKuG,EAAIQ,EAAMT,KArEzD,4BAwEQW,EAAwBC,GAQ5B,MAPkB,iBAAPD,IACTA,EAAMZ,EAASW,UAAUC,IAET,iBAAPC,IACTA,EAAMb,EAASW,UAAUE,IAGvBlH,KAAK2G,KAAKM,GAAaA,EACvBC,EAAIP,KAAK3G,MAAckH,EACpBlH,OAlFX,6BAwFS+G,GACL,IACIP,EADWxG,KAAKwG,IAAIO,GACLlC,QAEnB,MAAO,CAAEqB,SAAUM,EAAKL,UADdnG,KAAK6G,IAAIE,EAAMI,IAAIX,OA3FjC,4BA+FQO,GACJ,OAAO/G,KAAKsG,IAAMS,EAAMT,GAAKtG,KAAKuG,IAAMQ,EAAMR,IAhGlD,mCAoGI,OAAOvG,KAAKsG,EAAI,IApGpB,mCAuGI,OAAOtG,KAAKsG,EAAI,IAvGpB,8BA2GI,OAAkB,IAAXtG,KAAKsG,IA3GhB,+BA+GI,OAAkB,IAAXtG,KAAKsG,IA/GhB,2BAkHOS,GACH,OAAO/G,KAAKsG,EAAIS,EAAMR,EAAIvG,KAAKuG,EAAIQ,EAAMT,IAnH7C,gCAuHI,OAAOtG,KAAKsG,EAAItG,KAAKuG,IAvHzB,iCA2HI,OAAOvG,KAAKoH,eA3HhB,mCA+HI,OAAe,IAAXpH,KAAKuG,EACAvG,KAAKsG,EAAEe,WAETrH,KAAKsG,EAAEe,WAAa,IAAMrH,KAAKuG,EAAEc,aAlI5C,gCAqIYC,EAAoBC,GACX,MAAbD,IACFA,EAAY,GAEQ,MAAlBC,IACFA,EAAiB,IAAIlB,EAAS,EAAb,SAAgB,GAAOiB,EAAY,KAGtD,IAAIE,EAAO,GACPC,EAAczH,KACdyH,EAAEC,eACJF,EAAO,IACPC,EAAIA,EAAEE,UAQR,IALA,IAAIlB,EAASV,GADb0B,EAAIA,EAAEG,IAAIL,IACgBjB,EAAGmB,EAAElB,GAC3BsB,EAAcpB,EAAOP,SAASmB,WAC9BS,EAAc,GACdC,EAAW,IAAI1B,EAASI,EAAON,UAAWsB,EAAElB,GAC5CyB,EAAM,IAAI3B,EAAS,GAAI,GACpBiB,EAAY,IAAMS,EAASE,MAAMV,IAAiB,CACvDQ,EAAWA,EAASZ,IAAIa,GACxBT,EAAiBA,EAAeJ,IAAIa,GACpC,IAAIvB,EAASV,EAAWgC,EAASzB,EAAGyB,EAASxB,GAC7CuB,GAAerB,EAAOP,SAASmB,WAC/BU,EAAW,IAAI1B,EAASI,EAAON,UAAW4B,EAASxB,GACnDe,IAEF,GAAIS,EAASE,MAAMV,GACjB,KAA+C,MAAxCO,EAAYA,EAAYrE,OAAS,IACtCqE,EAAcA,EAAYI,MAAM,EAAGJ,EAAYrE,OAAS,GAG5D,MAAoB,KAAhBqE,EACKN,EAAOK,EAAc,IAAMC,EAE7BN,EAAOK,IAzKlB,gCA6KI,GAAI7H,KAAKmI,SACP,MAAO,IAFO,MAKgBnI,KAAKyG,OAAOJ,EAASS,KAA7CZ,EALQ,EAKRA,SAAUC,EALF,EAKEA,UAEdiC,EAAkB,GAQtB,OAPKlC,EAASiC,UACZC,EAAMC,KAAKnC,EAASkB,cAEjBjB,EAAUgC,UACbC,EAAMC,KAAKlC,EAAUiB,cAGhBgB,EAAM9H,KAAK,UA3LtB,iCAiMmByC,GACf,GAAIiD,OAAOsC,UAAUvF,GACnB,OAAO,IAAI/C,KAAK+C,EAAK,GAIvB,IANsC,EAMhC2C,EAAI,IAAIW,EACZnD,KAAKE,MAAML,EAAMqD,GACjBA,GAGIK,EAASf,EAAEe,OAAOJ,EAASS,KAXK,cAYXyB,GAZW,IAYtC,2BAAoC,CAAC,IAAD,yBAAxBvH,EAAwB,KAAnBwB,EAAmB,KAClC,GAAIiE,EAAON,UAAU8B,MAAMjH,GACzB,OAAOyF,EAAOP,SAAS0B,IAAIpF,IAdO,8BAkBtC,OAAOkD,IAnNX,+BAqNkBY,EAAWC,GACzB,OAAO,IAAIvG,KAAKsG,EAAGC,KAtNvB,iCAyNoBiC,GAChB,IADuC,EACnCC,EAAMpC,EAASO,KADoB,cAGtB4B,EAAIE,MAAM,MAHY,IAGvC,2BAAiC,CAAC,IAAzBC,EAAwB,QAE/B,GADAA,EAAOA,EAAKC,OACZ,CAEA,IAAMC,EAAQF,EAAKG,QAAQ,KAC3B,IAAe,IAAXD,EACFJ,EAAMA,EAAIb,IAAIvB,EAASW,UAAUhB,OAAO2C,SACnC,CACL,IAAMrC,EAAIN,OAAO2C,EAAKT,MAAM,EAAGW,IACzBtC,EAAIP,OAAO2C,EAAKT,MAAMW,EAAQ,IACpCJ,EAAMA,EAAIb,IAAIvB,EAAS0C,SAASzC,EAAGC,OAbA,8BAiBvC,OAAOkC,MA1OX,KAAapC,EA6OJO,KAAO,IAAIP,EAAS,EAAG,GA7OnBA,EA8OJS,IAAM,IAAIT,EAAS,EAAG,GA9OlBA,EA+OJ2C,SAAW,IAAI3C,EAAS,EAAG,GA/OvBA,EAgPJ4C,UAAY,IAAI5C,EAAS,EAAG,GAKrC,IAFA,IAAMkC,EAAkC,GAE/BhC,EAAI,EAAGA,EAAI,IAAKA,IACvB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAGD,IAAK,CAC1B,IAAMvD,EAAMuD,EAAIC,EAGhB,KAAIxD,EAAIsE,WAAW5D,OAAS,IAA5B,CAKA,IAAMyF,EAAU,IAAI7C,EAClBnD,KAAKE,MAAML,EAAMqD,GACjBA,GAEFmC,EAAQF,KAAK,CAACa,EAAS7C,EAAS0C,SAASzC,EAAGC,KAG5C,IAAM4C,EAAU,IAAI9C,EAClBnD,KAAK2B,MAAM9B,EAAMqD,GACjBA,GAEFmC,EAAQF,KAAK,CAACc,EAAS9C,EAAS0C,SAASzC,EAAGC,M,2BCtRnC6C,EAAb,WAME,WAAYC,GAAyB,yBAL5BC,UAK2B,OAJ3BC,mBAI2B,OAH3BC,aAG2B,OAF3BC,aAE2B,EAClCzJ,KAAKsJ,KAAOD,EAAKC,KACjBtJ,KAAKuJ,cAAgBF,EAAKK,eAC1B1J,KAAKwJ,QAAUH,EAAKM,SACpB3J,KAAKyJ,QAAUJ,EAAKO,SAVxB,qDAcI,OAAO5J,KAAKuJ,cAAcM,OAd9B,KAkBaC,EAAb,kDASE,WAAYC,GAAiB,IAAD,gCAC1B,cAAMA,IATCC,WAQmB,IAPnBC,cAOmB,IANnBC,WAMmB,IALnBC,eAKmB,IAHnBC,OAAmB,GAGA,EAFnBC,OAAmB,GAK1B,EAAKL,MAAQD,EAAEC,MACf,EAAKC,SAAWF,EAAEE,SAClB,EAAKC,MAAQH,EAAEG,MACf,EAAKC,UAAL,UAAiBJ,EAAEO,kBAAnB,QAAiC,KANP,EAT9B,UAA0BlB,GAmBbmB,EAAb,kDAUE,WAAYR,GAAuB,IAAD,8BAChC,cAAMA,IAVCS,UASyB,IARzBC,eAQyB,IAPzBC,aAOyB,EAEhC,EAAKF,KAAOT,EAAES,KACd,EAAKC,UAAY,IAAIE,IAAIZ,EAAEa,YAE3B,EAAKF,QAAU,CACbG,MAAOxE,EAASW,WAAW+C,EAAEe,OAAOD,OAAS,CAAEE,MAAO,IAAKA,OAC3DC,aAAc3E,EAASW,WACpB+C,EAAEe,OAAOE,cAAgB,CAAED,MAAO,IAAKA,OAE1CE,YAAa5E,EAASW,WACnB+C,EAAEe,OAAOG,aAAe,CAAEF,MAAO,IAAKA,OAEzCG,UAAW7E,EAASW,WAAW+C,EAAEe,OAAOI,WAAa,CAAEH,MAAO,IAAKA,QAbrC,EAVpC,uDA2BaI,GACT,OAA4B,IAAxBnL,KAAKyK,UAAUW,MAIZpL,KAAKyK,UAAUY,IAAIF,EAAO7B,UAhCrC,GAA4BQ,GAoCfwB,EAAb,kDAIE,WAAYvB,GAAsB,IAAD,8BAC/B,cAAMA,IAJCwB,wBAGwB,IAFxBf,KAAgB,QAIvB,EAAKe,mBAAqBxB,EAAEyB,oBAFG,EAJnC,UAA2B1B,GAUd2B,EAAb,WAME,WAAY1B,EAAsB2B,GAAe,IAAD,2BALvClB,UAKuC,OAJvClB,UAIuC,OAHhDhG,YAGgD,OAFvCqI,UAEuC,EAC9C3L,KAAKsJ,KAAOS,EAAET,KACdtJ,KAAKsD,OAAS+C,EAASW,UAAU+C,EAAEzG,QACnCtD,KAAKwK,KAAL,UAAYT,EAAES,YAAd,QAAsB,OACtBxK,KAAK2L,KAAOD,EAAGE,QAAQ7B,EAAET,MAV7B,qDAcI,MAAM,GAAN,OAAUtJ,KAAKsD,OAAOuI,YAAtB,iBAAuC7L,KAAK2L,KAAKG,cAdrD,KAkBaC,EAAb,kDAME,WAAYhC,EAAsB2B,GAAe,IAAD,8BAC9C,cAAM3B,EAAG2B,IANFlB,KAAgB,QAKuB,EAJvCmB,UAIuC,IAHvCK,wBAGuC,IAFvCC,wBAEuC,EAE9C,EAAKN,KAAOD,EAAGQ,SAASnC,EAAET,MAE1B,EAAK0C,mBAAqBjC,EAAEoC,sBAAwBC,IACpD,EAAKH,mBAAqBlC,EAAEsC,qBAAuBD,IAE/C,EAAKH,oBAAsB,WAC7B,EAAKA,mBAAqBG,KAExB,EAAKJ,qBAAuB,WAC9B,EAAKA,oBAAsBI,KAXiB,EANlD,qDAsBI,IAAMnF,EAAMjH,KAAKgM,mBACX9E,EAAMlH,KAAKiM,mBACbK,EAAQ,GAQZ,OAPIrF,KAASmF,KAAYlF,IAAQkF,IAC/BE,EAAK,YAAQrF,EAAR,uBAAkBC,EAAlB,SACIA,IAAQkF,IACjBE,EAAK,mBAAUpF,EAAV,SACID,KAASmF,MAClBE,EAAK,mBAAUpF,EAAV,UAED,GAAN,OAAUlH,KAAKsD,OAAOuI,YAAtB,iBAAuC7L,KAAK2L,KAAKG,UAAjD,OAA4DQ,OAhChE,GAAqCb,GAoCxBc,EAAb,WAKE,WAAYxC,EAAmB2B,GAI7B,IAAIpI,EAJwC,yBAJrCgG,UAIoC,OAHpCqC,UAGoC,OAF7CrI,YAE6C,EAC3CtD,KAAKsJ,KAAOS,EAAET,KACdtJ,KAAK2L,KAAOD,EAAGE,QAAQ7B,EAAET,MAIvBhG,EADE,WAAYyG,EACL1D,EAASW,UAAU+C,EAAEzG,QAErB+C,EAAS0C,SAASgB,EAAEyC,WAAazC,EAAE0C,WAAY,GAG9B,iBAAjB1C,EAAE2C,cACW,IAAlB3C,EAAE2C,YACJpJ,EAAS+C,EAASO,KACS,IAAlBmD,EAAE2C,cACX3K,EAAOgI,EAAE2C,YAAc,GACvB3K,EAAOgI,EAAE2C,YAAc,GACvBpJ,EAASA,EAAO6D,IAAId,EAASW,UAAU+C,EAAE2C,gBAG7C1M,KAAKsD,OAASA,EAzBlB,sDAgCYqJ,GACR,OAAOA,EAAWhB,OAAS3L,KAAK2L,OAjCpC,+BA6BI,MAAM,GAAN,OAAU3L,KAAKsD,OAAOuI,YAAtB,iBAAuC7L,KAAK2L,KAAKG,cA7BrD,KAqCac,GAAb,kDAIE,WAAY7C,EAAmB2B,GAAe,IAAD,8BAC3C,cAAM3B,EAAG2B,IAJFC,UAGoC,IAFpCkB,iBAEoC,EAE3C,EAAKlB,KAAOD,EAAGQ,SAASnC,EAAET,MAC1B,EAAKuD,YAAc9C,EAAE8C,aAAe,EAAKlB,KAAKJ,mBAHH,EAJ/C,sDAkBYoB,GACR,OACEA,EAAWhB,OAAS3L,KAAK2L,MACzBgB,aAAsBZ,GACtBY,EAAWV,oBAAsBjM,KAAK6M,aACtCF,EAAWX,oBAAsBhM,KAAK6M,cAvB5C,+BAWI,IAAIC,EAAO,GAIX,OAHI9M,KAAK6M,cAAgB7M,KAAK2L,KAAKJ,qBACjCuB,EAAI,YAAQ9M,KAAK6M,YAAb,UAEA,GAAN,OAAU7M,KAAKsD,OAAOuI,YAAtB,iBAAuC7L,KAAK2L,KAAKG,UAAjD,OAA4DgB,OAfhE,GAAkCP,GA4BrBQ,GAAb,kDAQE,WAAYhD,EAAkB2B,GAAe,IAAD,8BAC1C,cAAM3B,IARCiD,cAOmC,IANnCC,iBAMmC,IALnCC,cAKmC,IAJnCC,kBAImC,IAFnCC,OAA8B,GAIrC,EAAKJ,SAAWjD,EAAEiD,SAClB,EAAKG,aAAe9G,EAASW,UAAU+C,EAAEsD,iBAEzC,EAAKJ,YAAclD,EAAEkD,YAAYtL,KAAI,SAACgL,GACpC,MAAwB,UAApBA,EAAWnC,KACN,IAAIuB,EAAgBY,EAAYjB,GAEhC,IAAID,EAAWkB,EAAYjB,MAItC,EAAKwB,SAAWnD,EAAEuD,QAAQ3L,KAAI,SAAC+E,GAC7B,MAAoB,UAAhBA,EAAO8D,KACF,IAAIoC,GAAalG,EAAQgF,GAEzB,IAAIa,EAAQ7F,EAAQgF,MAjBW,EAR9C,qDA+BI,GAA6B,IAAzB1L,KAAKkN,SAASzJ,OAChB,OAAO,sDAET,IAAM8J,EAAUvN,KAAKkN,SAAS,GAE9B,OADAnL,EAAOwL,EAAS,0BACZA,EAAQjK,OAAO2E,MAAM5B,EAASS,KACzByG,EAAQ5B,KAAKG,SAEbyB,EAAQzB,aAvCrB,GAA4B1C,GAoDfoE,GAAb,kDAKE,WAAYnE,GAAiC,IAAD,8BAC1C,cAAMA,IALCoE,wBAImC,IAHnCC,mBAGmC,IAFnCC,iBAEmC,EAE1C,EAAKF,mBAAqBpE,EAAKuE,oBAC/B,EAAKF,cAAgBrE,EAAKwE,eAC1B,EAAKF,YAActE,EAAKyE,aAJkB,EAL9C,2DAYiB3C,GAEb,OAA0D,IAAtDnL,KAAKyN,mBAAmB3E,QAAQqC,EAAO6B,cAd/C,GARA,kDAGE,WAAY3D,GAA0B,uCAC9BA,GAJV,UAAyCD,IAsD5B2E,GAAb,WAsBE,WAAYC,GAAmB,yBArBtBC,QAAU,IAAIC,IAqBO,KAnBrBC,OAAkB,GAmBG,KAlBrBC,SAAW,IAAIF,IAkBM,KAhBrBG,QAAoB,GAgBC,KAfrBC,UAAY,IAAIJ,IAeK,KAbrBK,QAAoB,GAaC,KAZrBC,UAAY,IAAIN,IAYK,KAVrBO,UAAY,IAAIP,IAUK,KARrBQ,iBAQqB,OAPrBC,YAOqB,OALrBC,iBAKqB,OAJrBC,oBAIqB,OAFrBC,gBAEqB,EAC5B9O,KAAK8O,WAAad,EAAIe,QAAQC,KAE9B,cAAoB1M,OAAO2M,OAAOjB,EAAI,uBAAtC,eAA8D,CAAzD,IAAMkB,EAAK,KACRC,EAAS,IAAI3B,GAAkB0B,GACrClP,KAAKyO,UAAUW,IAAID,EAAO7F,KAAM6F,GAGlC,cAAoB7M,OAAO2M,OAAOjB,EAAG,SAArC,eAAmD,CAA9C,IAAMkB,EAAK,KACRC,EAAS,IAAI3B,GAAkB0B,GACrClP,KAAKyO,UAAUW,IAAID,EAAO7F,KAAM6F,GAGlC,cAAoB7M,OAAO2M,OAAOjB,EAAI,gBAAtC,eAAuD,CAAlD,IAAMkB,EAAK,KACRC,EAAS,IAAI3B,GAAkB0B,GACrClP,KAAKyO,UAAUW,IAAID,EAAO7F,KAAM6F,GAGlC,cAA6B7M,OAAO2M,OAAOjB,EAAI,iBAA/C,eAAiE,CAA5D,IAAMqB,EAAc,KACjBC,EAAoC,2BACrCD,GADqC,IAExCzB,oBAAqByB,EAAeE,oBAAoB5N,KACtD,SAAC+D,GAAD,MAAO,YAAcA,KAEvBmI,eAAgBwB,EAAeG,aAC/BC,iBAAkB,IAEdC,EAAU,IAAIlC,GAAkB8B,GACtCtP,KAAKyO,UAAUW,IAAIE,EAAWhG,KAAMoG,GAGtC,cAAsBpN,OAAO2M,OAAOjB,EAAI2B,OAAxC,eAAgD,CAA3C,IAAMC,EAAO,KAChB,GAAI,SAAUA,GAA4B,UAAjBA,EAAQpF,KAAkB,CACjD,IAAMqF,EAAQ,IAAIvE,EAAMsE,GACxB5P,KAAKiO,QAAQmB,IAAIS,EAAMvG,KAAMuG,GAC7B7P,KAAKmO,OAAO9F,KAAKwH,GACjB7P,KAAKoO,SAASgB,IAAIS,EAAMvG,KAAMuG,QACzB,GAAI,SAAUD,GAA4B,WAAjBA,EAAQpF,KAAmB,CACzD,IAAMmB,EAAO,IAAIpB,EAAOqF,GACxB5P,KAAKiO,QAAQmB,IAAIzD,EAAKrC,KAAMqC,GAC5B3L,KAAKqO,QAAQhG,KAAKsD,GAClB3L,KAAKsO,UAAUc,IAAIzD,EAAKrC,KAAMqC,OACzB,CACL,IAAMA,EAAO,IAAI7B,EAAK8F,GACtB5P,KAAKiO,QAAQmB,IAAIzD,EAAKrC,KAAMqC,IAOhC,IAHA,IAAM4C,EAAoB,GAG1B,MAAwBjM,OAAO2M,OAAOjB,EAAIO,SAA1C,eAAoD,CAA/C,IAAMuB,EAAS,KAClBvB,EAAQlG,KAAK,IAAI0E,GAAO+C,EAAW9P,OAIrC,cAA0BsC,OAAO2M,OAAOjB,EAAI+B,UAA5C,eAAuD,CAAlD,IAAMC,EAAW,KACdhD,EAAQ,mBAAegD,EAAYhD,UACnCC,EAAmC,GAFY,EAGZ+C,EAAYC,QAA7CC,EAH6C,EAG7CA,aAAcC,EAH+B,EAG/BA,eAClBD,GAAgBC,GAClBlD,EAAY5E,KAAK,CACfiB,KAAM6G,EACN3F,KAAM,QAENlH,OAAQ4M,EAAe,KAG3B3B,EAAQlG,KACN,IAAI0E,GACF,CACEzD,KAAK,YAAD,OAAc0G,EAAY1G,MAC9BI,eAAgBsG,EAAYtG,eAC5BsD,WACAK,gBAAiB2C,EAAYC,QAAQG,YACrCpG,MAAOgD,EACP/C,SAAU+C,EACVrD,SAAUqG,EAAYrG,SACtBC,SAAUoG,EAAYpG,SACtBqD,cACAK,QAAS0C,EAAYC,QAAQ3C,QAC7B9C,KAAM,SACNN,MAAO,KAETlK,OAKN,cAAqBuO,EAArB,eAA8B,CAAzB,IAAyB,EAAnBpD,EAAM,KAAa,cACPnL,KAAKyO,UAAUQ,UADR,IAC5B,2BAA8C,CAAC,IAApCE,EAAmC,QACxC,mBAAoBA,GAAUA,EAAOkB,eAAelF,IACtDA,EAAOiC,OAAO/E,KAAK8G,IAHK,gCAM5B,GAAKhE,EAAOiC,OAAO3J,QAOnB,GADoB0H,EAAO+B,SAASoD,MAAK,SAAChK,GAAD,OAAOA,EAAEhD,OAAOiN,gBACzD,CAb4B,oBAiBHpF,EAAO8B,aAjBJ,IAiB5B,2BAA6C,SAChCtB,KAAKvB,OAAO/B,KAAK8C,IAlBF,qDAoBNA,EAAO+B,UApBD,IAoB5B,6BAAuC,SAC7BvB,KAAKtB,OAAOhC,KAAK8C,IArBC,kCAuB5BnL,KAAKuO,QAAQlG,KAAK8C,GAClBnL,KAAKwO,UAAUY,IAAIjE,EAAO7B,KAAM6B,SAhB9BqF,QAAQC,KAAR,uCAA6CtF,EAAO7B,OAmBxDtJ,KAAK0O,YAzJiB,SAACgC,GACzB,IADqE,EAC/DC,EAAsB,GADyC,cAEhDD,GAFgD,IAErE,2BAA+B,CAAC,IAAD,EAApBvB,EAAoB,sBACNA,EAAO1B,oBADD,IAC7B,2BAAkD,CAAC,IAAxCT,EAAuC,QAC1C4D,EAAWD,EAAO3D,GACpB4D,EACFA,EAASvI,KAAK8G,GAEdwB,EAAO3D,GAAY,CAACmC,IANK,kCAFsC,gCAYrE,OAAOwB,EA6IcE,CAAkB7Q,KAAKyO,UAAUQ,UACpDjP,KAAK2O,OAASX,EAAIW,OAElB,IAAMC,GAAcZ,EAAIe,QAAQ+B,MAAZ,MACpB/O,EAAO6M,GAAa,wBACpB,IAAMmC,GAAe/C,EAAIe,QAAQ+B,MAAZ,iBACrB/O,EAAOgP,GAAc,4BAErB/Q,KAAK4O,YAAc,IAAIxF,EAAJ,2BACdwF,IADc,IAEjBtF,KAAM,QACNI,eAAgB,CAAEG,GAAI,YAGxB7J,KAAK6O,eAAiB,IAAItE,EAAJ,2BACjBwG,IADiB,IAEpBvG,KAAM,SACNlB,KAAM,YACNI,eAAgB,CAAEG,GAAI,aACtBmD,SAAU,QACVlC,OAAQ,GACRF,WAAY,GACZoG,uBAAwB,GAExBhH,MAAO,GACPC,SAAU,GACVC,MAAO,MApKb,sDAwKYZ,GACR,IAAM6F,EAASnP,KAAKyO,UAAU/M,IAAI4H,GAElC,OADAvH,EAAOoN,EAAD,+BAAiC7F,IAChC6F,IA3KX,+BA8KW7F,GACP,IAAMuG,EAAQ7P,KAAKoO,SAAS1M,IAAI4H,GAEhC,OADAvH,EAAO8N,EAAD,8BAA+BvG,IAC9BuG,IAjLX,8BAoLUvG,GACN,IAAMqC,EAAO3L,KAAKiO,QAAQvM,IAAI4H,GAE9B,OADAvH,EAAO4J,EAAD,6BAA6BrC,IAC5BqC,IAvLX,gCA0LYrC,GACR,IAAM9J,EAASQ,KAAKsO,UAAU5M,IAAI4H,GAElC,OADAvH,EAAOvC,EAAD,+BAAiC8J,IAChC9J,IA7LX,gCAgMY8J,GACR,IAAM6B,EAASnL,KAAKwO,UAAU9M,IAAI4H,GAElC,OADAvH,EAAOoJ,EAAD,+BAAiC7B,IAChC6B,IAnMX,mCAsMeQ,GACX,IAAIsF,EAAa,GACbC,EAAgB,GACdlH,EAAQhK,KAAK2O,OAAOhD,EAAK3B,OAK/B,OAJIA,IACFiH,EAAajH,EAAME,MACnBgH,EAAgBlH,EAAMmH,UAAUxF,EAAK1B,WAAa,IAE7C,CAACgH,EAAYC,EAAevF,EAAKzB,MAAOyB,EAAKrC,QA9MxD,iCAsNgB8H,EAAiBC,GAAwC,IAAD,OACpED,EAAWE,MAAK,SAACzL,EAAMC,GACrB,IAAMyL,EAAU,EAAKC,aAAaH,EAAMxL,IAClC4L,EAAU,EAAKD,aAAaH,EAAMvL,IAExC,IAAK,IAAMtC,KAAK+N,EAAS,CACvB,IAAMG,EAAOH,EAAQ/N,GACfmO,EAAOF,EAAQjO,GACrB,GAAIkO,EAAOC,EACT,OAAO,EACF,GAAID,EAAOC,EAChB,OAAQ,EAIZ,OAAO,SArOb,KCpTO,SAASC,GACdC,EACAC,EACA3Q,GAEA,IAEI4Q,EAFE/E,EAAW6E,aAAiBG,GAAcH,EAAM7E,SAAW6E,EAejE,OANA9P,EALEgQ,EADE/E,KAAY8E,EAAShQ,mBACNgQ,EAAShQ,mBAAmBkL,GAE5B7L,EAASuN,YAAY1B,GAAW,IAK/C6E,aAAiBG,IACnBjQ,GAAiD,IAA1C8P,EAAMzE,OAAOtE,QAAQiJ,IAGvBA,E,aC4DT,SAASE,GAAWjI,GAClB,MAAO,CACLV,KAAMU,EAAMV,KACZ4I,KAAMlI,EAAMkI,KAAKvQ,KAAI,SAAC+D,GACpB,MAAO,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAG2B,WAAY3B,EAAE,GAAIA,EAAE,GAAIA,EAAE,QA2DlD,IAAMyM,GAAQ,iBAAaC,SAASC,SAASC,UA4CpD,SAASC,GACP5S,EACAwB,GAqCA,MAAO,CACLqR,QAAS,EACTnJ,KAAM,CAAEsF,OArCKhP,EAAMgP,OAAOhN,KAAI,SAACqI,GAC/B,MAAO,CACLV,KAAMU,EAAMV,KACZ4I,KAAMlI,EAAMkI,KAAKvQ,KAAI,SAAC8Q,GACpB,IAAIC,EAA6BD,EAAI/C,QAAQpG,KAmB7C,OAlBuBsI,GACrBa,EAAItH,OACJxL,EAAMmS,SACN3Q,GAGiBmI,OAASoJ,IAC1BA,EAAc,MAGY,CAC1BD,EAAItH,OAAO7B,KACXoJ,EACAD,EAAIE,YAAYvL,aAChBqL,EAAIpE,QAAQ1M,KAAI,SAACiR,GAAD,OAAQA,EAAIA,EAAEtJ,KAAO,QACrCmJ,EAAII,aAAeJ,EAAII,aAAavJ,UAAOzJ,EAC3C4S,EAAIK,mBAgBMhB,SATD,CACfhQ,mBAAoBI,EAClBvC,EAAMmS,SAAShQ,oBACf,SAAC+D,GAAD,OAAOA,EAAEyD,WAUf,IAAMyJ,GAAa,sBAsBnB,SAASC,GACPrT,GAEA,OAAQA,EAAM6S,SACZ,KAAK,EACH7S,EAjPN,SAAmBA,GACjB,MAAO,CACL6S,QAAS,EACTnJ,KAAM,CACJ6I,KAAMvS,EAAM0J,KACZyI,SAAU,CACRhQ,mBAAoB,MA2OdmR,CAAUtT,GAEpB,KAAK,EACHA,EA/NN,SAAmBA,GACjB,MAAO,CACL6S,QAAS,EACTnJ,KAAM1J,EAAM0J,MA4NF6J,CAAUvT,GAEpB,KAAK,EACHA,EArNN,SAAmBA,GACjB,MAAO,CACL6S,QAAS,EACTnJ,KAAM,CACJyI,SAAUnS,EAAM0J,KAAKyI,SACrBnD,OAAQ,CACN,CACErF,KAAM,YACN4I,KAAMvS,EAAM0J,KAAK6I,SA6MbiB,CAAUxT,GAEpB,KAAK,EACHA,EAlLN,SAAmBA,GACjB,MAAO,CACL6S,QAAS,EACTnJ,KAAM,CACJyI,SAAUnS,EAAM0J,KAAKyI,SACrBnD,OAAQhP,EAAM0J,KAAKsF,OAAOhN,IAAIsQ,MA6KtBmB,CAAUzT,GAEpB,KAAK,EAEH,MACF,QACE,MAAM,IAAI0B,MAAJ,yBAA4B1B,IAGtC,OAAOA,EAGT,SAAS0T,GACPlS,EACAmS,GAEA,IAAMC,EAAWP,GAAuBM,GAAYjK,KAE9C1J,EAAuB,CAC3BmS,SAAU0B,GAAoBrS,EAAUoS,EAASzB,UACjDnD,OAAQ,IAoCV,OAjCAhP,EAAMgP,OAAS4E,EAAS5E,OAAOhN,KAAI,SAACqI,GAClC,MAAO,CACLV,KAAMU,EAAMV,KACZ4I,KAAMlI,EAAMkI,KAAKvQ,KACf,YAOO,IAAD,mBANJ8R,EAMI,KALJf,EAKI,KAJJC,EAII,KAHJtE,EAGI,KAFJwE,EAEI,KADJC,EACI,KACE3H,EAAShK,EAASuS,UAAUD,GAMlC,MAAO,CACLtI,OAAQA,EACRuE,QANcgD,EACZvR,EAASwS,UAAUjB,GACnBd,GAAkBzG,EAAQxL,EAAMmS,SAAU3Q,GAK5CwR,YAAatM,EAASuN,WAAWjB,GACjCtE,QAASA,EAAQ1M,KAAI,SAACkS,GAAD,OAAQA,EAAI1S,EAAS2S,UAAUD,GAAK,QACzDhB,aAAcA,EACV1R,EAAS2S,UAAUjB,GACnB,KACJC,WAAYA,GAAc,UAO7BnT,EAGT,SAAS6T,GACPrS,EACA4S,GAEA,MAAO,CACLjS,mBAAoBI,EAAU6R,EAAWjS,oBAAoB,SAACwH,GAAD,OAC3DnI,EAASwS,UAAUrK,OC3UlB,IAAM0K,GAAb,4DACEC,SAA+B,GADjC,KAiBEC,SAAW,SAACC,GAAkB,IAAD,gBACL,EAAKF,UADA,IAC3B,2BAAqC,EACnCG,EADmC,SAC3BD,IAFiB,gCAjB/B,uDAGaC,IAEM,IADDpU,KAAKiU,SAASnL,QAAQsL,IAElCpU,KAAKiU,SAAS5L,KAAK+L,KANzB,oCAUgBA,GACZ,IAAMvL,EAAQ7I,KAAKiU,SAASnL,QAAQsL,IACrB,IAAXvL,GACF7I,KAAKiU,SAASI,OAAOxL,EAAO,OAblC,KAwBayL,GAAsB,IAAIN,GAC1BO,GAAmB,IAAIP,GACvBQ,GAAe,IAAIR,GCxBnBS,GAAkB,IAAIT,G,0CCF/BU,GAAU,EAKDC,GAAc,WACzB,IAAMC,EAAgBC,YAAkBtT,GAExC,OAAOuT,uBACL,SAAU9K,GACR4K,GAAc,SAACG,GAAD,6BACTA,GADS,CAEZhU,YAAsB,CACpBC,IAAI,SAAD,SAAa0T,IAChBzT,QAAS+I,WAIf,CAAC4K,KChBQI,GAAb,WAIE,WAAY9C,GACV,GADmC,yBAHrCjF,YAAiC,GAGG,KAFpCC,SAA2B,GAGrBgF,GAAQA,EAAKzO,OAAQ,CAAC,IAAD,gBACLyO,GADK,IACvB,2BAAwB,CAAC,IAAdO,EAAa,QACtBzS,KAAKiV,OAAOxC,IAFS,gCAL7B,0DAYgByC,GAAuC,IAAD,gBAC7BlV,KAAKiN,aADwB,IAClD,2BAAuC,CAAC,IAA7BkI,EAA4B,QACrC,GAAIA,EAAO7L,OAAS4L,EAAc5L,SAIhC4L,aAAyBlD,GACzBmD,aAAkBnD,IAGhBkD,EAAcjJ,qBAAuBkJ,EAAOlJ,oBAC5CiJ,EAAclJ,qBAAuBmJ,EAAOnJ,oBAOhD,YADAmJ,EAAO7R,OAAS6R,EAAO7R,OAAOsE,IAAIsN,EAAc5R,UAjBA,kDAqB5BtD,KAAKkN,UArBuB,IAqBlD,2BAAqC,CAAC,IAA3BkI,EAA0B,QACnC,GAAKA,EAAQC,UAAUH,GAAvB,CACA,IAAIE,EAAQ9R,OAAOqD,KAAKuO,EAAc5R,QAI/B,CACL8R,EAAQ9R,OAAS8R,EAAQ9R,OAAOuD,IAAIqO,EAAc5R,QAClD4R,EAAc5R,OAAS+C,EAASO,KAChC,MAJA,GAFAsO,EAAc5R,OAAS4R,EAAc5R,OAAOuD,IAAIuO,EAAQ9R,QACxD8R,EAAQ9R,OAAS+C,EAASO,KACtBsO,EAAc5R,OAAO6E,SAAU,QA1BW,8BAkClDnI,KAAKiN,YAAY5E,KAAK6M,GACtBlV,KAAKiN,YAAcjN,KAAKiN,YAAYqI,QAAO,SAAChP,GAAD,OAAQA,EAAEhD,OAAO6E,YAC5DnI,KAAKkN,SAAWlN,KAAKkN,SAASoI,QAAO,SAAChP,GAAD,OAAQA,EAAEhD,OAAO6E,cAhD1D,iCAmDaoN,GAAiC,IAAD,gBACnBvV,KAAKkN,UADc,IACzC,2BAAqC,CAAC,IAA3BkI,EAA0B,QACnC,GAAIG,EAAWjM,OAAS8L,EAAQ9L,QAG9BiM,aAAsBvD,IACtBoD,aAAmBpD,IAEfuD,EAAW1I,cAAgBuI,EAAQvI,aAMzC,YADAuI,EAAQ9R,OAAS8R,EAAQ9R,OAAOsE,IAAI2N,EAAWjS,UAbR,kDAiBpBtD,KAAKiN,aAjBe,IAiBzC,2BAAuC,CAAC,IAA7BkI,EAA4B,QACrC,GAAKI,EAAWF,UAAUF,GAA1B,CACA,GAAII,EAAWjS,OAAOqD,KAAKwO,EAAO7R,QAAS,CACzC6R,EAAO7R,OAAS6R,EAAO7R,OAAOuD,IAAI0O,EAAWjS,QAC7CiS,EAAWjS,OAAS+C,EAASO,KAC7B,MAIA,GAFA2O,EAAWjS,OAASiS,EAAWjS,OAAOuD,IAAIsO,EAAO7R,QACjD6R,EAAO7R,OAAS+C,EAASO,KACrB2O,EAAWjS,OAAO6E,SAAU,QA1BK,8BA8BzCnI,KAAKkN,SAAS7E,KAAKkN,GACnBvV,KAAKiN,YAAcjN,KAAKiN,YAAYqI,QAAO,SAAC9R,GAAD,OAAQA,EAAEF,OAAO6E,YAC5DnI,KAAKkN,SAAWlN,KAAKkN,SAASoI,QAAO,SAAC9R,GAAD,OAAQA,EAAEF,OAAO6E,cAnF1D,6BAsFSsK,GACL,IAD+B,EACzB/H,EAAU,CACdO,YAAa5E,EAASS,IACtBoE,UAAW7E,EAASS,IACpBkE,aAAc3E,EAASS,IACvB+D,MAAOxE,EAASS,KALa,cAQV2L,EAAIpE,SARM,IAQ/B,2BAAkC,CAAC,IAAxB7O,EAAuB,QAC3BA,IACLkL,EAAQO,YAAcP,EAAQO,YAAYrD,IAAIpI,EAAOkL,QAAQO,aAC7DP,EAAQQ,UAAYR,EAAQQ,UAAUtD,IAAIpI,EAAOkL,QAAQQ,WACzDR,EAAQM,aAAeN,EAAQM,aAAapD,IAC1CpI,EAAOkL,QAAQM,cAEjBN,EAAQG,MAAQH,EAAQG,MAAMjD,IAAIpI,EAAOkL,QAAQG,SAfpB,8BAkB/B,GAAI4H,EAAII,cAAgBJ,EAAIK,WAAa,EAAG,CAE1C,IAAM0C,EAAK/C,EAAII,aAAanI,QACtB3H,EAAMsD,EAAS0C,SAAS0J,EAAIK,WAAY,GAC9CpI,EAAQO,YAAcP,EAAQO,YAAYrD,IAAI4N,EAAGvK,YAAY9D,IAAIpE,IACjE2H,EAAQQ,UAAYR,EAAQQ,UAAUtD,IAAI4N,EAAGtK,UAAU/D,IAAIpE,IAC3D2H,EAAQM,aAAeN,EAAQM,aAAapD,IAAI4N,EAAGxK,aAAa7D,IAAIpE,IACpE2H,EAAQG,MAAQH,EAAQG,MAAMjD,IAAI4N,EAAG3K,MAAM1D,IAAIpE,IAIjD2H,EAAQO,YAAcP,EAAQO,YAAYwK,MAAM,GAAK,OACrD/K,EAAQQ,UAAYR,EAAQQ,UAAUuK,MAAM,GAAK,OACjD/K,EAAQG,MAAQH,EAAQG,MAAM4K,MAAM,GAAK,OAGzC/K,EAAQM,aAAeN,EAAQM,aAAayK,MAAM,EAAG,OAErD,IApC+B,EAoCzBC,EAAiBrP,EAASS,IAC7BK,IAAIsL,EAAItH,OAAOgC,aAAawI,UAC5BxO,IAAIsL,EAAIE,aACRxL,IAAIsL,EAAI/C,QAAQhC,eAChBvG,IAAIuD,EAAQG,OAET+K,EAAcF,EAAevO,IAAIuD,EAAQM,cA1ChB,cA4CNyH,EAAItH,OAAO8B,YAAYtL,KAAI,SAACgL,GAGnD,OAFAA,EAAalK,EAAMkK,IACRrJ,OAASqJ,EAAWrJ,OAAO6D,IAAIuO,GACnC/I,MA/CsB,IA4C/B,2BAII,CAAC,IAJMA,EAIP,QACF3M,KAAK6V,cAAclJ,IAjDU,kDAoDT8F,EAAItH,OAAO+B,SAASvL,KAAI,SAAC4L,GAG7C,OAFAA,EAAU9K,EAAM8K,IACRjK,OAASiK,EAAQjK,OAAO6D,IAAIyO,GAC7BrI,MAvDsB,IAoD/B,2BAII,CAAC,IAJMA,EAIP,QACFvN,KAAK8V,WAAWvI,IAzDa,mCAtFnC,K,SC4BawI,GAAb,4MACEC,UAAgDpV,cADlD,EAGEjB,MAAe,CACbsW,QAAQ,GAJZ,EAOEC,YAAc,SAACC,GACR,EAAKC,iBAKVD,EAAEE,kBAEF,EAAKlW,UAAS,SAACR,GAAD,mBAAC,eACVA,GADS,IAEZsW,QAAStW,EAAMsW,cAjBrB,EAqBEK,aAAe,SAACC,GACd,EAAK7V,MAAM8V,SAASD,GACpB,EAAKpW,SAAS,CACZ8V,QAAQ,KAxBd,EA4BEQ,gBAAkB,WAChB,EAAKtW,SAAS,CACZ8V,QAAQ,KA9Bd,6DAkC2B,IAAD,gBACDjW,KAAKU,MAAMgW,SADV,IACtB,2BAAyC,CAAC,IAA/BC,EAA8B,QACvC,GAAI,WAAYA,IAAWA,EAAOC,SAChC,OAAO,GAHW,8BAMtB,OAAO,IAxCX,+BA4CI,IAOIC,EAPEC,EAAU,CAAC,MAAO,iBAoBxB,OAnBI9W,KAAKoW,eACPU,EAAQzO,KAAK,mBAEbyO,EAAQzO,KAAK,YAIXrI,KAAKL,MAAMsW,SACbY,EACE,cAAC,GAAD,CACEE,UAAW/W,KAAKgW,UAChBU,QAAS1W,KAAKU,MAAMgW,QACpBM,aAAchX,KAAKU,MAAMsW,aACzBR,SAAUxW,KAAKsW,aACfW,YAAajX,KAAKyW,mBAMtB,qCACE,wBACES,IAAKlX,KAAKgW,UACVzV,UAAWuW,EAAQxW,KAAK,KACxBkK,KAAK,SACL2M,QAASnX,KAAKkW,YAJhB,SAMGlW,KAAKU,MAAM0W,eAAepX,KAAKU,MAAM6V,YAEvCM,SA1ET,GAAiCjW,iBA4F3ByW,G,4MAIJC,eAAgC,K,EAChCC,QAA2C3W,c,EAE3CjB,MAA2B,CACzB6X,MAAO,I,EAGTC,aAAe,SAACpO,GAId,OAHA,EAAKlJ,SAAS,CACZqX,MAAOnO,EAAK7I,SAEP6I,G,EAGTqO,gBAAkB,SAACC,GACXA,EAAMC,kBAAkBC,MAI9B9V,EAAO,EAAKwV,QAAQO,SAEf,EAAKP,QAAQO,QAAQC,SAASJ,EAAMC,SAEvC,EAAKlX,MAAMuW,eAPXzG,QAAQC,KAAK,sCAAuCkH,EAAMC,S,EAW9DI,eAAiB,SAACL,GA7HA,KA8HZA,EAAMM,SACR,EAAKvX,MAAMuW,e,EA0CfiB,cAAgB,WACd,OAAO,EAAKxX,MAAMgW,QAAQ/U,KAAI,SAACgV,EAAQnT,GACrC,GAAI,WAAYmT,EACd,OACE,oBAAIpW,UAAU,kBAAd,SACGoW,EAAOwB,QAD2B,QAAU3U,GAKnD,GAAI,YAAamT,EACf,OAAO,qBAAKpW,UAAU,oBAAwB,QAAUiD,GAG1D,IAAMsT,EAAU,CAAC,iBAIjB,OAHAH,EAAOyB,QAAUtB,EAAQzO,KAAK,UAC9BsO,EAAOC,UAAYE,EAAQzO,KAAK,YAG9B,wBAEE9H,UAAWuW,EAAQxW,KAAK,KACxB6W,QAAS,kBAAM,EAAKzW,MAAM8V,SAASG,EAAOA,SAC1CnM,KAAK,SAJP,SAMG,EAAK9J,MAAMsW,aAAaL,EAAOA,SAL3BA,EAAO3V,S,kEAxDlB,GAAIhB,KAAKsX,eACP,MAAM,IAAIjW,MAAM,4BAGlB,IAAMgX,EAAcrY,KAAKU,MAAMqW,UAAUe,QACzC,IAAKO,EACH,MAAM,IAAIhX,MAAM,+CAGlB,IAAMiX,EAAStY,KAAKuX,QAAQO,QAC5B,IAAKQ,EACH,MAAM,IAAIjX,MAAM,6CAGlBrB,KAAKsX,eAAiB,IAAIiB,KAAOF,EAAaC,EAAQ,CACpDE,UAAW,CACTC,WAAY,CAAEC,SAAS,GACvBC,qBAAsB,CACpBD,SAAS,EACTtW,GAAIpC,KAAKyX,iBAKfrF,SAASwG,KAAKC,iBAAiB,QAAS7Y,KAAK0X,iBAC7CtF,SAASwG,KAAKC,iBAAiB,QAAS7Y,KAAKgY,kB,6CAIzChY,KAAKsX,iBACPtX,KAAKsX,eAAewB,wBACpB9Y,KAAKsX,eAAiB,MAExBlF,SAASwG,KAAKG,oBAAoB,QAAS/Y,KAAK0X,iBAChDtF,SAASwG,KAAKG,oBAAoB,QAAS/Y,KAAKgY,kB,+BAkChD,OACE,qBACEzX,UAAU,qBACViX,MAAOxX,KAAKL,MAAM6X,MAClBN,IAAKlX,KAAKuX,QAHZ,SAKGvX,KAAKkY,sB,GAhHgBtX,iBCnHxBoY,GAA6B,CAAEC,OAAQ,MAEhCC,GAAb,kDAIE,WAAYxY,GAAe,IAAD,8BACxB,cAAMA,IAJRyY,aAG0B,IAF1B7B,oBAE0B,IA+E1B8B,iBAAmB,WACjB,EAAKjZ,SAAS,CACZkZ,UAAU,KAjFY,EAqF1BC,iBAAmB,WACjB,EAAKnZ,SAAS,CACZkZ,UAAU,KArFZ,EAAKF,QAAUvY,cACf,EAAK0W,eAAiB,KACtB,EAAK3X,MAAQ,CACX0Z,UAAU,GALY,EAJ5B,kEAawBE,EAAiBC,GAErC,OACExZ,KAAKU,MAAM+Y,aAAeF,EAASE,YACnCzZ,KAAKL,MAAM0Z,WAAaG,EAASH,UAM5BrZ,KAAKL,MAAM0Z,UAAYrZ,KAAKU,MAAMgZ,UAAYH,EAASG,UAvBlE,mCA2BI,IAAI1Z,KAAKsX,eAAT,CAIA,IAAMe,EAAcrY,KAAKU,MAAM+Y,WAAW3B,QAC1C,IAAKO,EACH,MAAM,IAAIhX,MAAM,sBAGlB,IAAMsY,EAAS3Z,KAAKmZ,QAAQrB,QAC5B,IAAK6B,EACH,MAAM,IAAItY,MAAM,0BAGlBrB,KAAKsX,eAAiB,IAAIiB,KAAOF,EAAasB,EAAQ,CACpDC,UAAW,QACXpB,UAAW,CACTqB,OAAQ,CACNnB,SAAS,EACTmB,OAAQ,SAEVC,gBAAiB,CACfpB,SAAS,EACTqB,kBAAmB,gBAlD7B,sCAyDQ/Z,KAAKsX,iBACPtX,KAAKsX,eAAewB,wBACpB9Y,KAAKsX,eAAiB,QA3D5B,yCA+DqB0C,EAAUC,GACvBA,EAAUZ,WAAarZ,KAAKL,MAAM0Z,WAChCrZ,KAAKL,MAAM0Z,SACbrZ,KAAKka,aAELla,KAAKma,mBApEb,0CA0EI,IAAM9B,EAAcrY,KAAKU,MAAM+Y,WAAW3B,QAC1C,IAAKO,EACH,MAAM,IAAIhX,MAAM,sBAGlBgX,EAAYQ,iBAAiB,aAAc7Y,KAAKoZ,kBAChDf,EAAYQ,iBAAiB,aAAc7Y,KAAKsZ,oBAhFpD,6CAgGI,IAAMjB,EAAcrY,KAAKU,MAAM+Y,WAAW3B,QACtCO,IACFA,EAAYU,oBAAoB,aAAc/Y,KAAKoZ,kBACnDf,EAAYU,oBAAoB,aAAc/Y,KAAKsZ,qBAnGzD,+BAwGI,OAAKtZ,KAAKL,MAAM0Z,SAITe,eACL,qBAAK5C,MAAOwB,GAAO9B,IAAKlX,KAAKmZ,QAA7B,SACGnZ,KAAKU,MAAMgZ,YAEdtH,SAASwG,MAPF,SAzGb,GAA6BhY,aCFhByZ,GAAb,kDACE,WAAY3Z,GAAe,IAAD,8BACxB,cAAMA,IA4BR4Z,aAAe,SAAC3C,GACd,IACI4C,EADEC,EAAW7C,EAAMC,OAAOpV,MAGxBA,EAAQgY,EAAS5R,OAAS5C,OAAOwU,GAAYC,IAC/CzU,OAAO0U,MAAMlY,GACf+X,EAAS,8BACCvU,OAAOsC,UAAU9F,GAEQ,kBAAnB,EAAK9B,MAAMuG,KAAoBzE,EAAQ,EAAK9B,MAAMuG,MAClEsT,EACqB,IAAnB,EAAK7Z,MAAMuG,IACP,mBADJ,+BAE4B,EAAKvG,MAAMuG,MALzCsT,EAAS,qBAQX,EAAKpa,SAAS,CAAEqa,WAAUD,WAAU,WACb,kBAAV/X,GAAuB+X,GAChC,EAAK7Z,MAAMia,SAASnY,OA7CxB,EAAK7C,MAAQ,CACX6a,SAAU9Z,EAAM8B,MAAM6E,WACtBkT,YAAQ1a,GAJc,EAD5B,kEASwBC,EAAkBC,GAEtC,OACEC,KAAKU,MAAM8B,QAAU1C,EAAU0C,OAC/BxC,KAAKU,MAAMuG,MAAQnH,EAAUmH,KAC7BjH,KAAKL,MAAM6a,WAAaza,EAAUya,UAClCxa,KAAKL,MAAM4a,SAAWxa,EAAUwa,SAftC,yCAmBqBhB,GAAwB,IAAD,OACpCA,EAAS/W,QAAUxC,KAAKU,MAAM8B,OAChCxC,KAAKG,UAAS,SAACR,GAAD,MAAY,CACxB6a,SACExU,OAAOrG,EAAM6a,YAAc,EAAK9Z,MAAM8B,MAClC7C,EAAM6a,SACN,EAAK9Z,MAAM8B,MAAM6E,iBAzB/B,+BAsDI,IAAI9G,EAAY,eAKhB,OAJMP,KAAKL,MAAM4a,SACfha,GAAa,eAIb,uBACEA,UAAWA,EACXiC,MAAOxC,KAAKL,MAAM6a,SAClBG,SAAU3a,KAAKsa,aACf9P,KAAK,SACLvD,IAAKjH,KAAKU,MAAMuG,IAChB2T,KAAK,UAlEb,GAAkCha,aCGrBia,GAAb,kDACE,WAAYna,GAAe,IAAD,8BACxB,cAAMA,IAwBR4Z,aAAe,SAAC3C,GACd,IAEImD,EACAC,EAHEvS,EAAMmP,EAAMC,OAAOpV,MAKzB,IACEuY,EAASC,GAAiBxS,GAC1B,MAAOyS,GACPH,EAASG,EAAIhZ,QAGX8Y,GAAU,EAAKra,MAAMwa,cAAgBH,EAAOrT,eAC9CqT,OAASlb,EACTib,EAAS,2BAEX,EAAK3a,SAAS,CAAEqa,SAAUhS,EAAKvI,MAAO6a,IAAU,WAC1CC,GACF,EAAKra,MAAMia,SAASI,OAzCxB,EAAKpb,MAAQ,CACXM,WAAOJ,EACP2a,SAAUW,GAAiBza,EAAM8B,QAJX,EAD5B,+DASqB+W,GACjB,IAAKvZ,KAAKU,MAAM8B,MAAMyF,MAAMsR,EAAS/W,OAAQ,CAC3C,IAAIuY,EACJ,IACEA,EAASC,GAAiBhb,KAAKL,MAAM6a,UACrC,MAAOS,GACP,OAGGF,EAAO9S,MAAMjI,KAAKU,MAAM8B,QAC3BxC,KAAKG,SAAS,CACZqa,SAAUW,GAAiBnb,KAAKU,MAAM8B,YApBhD,+BAkDI,OACE,uBACEjC,UAAW6a,KAAW,eAAgB,CACpC,eAAgBpb,KAAKL,MAAMM,QAE7BuC,MAAOxC,KAAKL,MAAM6a,SAClBG,SAAU3a,KAAKsa,aACf9P,KAAK,aAzDb,GAAmC5J,iBA+DnC,SAASoa,GAAiBxS,GACxB,IAAKA,EAAII,OACP,MAAM,IAAIvH,MAAM,UAKlB,GAFcmH,EAAIM,QAAQ,OACRN,EAAI6S,YAAY,KAEhC,MAAM,IAAIha,MAAM,oBAGlB,OAAOgF,EAASuN,WAAWpL,GAG7B,SAAS2S,GAAiBG,GACxB,IAAMC,EAAMD,EAASE,UAAUnU,WAC/B,OAAIkU,EAAI9X,OAAS,GACR8X,EAGFD,EAASG,U,wBC/ELC,GAAb,4MACEC,QAAU/a,IAAMgb,YADlB,uDAII,IAAMnU,EAA8B,IAAzBzH,KAAKU,MAAMyB,IAAIqH,QACpBqS,EAA8B,IAAzB7b,KAAKU,MAAMyB,IAAIsH,QAEpBqS,EAAgC,CACpCC,mBAAmB,GAAD,OAAKtU,EAAL,cAAYoU,EAAZ,OAGhBG,EACF,qBACE9E,IAAKlX,KAAK2b,QACVxE,QAASnX,KAAKU,MAAMyW,QACpB8E,MAAOjc,KAAKU,MAAMub,MAClB1b,UAAW6a,KAAW5a,KAAOkb,KAAM,YAAa1b,KAAKU,MAAMH,WAC3DiX,MAAOsE,EALT,kBA6BF,OAlBI9b,KAAKU,MAAMwb,UACbF,EACE,qCACGA,EACD,cAAC,GAAD,CAAStC,QAAS1Z,KAAKU,MAAMwb,QAASzC,WAAYzZ,KAAK2b,cAKzD3b,KAAKU,MAAMyb,OACbH,EACE,sBAAKzb,UAAWC,KAAO4b,gBAAvB,UACGJ,EACD,sBAAMzb,UAAWC,KAAO6b,SAAxB,SAAmCrc,KAAKU,MAAMyb,WAK7CH,MAzCX,GAA0Bpb,IAAM0b,eCXnBC,GAAkC,SAAC7b,GAAW,IAGrD8b,EAFIra,EAAQzB,EAARyB,IAGR,GAAIA,EAAIwJ,KAAKxB,UAAW,CACtB,IAAMsS,EAAa/Y,EACjBvB,EAAImB,OAAO6D,IAAIhF,EAAIwJ,KAAKxB,WAAWqR,WAErCgB,EACE,sBAAKjc,UAAU,YAAf,UACE,gCACE,2CADF,KACsBmD,EAAcvB,EAAIwJ,KAAKxB,cAE7C,gCACE,iDADF,KAC4BsS,QAMlC,OACE,sBAAKlc,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACG4B,EAAI2J,SADP,KACmB3J,EAAIwJ,KAAKrC,KAD5B,OAGCkT,M,oBCfME,GAA8B,SAAC,GAAuB,IAArBva,EAAoB,EAApBA,IAAKwa,EAAe,EAAfA,SAAe,EACxBC,YAAetb,GADS,mBACzDub,EADyD,KAC3CC,EAD2C,KAG1D5G,EAAcpB,uBAClB,SAAC6C,GACC,GAAIA,EAAMoF,SAOR,OANApF,EAAMqF,iBACNrF,EAAMtB,uBACNyG,EAAgB,CACdnR,KAAMxJ,EAAIwJ,KACVrI,OAAQnB,EAAImB,SAKZnB,aAAe6P,EACc,IAA3B7P,EAAIwJ,KAAKtB,OAAO5G,OAClBwZ,GAAoB/I,SAAS/R,EAAIwJ,KAAKtB,OAAO,IAE7C4S,GAA2B/I,SAAS/R,GAGP,IAA3BA,EAAIwJ,KAAKvB,OAAO3G,OAClBwZ,GAAoB/I,SAAS/R,EAAIwJ,KAAKvB,OAAO,IAE7C6S,GAAwB/I,SAAS/R,KAIvC,CAACA,EAAK2a,IAGJX,EA0BN,SAAmBb,GACjB,IACIhY,EADEiY,EAAMD,EAASzP,YAAYxE,WAG/B/D,EADEiY,EAAI2B,SAAS,MAAQ3B,EAAI9X,OAAS,EAC3B,sBAAMwY,MAAOX,EAASlU,aAAtB,SAAqCkU,EAASzP,cAE9C0P,EAEX,OAAO,qCAAGjY,EAAH,YAlCI6Z,CAAUhb,EAAImB,QACrBqZ,IACFR,EACE,qCACGha,EAAIwJ,KAAKG,SADZ,WACyBqQ,MAK7B,IAIMiB,EAHJP,GACAA,EAAalR,OAASxJ,EAAIwJ,MAC1BkR,EAAavZ,OAAO2E,MAAM9F,EAAImB,QACF,cAAgB,GAE9C,OACE,cAAC,GAAD,CACE/C,UAAS,UAAKC,KAAOkc,WAAZ,YAA0BU,GACnCjG,QAASjB,EACTgG,QAAS,kBAAM,cAAC,GAAD,CAAgB/Z,IAAKA,KACpCA,IAAKA,EAAIwJ,KACTwQ,KAAMA,KCjEL,IAAMkB,GAA+B,SAAC3c,GAC3C,OACE,qBAAKH,UAAU,oBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,4BAAIG,EAAMgP,QAAQ5D,WAClB,uBACA,gDAHF,IAG0BpL,EAAMgP,QAAQhC,cACtC,uBACA,8CALF,IAKwBhN,EAAMgP,QAAQ/B,kBCF/B2P,GAA8B,SAAC,GAAyB,IAAvBnS,EAAsB,EAAtBA,OAAQgM,EAAc,EAAdA,QAC9ChW,EAAWD,IAMX+L,EAAc9B,EAAO8B,YAAYtL,KAAI,SAACgL,GAAD,OACzC,cAAC,GAAD,CAEExK,IAAKwK,EAAWhB,KAChBwQ,KAAMxP,EAAWb,UAFZa,EAAWrD,SAKd4D,EAAW/B,EAAO+B,SAASvL,KAAI,SAAC4L,GAAD,OACnC,cAAC,GAAD,CAAyBpL,IAAKoL,EAAQ5B,KAAMwQ,KAAM5O,EAAQzB,UAA/CyB,EAAQjE,SAGf8D,EAASjC,EAAOiC,OAAOzL,KAAI,SAAC+N,GAAD,OAC/B,cAAC,GAAD,CAEEvN,IAAKuN,EACLwM,QAAS,kBAAM,cAAC,GAAD,CAAaxM,QAASA,MAFhCA,EAAQpG,SAMjB,OACE,sBAAK/I,UAAU,sBAAsB4W,QAxBnB,WAClBA,GAAWA,EAAQhM,IAuBnB,UACE,qBAAK5K,UAAU,cAAf,SACE,cAAC,GAAD,CAAM4B,IAAKgJ,EAAQgR,KAAI,UAAKhR,EAAOW,SAAZ,iBAEzB,qBAAIvL,UAAU,8BAAd,UACE,qBAAIA,UAAU,kBAAd,UACE,6CACC0M,EACD,cAAC,GAAD,CACE9K,IAAKhB,EAASyN,YACduN,KACE,iCACE,8BAAIhR,EAAOgC,aAAatB,YAAxB,QADF,yBAMN,qBAAItL,UAAU,kBAAd,UACE,0CACC2M,KAEH,qBAAI3M,UAAU,kBAAd,UACE,yCACA,uBACC6M,YClDLgK,GAAiB,SAAC1H,GACtB,OAAO,cAAC,GAAD,CAAMvN,IAAKuN,EAASwM,QAAS,kBAAM,cAAC,GAAD,CAAaxM,QAASA,QAG5DsH,GAAe,SAACtH,GACpB,OACE,cAAC,GAAD,CACEvN,IAAKuN,EACLwM,QAAS,kBAAM,cAAC,GAAD,CAAaxM,QAASA,KACrCyM,KAAMzM,EAAQ5D,YAKPyR,GAA8C,SAAC7c,GAC1D,IAAMgW,EAAUhW,EAAMkQ,SAASjP,KAAI,SAAC+N,GAAD,MAAc,CAC/C1O,IAAK0O,EAAQpG,KACbqN,OAAQjH,EACR0I,OAAQ1I,IAAYhP,EAAM6V,aAG5B,OACE,cAAC,GAAD,CACEG,QAASA,EACTH,SAAU7V,EAAM6V,SAChBC,SAAU9V,EAAMia,SAChB3D,aAAcA,GACdI,eAAgBA,MC/BtB,SAASoG,GAAYlU,EAAcyB,GACjC,OAAIA,EAAM5C,SAAiB,KAEzB,8BACE,8BACGmB,EADH,IACUxG,EAAyB,IAAlBiI,EAAMyQ,UAAiB,GADxC,SAOC,IAAMiC,GAA8B,SAAC,GAAgB,IAAdje,EAAa,EAAbA,OAC5C,OACE,sBAAKe,UAAU,mBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,4BAAIf,EAAOsM,aAEb,sBAAKvL,UAAU,YAAf,UACGid,GAAY,QAAShe,EAAOkL,QAAQG,OACpC2S,GAAY,eAAgBhe,EAAOkL,QAAQM,cAC3CwS,GAAY,qBAAsBhe,EAAOkL,QAAQO,aACjDuS,GAAY,YAAahe,EAAOkL,QAAQQ,kBCfpCwS,GAA4C,SAAChd,GACxD,IAAMS,EAAWD,IA8BXwV,EAAUvV,EAASkN,QACtBiH,QAAO,SAAC1C,GAEP,QAAIlS,EAAMid,WAAY/K,EAAElI,QAAQM,aAAauF,eAGtCqC,EAAEgL,WAAWld,EAAMyK,WAE3BxJ,KAAI,SAACiR,GAAD,MAAQ,CACX5R,IAAK4R,EAAEtJ,KACPqN,OAAQ/D,EACRwF,OAAQxF,IAAMlS,EAAM6V,aASxB,OANAG,EAAQmH,QAAQ,CACd7c,IAAK,YACL2V,OAAQ,KACRyB,QAAS1X,EAAM6V,WAIf,cAAC,GAAD,CACEG,QAASA,EACTH,SAAU7V,EAAM6V,SAChBC,SAAU9V,EAAMia,SAChB3D,aA5CiB,SAACxX,GACpB,OAAIA,EAEA,cAAC,GAAD,CACE2C,IAAK3C,EACL0c,QAAS,kBAAM,cAAC,GAAD,CAAY1c,OAAQA,KACnC2c,KAAM3c,EAAOsM,WAKf,cAAC,GAAD,CACE3J,IAAKhB,EAAS0N,eACdsN,KAAMhb,EAAS0N,eAAe/C,YAgClCsL,eAvDmB,SAAC5X,GACtB,OAAIA,EAEA,cAAC,GAAD,CAAM2C,IAAK3C,EAAQ0c,QAAS,kBAAM,cAAC,GAAD,CAAY1c,OAAQA,OAGjD,cAAC,GAAD,CAAM2C,IAAKhB,EAAS0N,qB,oBCI3BiP,G,4MACJC,gBAAkB,WAChB,EAAKrd,MAAMsd,YAAY,EAAKtd,MAAM2I,KAAK8B,S,EAGzC8S,oBAAsB,SAACvO,GACrB,EAAKwO,YAAY,CACfxO,QAASA,EACTrB,QAAS,EAAK3N,MAAM2I,KAAKgF,QACtBiH,QAAO,SAAC9V,GAAD,OAAuB,OAAXA,KACnB0I,MAAM,EAAGwH,EAAQ/B,gB,EAIxBwQ,wBAA0B,SAACpb,GACzB,EAAKmb,YAAY,CAAEvL,YAAa5P,K,EAGlCqb,uBAAyB,SAACrb,GACxB,EAAKmb,YAAY,CAAEpL,WAAY/P,K,EAGjCsb,oBAAsB,WACpB,EAAKH,YAAY,CACf7P,QAAS,IAAIiQ,MAAM,EAAK5d,MAAM2I,KAAKqG,QAAQ/B,aAAa4Q,KACtD,EAAK7d,MAAM2I,KAAKgF,QAAQ,O,EAK9BmQ,gBAAkB,SAAC3V,EAAerJ,GAChC,IAAM6O,EAAU,EAAK3N,MAAM2I,KAAKgF,QAAQnG,QACxCmG,EAAQxF,GAASrJ,EACjB,EAAK0e,YAAY,CAAE7P,QAASA,K,EAG9BoQ,sBAAwB,SAACjf,GACvB,EAAK0e,YAAY,CAAErL,aAAcrT,K,EAGnCkf,sBAAsD,SAAC/G,GAAiB,IAC9DkF,EAAiB,EAAKnc,MAAtBmc,aACR,GAAKlF,EAAMoF,UAAaF,EAAxB,CAGAlF,EAAMqF,iBACNrF,EAAMtB,kBAEN,IAMIyB,EANE6G,EAAS,IAAI3J,GAiBnB,GAhBA2J,EAAO1J,OAAP,2BACK,EAAKvU,MAAM2I,MADhB,IAEEsJ,YAAatM,EAASS,OAQxBgR,GAJAA,EAAU6G,EAAO1R,YAAY2R,MAAK,SAACnX,GACjC,OAAOA,EAAEkE,KAAKrC,OAASuT,EAAalR,KAAKrC,UAKzCqV,EAAOzR,SAAS0R,MAAK,SAACnX,GACpB,OAAOA,EAAEkE,KAAKrC,OAASuT,EAAalR,KAAKrC,QAG7C,CAQA,IAAMuV,EAAShC,EAAavZ,OAAOkD,IAAIsR,EAAQxU,QAE/C,EAAK4a,YAAY,CACfvL,YAAakM,SAVbrO,QAAQvQ,MAAR,yBACoB4c,EAAalR,KAAKrC,KADtC,cAEEqV,K,0DAYMvZ,GACVpF,KAAKU,MAAMoe,YAAX,2BACK9e,KAAKU,MAAM2I,MACXjE,M,kCAKL,IAAM2Z,EAAI,IAAI/J,GAEd,OADA+J,EAAE9J,OAAOjV,KAAKU,MAAM2I,MACb0V,I,sCAOP,IAJgC,IAAD,OACzBC,EAAWhf,KAAKU,MAAM2I,KAAKqG,QAAQ/B,YAEnCsR,EAAQ,GAHiB,WAItBzb,GACP,IAAMhE,EAAS,EAAKkB,MAAM2I,KAAKgF,QAAQ7K,IAAM,KAC7Cyb,EAAM5W,KACJ,cAAC,GAAD,CAEE8C,OAAQ,EAAKzK,MAAM2I,KAAK8B,OACxBoL,SAAU/W,EACVmb,SAAU,SAAC/H,GAAD,OAAO,EAAK4L,gBAAgBhb,EAAGoP,KAHpCpP,KAJFA,EAAI,EAAGA,EAAIwb,EAAUxb,IAAM,EAA3BA,GA0BT,OAdIwb,EAAW,GACbC,EAAM5K,OACJ,EACA,EACA,wBACE8C,QAASnX,KAAKqe,oBAEd9d,UAAU,MAHZ,mBAEM,eAQH0e,I,sCAIP,OACE,qBAAK1e,UAAU,cAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,8BAEF,cAAC,GAAD,CACEiC,MAAOxC,KAAKU,MAAM2I,KAAKyJ,WACvB6H,SAAU3a,KAAKoe,uBACfnX,IAAK,IAEP,qBAAK1G,UAAU,sCAAf,SACE,cAAC,GAAD,CACEod,UAAU,EACVxS,OAAQnL,KAAKU,MAAM2I,KAAK8B,OACxBoL,SAAUvW,KAAKU,MAAM2I,KAAKwJ,aAC1B8H,SAAU3a,KAAKye,iC,uCASzB,OACE,qBAAKle,UAAU,mBAAf,SACE,sBAAKA,UAAU,cAAc4W,QAASnX,KAAK0e,sBAA3C,UACE,cAAC,GAAD,CACElc,MAAOxC,KAAKU,MAAM2I,KAAKsJ,YACvBgI,SAAU3a,KAAKme,wBACfjD,cAAc,IAEhB,qBAAK3a,UAAU,sCAAf,SACE,cAAC,GAAD,CACEqQ,SAAU5Q,KAAKU,MAAM2I,KAAK8B,OAAOiC,OACjCmJ,SAAUvW,KAAKU,MAAM2I,KAAKqG,QAC1BiL,SAAU3a,KAAKie,+B,+BAQA,IAAD,OAClB9S,EAASnL,KAAKU,MAAM2I,KAAK8B,OACzBwT,EAAS3e,KAAKkf,YAEdjS,EAAc0R,EAAO1R,YAAYtL,KAAI,SAACgL,GAAD,OACzC,qBAAKpM,UAAU,OAAf,SACE,cAAC,GAAD,CAAY4B,IAAKwK,KADQA,EAAWrD,SAIlC4D,EAAWyR,EAAOzR,SAASvL,KAAI,SAAC4L,GAAD,OACnC,qBAAKhN,UAAU,OAAf,SACE,cAAC,GAAD,CAAY4B,IAAKoL,KADQA,EAAQjE,SAIrC,OACE,cAAC,KAAD,CAAW6V,YAAahU,EAAO7B,KAAMT,MAAO7I,KAAKU,MAAMmI,MAAvD,SACG,SAACuW,GAAD,OACC,8CACE7e,UAAS,UAAKC,KAAO6e,UAAZ,yBACTnI,IAAKkI,EAASE,UACVF,EAASG,gBAHf,cAKE,8CAAKhf,UAAU,wBAA2B6e,EAASI,iBAAnD,cACE,qBAAKjf,UAAU,aAAf,SACE,cAAC,GAAD,CACE4B,IAAKgJ,EACLgR,KAAMhR,EAAOW,SACboQ,QAAS,kBAAM,cAAC,GAAD,CAAY/Q,OAAQA,SAGvC,qBAAK5K,UAAU,cAAf,SACE,wBACEA,UAAU,wBACV4W,QAAS,EAAK4G,gBAFhB,0BAQJ,sBAAKxd,UAAU,qBAAf,UACE,sBAAKA,UAAU,aAAf,UACG,EAAKkf,iBACN,qBAAKlf,UAAU,kCAAkCmf,KAAK,QAAtD,SACG,EAAKC,kBAEP,EAAKC,mBAGR,sBAAKrf,UAAU,cAAf,UACE,sBACEA,UAAU,OACViX,MAAO,CACLqI,QAAS,eACTC,MAAO,OACPC,SAAU,SALd,UAQE,6CACC9S,KAGH,sBACE1M,UAAU,OACViX,MAAO,CACLqI,QAAS,eACTE,SAAU,SAJd,UAOE,0CACC7S,sB,GAjPQtM,IAAM0b,eA4PpB+C,GAKR,SAAC,GAA+C,IAA7CxW,EAA4C,EAA5CA,MAAOQ,EAAqC,EAArCA,KAAM2U,EAA+B,EAA/BA,YAAac,EAAkB,EAAlBA,YAC1BjC,EAAezb,YAAeE,GAEpC,OACE,cAAC,GAAD,CACEuH,MAAOA,EACPQ,KAAMA,EACNwT,aAAcA,EACdiC,YAAaA,EACbd,YAAaA,K,sCCxRbgC,GAA2C,SAAC7d,EAAK8d,GACrD,GAAoB,kBAATA,EACT,MAAM,IAAI5e,MAAJ,oCAAuC4e,IAE/C,GAAoB,IAAhBA,EAAKxc,OACP,MAAM,IAAIpC,MAAJ,wCAA2C4e,IAEnD,OAAQA,EAAK,IACX,IAAK,WACH,OAAO9d,EAAI2J,SACb,IAAK,OACH,OAAO3J,EAAImH,KACb,QACE,MAAM,IAAIjI,MAAJ,4BAA+B4e,MAIrCC,GAAc,4CAYPC,GAAb,4MACEC,SAAWxf,cADb,EAGEjB,MAAe,CACb0gB,MAAO,GACPC,QAAS,IALb,EAmBEC,sBAAwB,SAAC5T,GACvB,IACsC,EADhC6T,EAAI,mBAAe7T,EAAWrD,MAC/B,EAAK3J,MAAM0gB,MAAMnD,SAASsD,KAC7B,EAAKC,SAAL,UAAiB,EAAK9gB,MAAM0gB,MAA5B,YAAqCG,IAAQ,WAC3C,EAAKE,sBAEP,YAAKN,SAAStI,eAAd,SAAuB6I,mBAzB7B,EA6BEC,mBAAqB,SAACrT,GACpB,IACsC,EADhCiT,EAAI,mBAAejT,EAAQjE,MAC5B,EAAK3J,MAAM0gB,MAAMnD,SAASsD,KAC7B,EAAKC,SAAL,UAAiB,EAAK9gB,MAAM0gB,MAA5B,YAAqCG,IAAQ,WAC3C,EAAKE,sBAEP,YAAKN,SAAStI,eAAd,SAAuB6I,mBAnC7B,EAuCEE,iBAAmB,SAAClJ,GAClB,IAAMC,EAASD,EAAMC,OACrB,EAAK6I,SAAS7I,EAAOpV,QAzCzB,EA4CEse,kBAAoB,SAAC3V,GACnB,EAAKzK,MAAMqgB,aAAa5V,GACxB,EAAKsV,SAAS,KA9ClB,EAiDEA,SAAW,SAACJ,EAAeW,GACpBX,EAAMzX,QAUT,EAAKzI,SAAS,CAAEkgB,MAAOA,GAASW,GAChC,EAAKC,wBAVL,EAAKA,oBAAoBC,SACzB,EAAK/gB,SACH,CACEkgB,MAAO,GACPC,QAAS,IAEXU,KAzDR,EA4HEC,oBAAsBrd,EAAS,EAAK8c,iBAAiBS,KAAtB,iBAAkC,KA5HnE,kEASIlE,GAA2BmE,WAAWphB,KAAKugB,uBAC3CtD,GAAwBmE,WAAWphB,KAAK4gB,sBAV5C,6CAcI5gB,KAAKihB,oBAAoBC,SACzBjE,GAA2BoE,cAAcrhB,KAAKugB,uBAC9CtD,GAAwBoE,cAAcrhB,KAAK4gB,sBAhB/C,yCAkEI,IAAIP,EAAQrgB,KAAKL,MAAM0gB,MAAMzX,OAAO0Y,cACpC,GAAKjB,EAAL,CAKA,IAAMkB,EAAa,CACjBC,SAAU,GACVC,SAAU,IAKZpB,EAAQA,EACLqB,QAAQxB,IAAa,SAAClG,EAAGhZ,EAAKwB,GAE7B,OADA+e,EAAWvgB,GAAaqH,KAAK7F,GACtB,MAERoG,OAEH,IAAI2F,EAAUvO,KAAKU,MAAM6N,QAiBzB,IAhBIgT,EAAWC,SAAS/d,QAAU8d,EAAWE,SAAShe,UACpD8K,EAAUA,EAAQ+G,QAAO,SAACnK,GAAY,IAAD,gBAChBoW,EAAWC,UADK,yBACxBlY,EADwB,QAEjC,IAAK6B,EAAO8B,YAAYqD,MAAK,SAAC9M,GAAD,OAAOA,EAAE8F,OAASA,KAC7C,MAAM,CAAN,GAAO,IAFX,2BAAwC,CAAC,IAAD,yCADL,kDAMhBiY,EAAWE,UANK,yBAMxBnY,EANwB,QAOjC,IAAK6B,EAAO+B,SAASoD,MAAK,SAAC9M,GAAD,OAAOA,EAAE8F,OAASA,KAC1C,MAAM,CAAN,GAAO,IAFX,2BAAwC,CAAC,IAAD,yCANL,8BAWnC,OAAO,MAIP+W,EAgBF9R,EAfa,IAAIoT,KAAKpT,EAAS,CAC7BqT,YAAY,EACZ5B,MAAOA,GACP6B,KAAM,CACJ,CACEvY,KAAM,WACNwY,OAAQ,IAEV,CACExY,KAAM,OACNwY,OAAQ,OAIOC,OAAO1B,GACV1e,KAAI,SAAC+D,GAAD,OAAOA,EAAEiG,QAEjC3L,KAAKG,SAAS,CAAEmgB,QAAS/R,SArDvBvO,KAAKG,SAAS,CAAEmgB,QAAS,OApE/B,sCA8HoC,IAAD,OAC/B,IAAKtgB,KAAKL,MAAM2gB,QAAQ7c,OACtB,MAAO,GAET,IAAI6c,EAAUtgB,KAAKL,MAAM2gB,QAIzB,OAHIA,EAAQ7c,OAAS,MACnB6c,EAAUA,EAAQpY,MAAM,EAAG,MAG3B,wBAAO3H,UAAU,oBAAjB,UACE,gCACE,+BACE,wCACA,sCACA,6CACA,+CAGJ,gCACG+f,EAAQ3e,KAAI,SAAC+D,GAAD,OACX,cAAC,GAAD,CACEyF,OAAQzF,EAERyR,QAAS,EAAK2J,mBADTpb,EAAE4D,gBApJrB,+BA8JI,OACE,sBAAK/I,UAAWC,KAAO2f,aAAvB,UACE,8BACE,uBACE3V,KAAK,SACL0M,IAAKlX,KAAKogB,SACV7f,UAAU,gCACVyhB,YAAY,6BACZxf,MAAOxC,KAAKL,MAAM0gB,MAClB1F,SAAU3a,KAAK6gB,qBAGlB7gB,KAAKiiB,uBA1Kd,GAAkCrhB,iBAqL5BshB,G,4MACJC,eAAiB,WACf,EAAKzhB,MAAMyW,QAAQ,EAAKzW,MAAMyK,S,uDAI9B,IAAMA,EAASnL,KAAKU,MAAMyK,OACpB8B,EAAc9B,EAAO8B,YAAYtL,KAAI,SAACygB,GAAD,OACzC,cAAC,GAAD,CAEEjgB,IAAKigB,EAAIzW,KACTuQ,QAAS,kBAAM,cAAC,GAAD,CAAgB/Z,IAAKigB,MAF/BA,EAAI9Y,SAKP4D,EAAW/B,EAAO+B,SAASvL,KAAI,SAAC0gB,GAAD,OACnC,cAAC,GAAD,CAEElgB,IAAKkgB,EAAK1W,KACVuQ,QAAS,kBAAM,cAAC,GAAD,CAAgB/Z,IAAKkgB,MAF/BA,EAAK/Y,SAKd,OACE,qBAAI6N,QAASnX,KAAKmiB,eAAlB,UACE,oBAAI5hB,UAAWC,KAAO8hB,WAAtB,SACE,cAAC,GAAD,CACEngB,IAAKgJ,EACLgR,KAAMhR,EAAOW,SACboQ,QAAS,kBAAM,cAAC,GAAD,CAAY/Q,OAAQA,SAGvC,6BAAKA,EAAOgC,aAAatB,cACzB,6BAAKoB,IACL,6BAAKC,W,GAhCatM,iB,oBCpNb2hB,GAA6B,SAAC,GAAc,IAAZrQ,EAAW,EAAXA,KACrC/Q,EAAWD,IAEXshB,EAAiBC,mBAAQ,WAC7B,IAAM1D,EAAI,IAAI/J,GAAO9C,GAGrB,OAFA/Q,EAASuhB,WAAW3D,EAAE9R,aAAa,SAAC3G,GAAD,OAAOA,EAAEqF,QAC5CxK,EAASuhB,WAAW3D,EAAE7R,UAAU,SAAC5G,GAAD,OAAOA,EAAEqF,QAClCoT,IACN,CAAC5d,EAAU+Q,IAEd,OAAKsQ,EAAOvV,YAAYxJ,QAAW+e,EAAOtV,SAASzJ,OAKjD,sBAAKlD,UAAS,eAAUC,KAAO+hB,WAA/B,UACE,qBAAKhiB,UAAU,cAAf,6BACA,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,yBAEGiiB,EAAOvV,YAAYtL,KAAI,SAACygB,GAAD,OACtB,cAAC,GAAD,CAA2BjgB,IAAKigB,EAAKzF,UAAQ,GAA5ByF,EAAI9Y,YAGzB,sBAAK/I,UAAU,MAAf,sBAEGiiB,EAAOtV,SAASvL,KAAI,SAAC0gB,GAAD,OACnB,cAAC,GAAD,CAA4BlgB,IAAKkgB,EAAM1F,UAAQ,GAA9B0F,EAAK/Y,oBAjBzB,yB,oBCULqZ,G,4MAgBJC,cAAgB,SAAClc,GACVA,EAAOmc,aAGRnc,EAAOoc,OAAOja,QAAUnC,EAAOmc,YAAYha,OAC7C,EAAKnI,MAAMqiB,UAAUrc,EAAOoc,OAAOja,MAAOnC,EAAOmc,YAAYha,Q,EAIjEma,UAAY,SAAC3Z,EAAqBR,GAChC,OACE,cAAC,GAAD,CAEEA,MAAOA,EACPQ,KAAMA,EACNyV,YAAa,EAAKpe,MAAMoe,YACxBd,YAAa,EAAKtd,MAAMsd,aAJnB3U,EAAK8B,OAAO7B,O,EASvB2Z,kBAAoB,WAClB,IAAM3Z,EAAO4Z,OAAO,6BAA8B,EAAKxiB,MAAMsJ,MAAMV,MAC/DA,GACF,EAAK5I,MAAMyiB,cAAc7Z,I,EAI7B8Z,iBAAmB,WACjB,IAAM9Z,EAAO4Z,OACX,6BADiB,UAEd,EAAKxiB,MAAMsJ,MAAMV,KAFH,aAIfA,GACF,EAAK5I,MAAM2iB,aAAa/Z,I,EAI5Bga,kBAAoB,WACd,EAAK5iB,MAAMsJ,MAAMkI,KAAKzO,SAErB8f,OAAOC,QAAP,0CACoC,EAAK9iB,MAAMsJ,MAAMV,QAM1D,EAAK5I,MAAM+iB,iB,kEA9DXxG,GAAoBmE,WAAWphB,KAAKU,MAAMgjB,Y,yCAGzBnK,EAAiBC,GAC9BxZ,KAAKU,MAAMgjB,WAAanK,EAASmK,WACnCzG,GAAoBoE,cAAc9H,EAASmK,UAC3CzG,GAAoBmE,WAAWphB,KAAKU,MAAMgjB,a,6CAK5CzG,GAAoBoE,cAAcrhB,KAAKU,MAAMgjB,Y,+BAsDpB,IAAD,OAElBC,EADK3jB,KAAKU,MAAMS,SACMoN,QAAQ+G,QAAO,SAACnK,GAC1C,OAAQ,EAAKzK,MAAMsJ,MAAMkI,KAAK5B,MAAK,SAACmC,GAAD,OAASA,EAAItH,SAAWA,QAG7D,OACE,sBAAK5K,UAAWC,KAAOojB,YAAvB,UACE,sBAAKrjB,UAAU,WAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BP,KAAKU,MAAMsJ,MAAMV,OAC7C,qBAAK/I,UAAU,cAAf,SACE,sBAAKA,UAAU,eAAf,UACE,wBAAQA,UAAU,eAAe4W,QAASnX,KAAKijB,kBAA/C,oBAGA,wBAAQ1iB,UAAU,eAAe4W,QAASnX,KAAKojB,iBAA/C,mBAGA,wBACE7iB,UAAU,iBACV4W,QAASnX,KAAKsjB,kBAFhB,4BASN,cAAC,GAAD,CACE/U,QAASoV,EACT5C,aAAc/gB,KAAKU,MAAMgjB,WAE3B,uBAEA,cAAC,KAAD,CAAiBG,UAAW7jB,KAAK4iB,cAAjC,SACE,cAAC,KAAD,CAAWkB,YAAa,MAAxB,SACG,SAAC1E,GAAD,OACC,8CAAKlI,IAAKkI,EAASE,UAAcF,EAAS2E,gBAA1C,cACG,EAAKrjB,MAAMsJ,MAAMkI,KAAKvQ,IAAI,EAAKqhB,WAC/B5D,EAAS4C,qBAMlB,uBACA,cAAC,GAAD,CAAW9P,KAAMlS,KAAKU,MAAMsJ,MAAMkI,c,GAhHbtR,IAAM0b,eA0HtBsH,GAA0C,SAAC,GAGjD,IAFLhiB,EAEI,EAFJA,UACA6hB,EACI,EADJA,cACI,EACsB7G,YAAehb,GADrC,mBACGoI,EADH,KACUga,EADV,KAEElS,EAAW1Q,YAAeS,GAC1BV,EAAWD,IACX+iB,EAAWtP,KAEXuP,EAAoBpP,uBACxB,SAACqP,GACCH,GAAS,SAACI,GAAD,mBAAC,eACLA,GADI,IAEP9a,KAAM6a,SAGV,CAACH,IAGGK,EAAmBvP,uBACvB,SAACqP,GACCF,EAAS,2BACJja,GADG,IAENV,KAAM6a,OAGV,CAACF,EAAUja,IAGPsa,EAAoBxP,uBAAY,WACpC2O,EAAc7hB,KACb,CAAC6hB,EAAe7hB,IAEb2iB,EAAgBzP,uBACpB,SAAC0P,EAAkBC,GACjB,IAAMvS,EAAOoM,MAAMoG,KAAK1a,EAAMkI,MADQ,EAEpBA,EAAKmC,OAAOmQ,EAAU,GAAjCG,EAF+B,oBAGtC5iB,EAAO4iB,EAAD,gCAAmCH,IACzCtS,EAAKmC,OAAOoQ,EAAU,EAAGE,GAEzBX,GAAS,SAACI,GAAD,mBAAC,eACLA,GADI,IAEPlS,cAGJ,CAAClI,EAAOga,IAGJY,EAAe9P,uBACnB,SAAC3J,GACC6Y,GAAS,SAACha,GAER,OAAIA,EAAMkI,KAAK0M,MAAK,SAACnM,GAAD,OAASA,EAAItH,OAAO7B,OAAS6B,EAAO7B,QAC/CU,EAGF,2BACFA,GADL,IAEEkI,KAAK,GAAD,oBACClI,EAAMkI,MADP,CAEF,CACE/G,OAAQA,EACRuE,QAASmV,GAAqB1Z,EAAQ2G,EAAU3Q,GAChDwR,YAAatM,EAASS,IACtBuH,QAAS,GACTwE,aAAc,KACdC,WAAY,YAMtB,CAAChB,EAAU3Q,EAAU6iB,IAGjBc,EAAkBhQ,uBACtB,SAACzL,GACC2a,GAAS,SAACha,GAAD,mBAAC,eACLA,GADI,IAEPkI,KAAMlI,EAAMkI,KAAKvQ,KAAI,SAAC+D,GAAD,OAAQA,EAAEyF,SAAW9B,EAAK8B,OAAS9B,EAAO3D,YAGnE,CAACse,IAGGjG,EAAkBjJ,uBACtB,SAAC3J,GACC6Y,GAAS,SAACha,GAAD,mBAAC,eACLA,GADI,IAEPkI,KAAMlI,EAAMkI,KAAKoD,QAAO,SAAC5P,GAAD,OAAOA,EAAEyF,SAAWA,YAGhD,CAAC6Y,IAGH,OACE,cAAC,GAAD,CACEha,MAAOA,EACP7I,SAAUA,EACVgiB,cAAee,EACfb,aAAcgB,EACdZ,cAAea,EACfZ,SAAUkB,EACV7B,UAAWwB,EACXzF,YAAagG,EACb9G,YAAaD,K,SCzPNgH,GAAyB,WACpC,IAAM5jB,EAAWD,IADyB,EAEV0b,YAAe/a,GAFL,mBAEnCiQ,EAFmC,KAEzBkT,EAFyB,KAIpCC,EAA0BnQ,uBAC9B,SAAC9H,EAAkB0C,GACjBsV,GAAY,SAAClT,GAAD,mBAAC,eACRA,GADO,IAEVhQ,mBAAmB,2BACdgQ,EAAShQ,oBADI,mBAEfkL,EAAW0C,WAIlB,CAACsV,IAGGE,EAA0BzC,mBAAQ,WACtC,IAAM0C,EAAQ7iB,OAAOC,QAAQpB,EAASuN,aACnC4G,QAAO,SAAC8P,GAAD,OAAWA,EAAM,GAAG3hB,OAAS,KACpC9B,KAAI,SAACyjB,GAAD,OAAWA,EAAM,MAGxB,OADAD,EAAM7T,MAAK,SAACzL,EAAGC,GAAJ,OAAUD,EAAEwf,cAAcvf,MAC9Bqf,IACN,CAAChkB,IAEJ,OACE,gCACE,oDACC+jB,EAAcvjB,KAAI,SAAC2H,GAAD,OACjB,cAAC,GAAD,CACEnI,SAAUA,EACV2Q,SAAUA,EAEV9E,SAAU1D,EACVgc,oBAAqBL,GAFhB3b,UAgBTic,G,4MACJjL,aAAe,SAAC5K,GACd,EAAKhP,MAAM4kB,oBAAoB,EAAK5kB,MAAMsM,SAAU0C,I,uDAIpD,IAAMkB,EAAW5Q,KAAKU,MAAMS,SAASuN,YAAY1O,KAAKU,MAAMsM,WAAa,GACnEuJ,EAAW3E,GACf5R,KAAKU,MAAMsM,SACXhN,KAAKU,MAAMoR,SACX9R,KAAKU,MAAMS,UAEb,OACE,qBAAKZ,UAAU,mBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,SAAoCP,KAAKU,MAAMsM,aAEjD,qBAAKzM,UAAU,sCAAf,SACE,cAAC,GAAD,CACEqQ,SAAUA,EACV2F,SAAUA,EACVoE,SAAU3a,KAAKsa,0B,GAtBH1Z,IAAM0b,e,oBClC1BkJ,G,kDACJ,WAAY9kB,GAAe,IAAD,uBACxB,cAAMA,IAoBR+kB,cAAgB,SAAC9N,GACG,UAAdA,EAAM3W,KACRoR,SAASwG,KAAK8M,UAAU9d,IAAI,eAvBN,EA0B1B+d,YAAc,SAAChO,GACK,UAAdA,EAAM3W,KACRoR,SAASwG,KAAK8M,UAAUE,OAAO,eA5BT,EAgC1BC,iBAAmB,SAACjkB,GAClB,EAAKzB,SAAS,CACZ2lB,WAAYlkB,KAlCU,EAsC1BmkB,oBAAsB,SAACpO,GACrBA,EAAMqF,iBACN,IAAMgJ,EAAW,kBAAc,EAAKtlB,MAAMiO,OAAOlL,OAAS,GACpD6F,EAAO4Z,OAAO,uCAAwC8C,GACvD1c,GAASA,EAAKV,QAGnB,EAAKlI,MAAMulB,WAAW,CAAE3c,OAAM4I,KAAM,MA7CZ,EAgD1BgU,sBAAwB,SAACtkB,GACvB,GAAI,EAAKjC,MAAMmmB,aAAelkB,EAAW,CACvC,IADuC,EACnCukB,GAAU,EADyB,cAEtB,EAAKzlB,MAAMiO,QAFW,IAEvC,2BAAoC,CAAC,IAA1ByX,EAAyB,QAClC,GAAIA,EAAG,KAAOxkB,EAAW,CACvB,EAAKzB,SAAS,CACZ2lB,WAAYM,EAAG,KAEjBD,GAAU,EACV,QARmC,8BAWlCA,GACH,EAAKhmB,SAAS,CACZ2lB,WAAY,aAIlB,EAAKplB,MAAM2lB,kBAAkBzkB,IAlEL,EAqE1B0kB,oBAAsB,WACpB,EAAKnmB,SAAS,CACZ2lB,WAAY,cApEd,IAHwB,EAGpBA,EAAkC,WAHd,cAIR,EAAKplB,MAAMiO,QAJH,IAIxB,2BAAmC,CACjCmX,EADiC,QAClB,GACf,OANsB,qCASxB,EAAKnmB,MAAQ,CAAEmmB,cATS,E,gEAaxB1T,SAASyG,iBAAiB,UAAW7Y,KAAKylB,eAC1CrT,SAASyG,iBAAiB,QAAS7Y,KAAK2lB,e,6CAGxCvT,SAAS2G,oBAAoB,UAAW/Y,KAAKylB,eAC7CrT,SAAS2G,oBAAoB,QAAS/Y,KAAK2lB,e,qCAyDZ,IAAD,OACxBY,EAA2C,aAA1BvmB,KAAKL,MAAMmmB,WAE5BU,EAAexmB,KAAKU,MAAMiO,OAAOhN,KAAI,WAAqB6B,GAAO,IAAD,mBAAzBwG,EAAyB,KAAlBpI,EAAkB,KAC9DwW,EAAS,EAAKzY,MAAMmmB,aAAelkB,EACzC,OACE,wBAEE4I,KAAK,SACLjK,UAAS,iDACP6X,EAAS,SAAW,IAEtBjB,QAAS,kBAAM,EAAK0O,iBAAiBjkB,IANvC,SAQGoI,EAAMV,MAPF9F,MAYX,OACE,qCACE,qBAAIjD,UAAU,kBAAd,UACE,qBAAIA,UAAU,kBAAd,UACE,sBAAMmf,KAAK,MAAM+G,aAAW,eAA5B,0BAEQ,IAHV,eAOCD,EAED,yBACEhc,KAAK,SACLjK,UAAU,yCACV4W,QAASnX,KAAK+lB,oBAHhB,UAKE,sBAAMrG,KAAK,MAAM+G,aAAW,eAA5B,oBAEQ,IAPV,sBAYF,oBAAIlmB,UAAU,kBAAd,SACE,yBACEiK,KAAK,SACLjK,UAAS,iDACPgmB,EAAiB,SAAW,IAE9BpP,QAASnX,KAAKsmB,oBALhB,UAOE,sBAAM5G,KAAK,MAAM+G,aAAW,YAA5B,0BAEQ,IATV,qB,mCAkBN,MAA8B,aAA1BzmB,KAAKL,MAAMmmB,WACN,cAAC,GAAD,IACE9lB,KAAKL,MAAMmmB,WAElB,cAAC,GAAD,CACElkB,UAAW5B,KAAKL,MAAMmmB,WACtBrC,cAAezjB,KAAKkmB,wB1BlKvB,SAAqBze,GAC1B,MAAM,IAAIpG,MAAM,sBAAwBoG,G0BqK7Bif,CAAY1mB,KAAKL,MAAMmmB,c,+BAOhC,OAFA/jB,EAAO/B,KAAKU,MAAMS,SAAU,uCAG1B,mCACE,qBAAKZ,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAW6a,KAAW,uBAAwB5a,KAAOmmB,SAA1D,SACG3mB,KAAK4mB,iBAER,qBAAKrmB,UAAU,WAAf,SAA2BP,KAAK6mB,0B,GAlKvBjmB,IAAM0b,eA0KdwK,GAER,SAAC,GAAkB,IAAhB3lB,EAAe,EAAfA,SACAwN,EAASvN,YAAeI,GAExBoT,EAAgBC,YAAkBtT,GAElCwlB,EAAiBpS,KAEjBuR,EAAwBpR,uBAC5B,SAAClT,GACCgT,GAAc,SAACG,GAAD,OAAWA,EAAMO,QAAO,SAACzP,GAAD,OAAOA,IAAMjE,UAErD,CAACgT,IAGH,OACE,cAAC,GAAD,CACEzT,SAAUA,EACVwN,OAAQA,EACRsX,WAAYc,EACZV,kBAAmBH,KCnMnBc,G,4MACJrnB,MAAe,CACbsnB,QAAQ,G,kEAGiB,IAAD,OACxBjnB,KAAKknB,OAAOC,MACV,WACE,EAAKhnB,SAAS,CAAE8mB,QAAQ,OAE1B,SAAChM,GACC,EAAK9a,UAAS,WACZ,MAAM8a,U,yCAOZ,IAAImM,EAAiC,KACrC,IACEA,EvBmMC,SAAqBjmB,GAC1B,IAAMmf,EAAUvN,GAAWsU,KAAKjV,SAASC,SAASrD,MAClD,IAAKsR,EACH,OAAO,KAET,IAAM9N,EAAUxM,OAAOsa,EAAQ,IAAM,GAEjC9X,EAAM8e,mBAAmBhH,EAAQ,IAOrC,OANI9N,EAAU,IACZhK,EAAM+e,mBAAQC,KAAKhf,GAAM,CAAEif,GAAI,YAK1BpU,GAAYlS,EAAU,CAC3BqR,QAASA,EACTnJ,KAJSqe,KAAKC,MAAMnf,KuB/MPof,CAA0B5nB,KAAKU,MAAMS,UAChD,MAAO8Z,IrB9BN,SAAerC,GACpB,IAAIiP,EAAWjP,EACXA,aAAgBvX,OAASuX,EAAKvY,QAChCwnB,EAAWjP,EAAKvY,OAGlBoU,GAAgBP,SAAS,CACvB+H,MAAO,SACP5X,KAAM,IAAII,KACVmU,KAAMiP,IqBsBJ5nB,CACE,qCACE,uDACA,uBACA,8BAAM6nB,OAAO7M,SAGjBzK,QAAQvQ,MAAM,yBAA0Bgb,GAE1C,GAAImM,EAAU,OAAOA,EAErB,IACE,IAAMW,EvBmGL,SACL5mB,GAEA,IAAI6mB,EAAWC,aAAarc,QAAQuG,IACpC,IAAK6V,EAAU,CAEb,KADAA,EAAWC,aAAarc,QAAQ,aAM9B,OAAO,KAHPqc,aAAaC,QAAQ/V,GAAU6V,GAC/BC,aAAaE,WAAW,YAK5B,IAAMC,EAAoCV,KAAKC,MAAMK,GAKrD,OAJyB,IAArBI,EAAS5V,UACV4V,EAAiB5V,QAAU,GAGvBa,GAAYlS,EAAUinB,GuBtHJR,CACnB5nB,KAAKU,MAAMS,UAEb,GAAI4mB,EAAc,OAAOA,EACzB,MAAO9M,GACPzK,QAAQvQ,MAAM,qCAAsCgb,M,gJAKhDoN,EAAgBroB,KAAKsoB,mB,iDAG3BtoB,KAAKU,MAAM6nB,mBAAmBF,G,qIAI9B,IAAKroB,KAAKL,MAAMsnB,OACd,OAAO,4CAET,IAAMuB,EAAK,UAAMC,UAAN,gCAAoDzoB,KAAKU,MAAMS,SAAS2N,WAAxE,QACL0I,EAAK,oEAEqBgR,EAFrB,2BAKX,OACE,qCACE,cAAC,GAAD,CAAarnB,SAAUnB,KAAKU,MAAMS,WAClC,cAAC,GAAD,CAAUunB,KAAMF,IAChB,gCAAQhR,IACR,cAAC,GAAD,CAAKrW,SAAUnB,KAAKU,MAAMS,kB,GAlEPP,IAAM0b,eAwE3BqM,GAAqD,SAAC,GAAkB,IAAhBxnB,EAAe,EAAfA,SACtDwN,EAASvN,YAAeI,GACxBsQ,EAAW1Q,YAAeS,GAC1B+mB,EAAgBC,kBAAO,GAgB7B,OAdAtjB,qBAAU,WAER,GAAIqjB,EAAc9Q,QAChB8Q,EAAc9Q,SAAU,MAD1B,CAIA,IAAMgR,EAA+B,CACnCna,OAAQA,EAAOhN,KAAI,SAAConB,GAAD,OAAOA,EAAE,MAC5BjX,SAAUA,IvBuET,SACLnS,EACAwB,GAEA,IAAM4S,EAAaxB,GAAU5S,EAAOwB,GAC9BqR,EAAUuB,EAAWvB,QACvBhK,EAAMkf,KAAKsB,UAAUjV,EAAW1K,MAEpCb,EAAMygB,KAAKC,mBAAQ1gB,EAAK,CAAEif,GAAI,YAE9BlE,OAAO4F,QAAQC,aAAa,GAAI,GAAhC,WAAwC5W,EAAxC,YAAmDhK,IuB/EjDof,CAA0BkB,EAAe3nB,GvBwCtC,SACLxB,EACAwB,GAEA8mB,aAAaC,QAAQ/V,GAAUuV,KAAKsB,UAAUzW,GAAU5S,EAAOwB,KuB3C7DymB,CAAmCkB,EAAe3nB,MACjD,CAACA,EAAUwN,EAAQmD,IAEf,MAGHuX,GAAuC,SAAC3oB,GAC5C,OAAO0Z,eACL,sBAAMkP,IAAI,WAAWZ,KAAMhoB,EAAMgoB,OACjCtW,SAASmX,OAQAC,GAAsC,SAAC,GAAkB,IAAhBroB,EAAe,EAAfA,SAC9CyT,EAAgBC,YAAkBtT,GAClCyjB,EAAcnQ,YAAkBhT,GAEhC4nB,EAAyB3U,uBAC7B,SAACnV,GACC,IAAI6D,EAAI,EACRoR,EACEjV,EAAMgP,OAAOhN,KAAI,SAACqI,GAChB,OAAOjJ,YAAsB,CAC3BC,IAAI,SAAD,OAAWyD,KAAKC,MAAhB,YAAyBlB,KAC5BvC,QAAS+I,QAIfgb,EAAYrlB,EAAMmS,YAEpB,CAAC8C,EAAeoQ,IAGlB,OACE,cAAC,GAAD,CACE7jB,SAAUA,EACVonB,mBAAoBkB,K,6BCrIXC,G,iFAAf,WACEC,GADF,mBAAA9jB,EAAA,sEAGyB+jB,MAAM,GAAD,OACvBnB,UADuB,mBACUkB,EADV,UAH9B,UAO0B,OAJlBE,EAHR,QAOeC,OAPf,sBAQU,IAAIzoB,MAAJ,oDACyCwoB,EAASC,SAT5D,gCAemBD,EAASE,OAf5B,OAeIhP,EAfJ,+DAiBU,IAAI1Z,MAAJ,4CAjBV,eAmBQF,EAAW,IAAI4M,GAASgN,GAnBhC,kBAoBS5Z,GApBT,2D,sBAuBO,IAAM6oB,GAAkC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1CC,EAAetN,YAAe9b,GAAc,GADU,EAG1BqpB,KAAU,sBAAkB,4BAAAtkB,EAAA,sEACrC6jB,GAAa,WADwB,cACtDvoB,EADsD,OAE5D+oB,EAAa/oB,GAF+C,kBAGrDA,GAHqD,2CAI3D,IAPyD,mBAGrDA,EAHqD,KAG3ClB,EAH2C,KAGpC6pB,EAHoC,KAS5D,GAAe,YAAXA,EACF,OAAO,sDACF,GAAe,aAAXA,EACT,OACE,gCACE,0DACA,8BAAMhC,OAAO7nB,QAGZ,GAAIkB,EACT,OAAO8oB,EAAM9oB,GAEb,MAAM,IAAIE,MAAM,6BCjDP+oB,GAAyB,SAAC,GAAwC,IAAtCnO,EAAqC,EAArCA,MAAO5X,EAA8B,EAA9BA,KAAMgmB,EAAwB,EAAxBA,QAAS1pB,EAAe,EAAfA,SAC7D4E,qBAAU,WACR,IAAMC,EAAMtB,YAAW,WACrBmmB,MALiB,KAQnB,OAAO,WACLpmB,aAAauB,MAEd,CAACyW,EAAO5X,EAAMgmB,EAAS1pB,IAE1B,IAAMwE,EAAUf,EAAgBC,GAEhC,OACE,sBACE9D,UAAU,kBACVmf,KAAK,QACL4K,YAAU,YACVC,cAAY,OAJd,UAME,sBAAKhqB,UAAU,eAAf,UACE,wBAAQA,UAAU,UAAlB,SAA6B0b,IAC7B,gCAAQ9W,IACR,wBACEqF,KAAK,SACLjK,UAAU,kBACViqB,eAAa,QACb/D,aAAW,QACXtP,QAASkT,EALX,SAOE,sBAAMI,cAAY,OAAlB,uBAGJ,qBAAKlqB,UAAU,aAAf,SAA6BI,Q,oBC1B/B+pB,GAAU,EAEDC,GAAb,4MACEhrB,MAAe,CACbirB,OAAQ,IAFZ,EAaEC,mBAAqB,SAACC,GACpB,IAAMC,EAAW,gBACXC,EAAiB,2BAClBF,GADkB,IAErB9pB,IAAK0pB,KACLO,YAHqB,WAInBF,EAAY5qB,UACV,SAACR,GACC,OAAO,2BACFA,GADL,IAEEirB,OAAQjrB,EAAMirB,OAAOtV,QAAO,SAACzB,GAAD,OAAOA,EAAE7S,MAAQgqB,EAAMhqB,eAM7D,EAAKb,UACH,SAACR,GACC,OAAO,2BACFA,GADL,IAEEirB,OAAO,GAAD,oBAAMjrB,EAAMirB,QAAZ,CAAoBI,UAjCpC,EAuCEE,YAAc,SAACF,GACb,OACE,cAAC,GAAD,CAEE/O,MAAO+O,EAAM/O,MACb5X,KAAM2mB,EAAM3mB,KACZgmB,QAASW,EAAMC,YAJjB,SAMGD,EAAMpS,MALFoS,EAAMhqB,MA1CnB,kEAMIyT,GAAgB2M,WAAWphB,KAAK6qB,sBANpC,6CAUIpW,GAAgB4M,cAAcrhB,KAAK6qB,sBAVvC,+BAqDI,OACE,qBAAKP,YAAU,SAASC,cAAY,OAAOhqB,UAAWC,KAAOmqB,YAA7D,SACG3qB,KAAKL,MAAMirB,OAAOjpB,IAAI3B,KAAKkrB,mBAvDpC,GAAiCtqB,IAAMC,W,MCVvCuZ,SACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAgB6P,MAAO,SAAC9oB,GAAD,OAAc,cAAC,GAAD,CAAWA,SAAUA,OAC1D,cAAC,GAAD,SAGJiR,SAAS+Y,eAAe,W","file":"static/js/main.89176709.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"Icon_Icon__377W-\",\"IconTextWrapper\":\"Icon_IconTextWrapper__Nb7R3\",\"IconText\":\"Icon_IconText__KjO-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipePicker\":\"RecipePicker_RecipePicker__3sU3V\",\"ResultName\":\"RecipePicker_ResultName__jSE56\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"crashed\":\"ErrorCatcher_crashed__3tour\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipePart\":\"RecipePart_RecipePart__3J39l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipeRow\":\"RecipeRow_RecipeRow__3swT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TotalCard\":\"TotalCard_TotalCard__2ci0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipeGroup\":\"RecipeGroup_RecipeGroup__3MC_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"App_Sidebar__3POeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToastPortal\":\"ToastPortal_ToastPortal__1eVcj\"};","import React from 'react';\n\nimport styles from './ErrorCatcher.module.css';\n\ninterface Props {}\n\ninterface State {\n  crashMsg: string | undefined;\n}\n\nexport class ErrorCatcher extends React.Component<Props, State> {\n  state: State = {\n    crashMsg: undefined,\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State): boolean {\n    return nextState.crashMsg !== this.state.crashMsg;\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      crashMsg: [\n        'Component Stack:',\n        errorInfo.componentStack,\n        '',\n        error && error.stack,\n      ].join('\\n'),\n    });\n  }\n\n  render(): React.ReactNode {\n    if (this.state.crashMsg) {\n      return (\n        <div className={styles.crashed}>\n          <h1>Crashed!</h1>\n          <pre>{this.state.crashMsg}</pre>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { atom, selector, useRecoilValue, RecoilState } from 'recoil';\nimport type { AppSettingsData, RecipeGroupData } from './state';\nimport type { GameData, Fluid, Item } from './game';\nimport type { Rational } from './rational';\n\n//\n// GameData\n//\nexport const gameDataAtom = atom<GameData | null>({\n  key: 'gameData',\n\n  // set early by apploader\n  default: null,\n});\n\nexport const useGameData = (): GameData => {\n  const gameData = useRecoilValue(gameDataAtom);\n  if (!gameData) {\n    throw new Error('useGameData called without gameData available');\n  }\n  return gameData;\n};\n\n//\n// RecipeTarget\n//\nexport interface RecipeTarget {\n  item: Item | Fluid;\n  amount: Rational;\n}\n\nexport const recipeTargetAtom = atom<RecipeTarget | undefined>({\n  key: 'recipeTarget',\n  default: undefined,\n});\n\n//\n// Groups\n//\nexport type GroupAtom = RecoilState<RecipeGroupData>;\nexport const groupAtomsAtom = atom<GroupAtom[]>({\n  key: 'groupAtoms',\n  default: [],\n});\n\nexport const groupsState = selector<[RecipeGroupData, GroupAtom][]>({\n  key: 'groupsState',\n  get: ({ get }) => {\n    const groupAtoms = get(groupAtomsAtom);\n    return groupAtoms.map((groupAtom) => [get(groupAtom), groupAtom]);\n  },\n});\n\n//\n// Settings\n//\nexport const settingsAtom = atom<AppSettingsData>({\n  key: 'settings',\n  default: {\n    assemblerOverrides: {},\n  },\n});\n","import { useEffect, useState } from 'react';\n\nexport function assert(condition: any, message?: string): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nexport function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x);\n}\n\nexport function mapValues<T, V>(\n  obj: { [s: string]: T },\n  fn: (v: T) => V\n): { [s: string]: V } {\n  let ret: { [key: string]: V } = {};\n  for (const [key, value] of Object.entries(obj)) {\n    ret[key] = fn(value);\n  }\n  return ret;\n}\n\nexport function clone<T>(orig: T): T {\n  return Object.assign(Object.create(Object.getPrototypeOf(orig)), orig);\n}\n\nexport function round2(num: number, places: number): number {\n  const mag = Math.pow(10, places);\n  return Math.round(num * mag) / mag;\n}\n\nexport function format_magnitude(amount: number, suffixes: string[]): string {\n  let i = 0;\n  for (; i < suffixes.length; i++) {\n    if (amount >= 1000) {\n      amount = amount / 1000;\n    } else {\n      break;\n    }\n  }\n\n  return `${round2(amount, 2)} ${suffixes[i]}`;\n}\n\nexport function format_watts(watts: number): string {\n  return format_magnitude(watts, ['W', 'kW', 'MW', 'GW', 'TW', 'PW']);\n}\n\nexport function format_joules(joules: number): string {\n  return format_magnitude(joules, ['J', 'kJ', 'MJ', 'GJ', 'TJ', 'PJ']);\n}\n\ninterface Func<T extends any[]> {\n  (...args: T): void;\n}\n\ninterface DebouncedFunc<T extends any[]> extends Func<T> {\n  cancel(): void;\n}\n\nexport function debounce<T extends any[]>(\n  fn: Func<T>,\n  ms: number\n): DebouncedFunc<T> {\n  let pendingId: number | undefined;\n\n  function debounced(...args: T): void {\n    if (pendingId !== undefined) {\n      clearTimeout(pendingId);\n    }\n    pendingId = setTimeout(() => {\n      pendingId = undefined;\n      fn(...args);\n    }, ms);\n  }\n\n  function cancel(): void {\n    if (pendingId !== undefined) {\n      clearTimeout(pendingId);\n      pendingId = undefined;\n    }\n  }\n\n  Object.defineProperty(debounced, 'cancel', {\n    value: cancel,\n  });\n\n  return debounced as DebouncedFunc<T>;\n}\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, ms));\n}\n\nexport function relativeTime(when: Date): [string, number] {\n  const whenUnix = when.valueOf();\n  const nowUnix = Date.now();\n  const suffix = nowUnix > whenUnix ? 'ago' : 'from now';\n\n  const secDiff = Math.floor(Math.abs(nowUnix - whenUnix) / 1000);\n  if (secDiff >= 60) {\n    const minDiff = Math.floor(secDiff / 60);\n    const unit = minDiff === 1 ? 'minute' : 'minutes';\n    const changeTime = (60 - (secDiff % 60)) * 1000;\n    return [`${minDiff} ${unit} ${suffix}`, changeTime];\n  } else {\n    const unit = secDiff === 1 ? 'second' : 'seconds';\n    return [`${secDiff} ${unit} ${suffix}`, 1000];\n  }\n}\n\nexport function useRelativeTime(when: Date): string {\n  const [reltime, change] = relativeTime(when);\n\n  const [renderInc, setRenderInc] = useState(0);\n  void renderInc;\n\n  useEffect(() => {\n    const tId = setInterval(() => {\n      // Force re-render?\n      setRenderInc((r) => r + 1);\n    }, change);\n\n    return () => {\n      clearInterval(tId);\n    };\n  }, [change]);\n\n  return reltime;\n}\n","import { assert } from './util';\n\nfunction num_gcd(a: number, b: number): number {\n  return !b ? a : num_gcd(b, a % b);\n}\n\nfunction num_divmod(\n  a: number,\n  b: number\n): {\n  quotient: number;\n  remainder: number;\n} {\n  assert(Number.isSafeInteger(a));\n  assert(Number.isSafeInteger(b));\n\n  return {\n    quotient: Math.floor(a / b),\n    remainder: a % b,\n  };\n}\n\nconst FLOAT_CONVERT_PRECISION = 10000;\n\nexport class Rational {\n  readonly p: number;\n  readonly q: number;\n\n  constructor(p: number, q: number) {\n    assert(\n      Number.isSafeInteger(p),\n      `Numerator must be a safe integer, got ${p}`\n    );\n    assert(\n      Number.isSafeInteger(q),\n      `Denominator must be a safe integer, got ${q}`\n    );\n    assert(q !== 0, 'Denominator must not be zero');\n\n    if (q < 0) {\n      p = -p;\n      q = -q;\n    }\n\n    if (p === 0) {\n      q = 1;\n    }\n\n    const div = num_gcd(p, q);\n    if (div > 1) {\n      p = p / div;\n      q = q / div;\n    }\n    this.p = p;\n    this.q = q;\n  }\n\n  //\n  // Operations returning Rational\n  //\n  floor(): Rational {\n    const divmod = num_divmod(this.p, this.q);\n    let result = new Rational(divmod.quotient, 1);\n    if (result.less(Rational.zero) && divmod.remainder !== 0) {\n      result = result.sub(Rational.one);\n    }\n    return result;\n  }\n\n  negate(): Rational {\n    return new Rational(-this.p, this.q);\n  }\n\n  invert(): Rational {\n    return new Rational(this.q, this.p);\n  }\n\n  add(other: Rational): Rational {\n    return new Rational(this.p * other.q + this.q * other.p, this.q * other.q);\n  }\n\n  sub(other: Rational): Rational {\n    return new Rational(this.p * other.q - this.q * other.p, this.q * other.q);\n  }\n\n  mul(other: Rational | number): Rational {\n    if (typeof other == 'number') {\n      other = Rational.fromFloat(other);\n    }\n    return new Rational(this.p * other.p, this.q * other.q);\n  }\n\n  div(other: Rational): Rational {\n    return new Rational(this.p * other.q, this.q * other.p);\n  }\n\n  clamp(min: Rational | number, max: Rational | number): Rational {\n    if (typeof min == 'number') {\n      min = Rational.fromFloat(min);\n    }\n    if (typeof max == 'number') {\n      max = Rational.fromFloat(max);\n    }\n\n    if (this.less(min)) return min;\n    if (max.less(this)) return max;\n    return this;\n  }\n\n  //\n  // Operations NOT returning Rational\n  //\n  divmod(other: Rational): { quotient: Rational; remainder: Rational } {\n    var quotient = this.div(other);\n    var div = quotient.floor();\n    var mod = this.sub(other.mul(div));\n    return { quotient: div, remainder: mod };\n  }\n\n  equal(other: Rational): boolean {\n    return this.p === other.p && this.q === other.q;\n  }\n\n  isNegative(): boolean {\n    return this.p < 0;\n  }\n  isPositive(): boolean {\n    return this.p > 0;\n  }\n\n  isOne(): boolean {\n    return this.p === 1;\n  }\n\n  isZero(): boolean {\n    return this.p === 0;\n  }\n\n  less(other: Rational): boolean {\n    return this.p * other.q < this.q * other.p;\n  }\n\n  toFloat(): number {\n    return this.p / this.q;\n  }\n\n  toString(): string {\n    return this.toFraction();\n  }\n\n  toFraction(): string {\n    if (this.q === 1) {\n      return this.p.toString();\n    }\n    return this.p.toString() + '/' + this.q.toString();\n  }\n\n  toDecimal(maxDigits?: number, roundingFactor?: Rational): string {\n    if (maxDigits == null) {\n      maxDigits = 3;\n    }\n    if (roundingFactor == null) {\n      roundingFactor = new Rational(5, 10 ** (maxDigits + 1));\n    }\n\n    let sign = '';\n    let x: Rational = this;\n    if (x.isNegative()) {\n      sign = '-';\n      x = x.negate();\n    }\n    x = x.add(roundingFactor);\n    let divmod = num_divmod(x.p, x.q);\n    var integerPart = divmod.quotient.toString();\n    var decimalPart = '';\n    var fraction = new Rational(divmod.remainder, x.q);\n    let ten = new Rational(10, 1);\n    while (maxDigits > 0 && !fraction.equal(roundingFactor)) {\n      fraction = fraction.mul(ten);\n      roundingFactor = roundingFactor.mul(ten);\n      let divmod = num_divmod(fraction.p, fraction.q);\n      decimalPart += divmod.quotient.toString();\n      fraction = new Rational(divmod.remainder, fraction.q);\n      maxDigits--;\n    }\n    if (fraction.equal(roundingFactor)) {\n      while (decimalPart[decimalPart.length - 1] === '0') {\n        decimalPart = decimalPart.slice(0, decimalPart.length - 1);\n      }\n    }\n    if (decimalPart !== '') {\n      return sign + integerPart + '.' + decimalPart;\n    }\n    return sign + integerPart;\n  }\n\n  toMixed(): string {\n    if (this.isZero()) {\n      return '0';\n    }\n\n    const { quotient, remainder } = this.divmod(Rational.one);\n\n    let parts: string[] = [];\n    if (!quotient.isZero()) {\n      parts.push(quotient.toFraction());\n    }\n    if (!remainder.isZero()) {\n      parts.push(remainder.toFraction());\n    }\n\n    return parts.join(' + ');\n  }\n\n  //\n  // Statics\n  //\n  static fromFloat(num: number): Rational {\n    if (Number.isInteger(num)) {\n      return new this(num, 1);\n    }\n\n    // Sufficient precision for our data?\n    const r = new Rational(\n      Math.round(num * FLOAT_CONVERT_PRECISION),\n      FLOAT_CONVERT_PRECISION\n    );\n\n    const divmod = r.divmod(Rational.one);\n    for (const [key, value] of lookups) {\n      if (divmod.remainder.equal(key)) {\n        return divmod.quotient.add(value);\n      }\n    }\n\n    return r;\n  }\n  static fromInts(p: number, q: number): Rational {\n    return new this(p, q);\n  }\n\n  static fromString(str: string): Rational {\n    let sum = Rational.zero;\n\n    for (let part of str.split('+')) {\n      part = part.trim();\n      if (!part) continue;\n\n      const index = part.indexOf('/');\n      if (index === -1) {\n        sum = sum.add(Rational.fromFloat(Number(part)));\n      } else {\n        const p = Number(part.slice(0, index));\n        const q = Number(part.slice(index + 1));\n        sum = sum.add(Rational.fromInts(p, q));\n      }\n    }\n\n    return sum;\n  }\n\n  static zero = new Rational(0, 1);\n  static one = new Rational(1, 1);\n  static oneThird = new Rational(1, 3);\n  static twoThirds = new Rational(2, 3);\n}\n\nconst lookups: [Rational, Rational][] = [];\n\nfor (let q = 2; q < 100; q++) {\n  for (let p = 1; p < q; p++) {\n    const num = p / q;\n\n    // Is there a better way to quickly filter out non-repeating decimals?\n    if (num.toString().length < 10) {\n      continue;\n    }\n\n    // Support computer input, use proper rounding\n    const rounded = new Rational(\n      Math.round(num * FLOAT_CONVERT_PRECISION),\n      FLOAT_CONVERT_PRECISION\n    );\n    lookups.push([rounded, Rational.fromInts(p, q)]);\n\n    // Support human input, who just leave off the end after a while\n    const floored = new Rational(\n      Math.floor(num * FLOAT_CONVERT_PRECISION),\n      FLOAT_CONVERT_PRECISION\n    );\n    lookups.push([floored, Rational.fromInts(p, q)]);\n  }\n}\n","import { Rational } from './rational';\nimport { assert } from './util';\n\nimport * as schema from './schema';\n\ninterface IBaseDisplayable {\n  name: string;\n  localised_name: schema.LocalisedName;\n  icon_col: number;\n  icon_row: number;\n}\n\nexport class BaseDisplayable {\n  readonly name: string;\n  readonly localisedName: schema.LocalisedName;\n  readonly iconCol: number;\n  readonly iconRow: number;\n\n  constructor(data: IBaseDisplayable) {\n    this.name = data.name;\n    this.localisedName = data.localised_name;\n    this.iconCol = data.icon_col;\n    this.iconRow = data.icon_row;\n  }\n\n  get niceName(): string {\n    return this.localisedName.en;\n  }\n}\n\nexport class Item extends BaseDisplayable {\n  readonly group: string;\n  readonly subgroup: string;\n  readonly order: string;\n  readonly fuelValue: number | null;\n\n  readonly usedBy: Recipe[] = [];\n  readonly madeBy: Recipe[] = [];\n\n  constructor(d: schema.Item) {\n    super(d);\n\n    this.group = d.group;\n    this.subgroup = d.subgroup;\n    this.order = d.order;\n    this.fuelValue = d.fuel_value ?? null;\n  }\n}\n\nexport class Module extends Item {\n  readonly type: 'module';\n  readonly limitedTo: Set<string>;\n  readonly effects: {\n    speed: Rational;\n    productivity: Rational;\n    consumption: Rational;\n    pollution: Rational;\n  };\n\n  constructor(d: schema.ModuleItem) {\n    super(d);\n    this.type = d.type;\n    this.limitedTo = new Set(d.limitation);\n\n    this.effects = {\n      speed: Rational.fromFloat((d.effect.speed || { bonus: 0 }).bonus),\n      productivity: Rational.fromFloat(\n        (d.effect.productivity || { bonus: 0 }).bonus\n      ),\n      consumption: Rational.fromFloat(\n        (d.effect.consumption || { bonus: 0 }).bonus\n      ),\n      pollution: Rational.fromFloat((d.effect.pollution || { bonus: 0 }).bonus),\n    };\n  }\n\n  canUseWith(recipe: Recipe): boolean {\n    if (this.limitedTo.size === 0) {\n      return true;\n    }\n\n    return this.limitedTo.has(recipe.name);\n  }\n}\n\nexport class Fluid extends Item {\n  readonly defaultTemperature: number;\n  readonly type: 'fluid' = 'fluid';\n\n  constructor(d: schema.FluidItem) {\n    super(d);\n    this.defaultTemperature = d.default_temperature;\n  }\n}\n\nexport class Ingredient {\n  readonly type: 'item' | 'fluid';\n  readonly name: string;\n  amount: Rational; // TODO: readonly\n  readonly item: Item;\n\n  constructor(d: schema.Ingredient, gd: GameData) {\n    this.name = d.name;\n    this.amount = Rational.fromFloat(d.amount);\n    this.type = d.type ?? 'item';\n    this.item = gd.getItem(d.name);\n  }\n\n  get niceName(): string {\n    return `${this.amount.toDecimal()} × ${this.item.niceName}`;\n  }\n}\n\nexport class FluidIngredient extends Ingredient {\n  readonly type: 'fluid' = 'fluid';\n  readonly item: Fluid;\n  readonly minimumTemperature: number;\n  readonly maximumTemperature: number;\n\n  constructor(d: schema.Ingredient, gd: GameData) {\n    super(d, gd);\n    this.item = gd.getFluid(d.name);\n\n    this.minimumTemperature = d.minimum_temperature || -Infinity;\n    this.maximumTemperature = d.maximum_temperature || Infinity;\n\n    if (this.maximumTemperature >= 1.797e308) {\n      this.maximumTemperature = Infinity;\n    }\n    if (this.minimumTemperature <= -1.797e308) {\n      this.minimumTemperature = -Infinity;\n    }\n  }\n\n  get niceName(): string {\n    const min = this.minimumTemperature;\n    const max = this.maximumTemperature;\n    let range = '';\n    if (min !== -Infinity && max !== Infinity) {\n      range = ` (${min}° – ${max}°)`;\n    } else if (max !== Infinity) {\n      range = ` (≤ ${max}°)`;\n    } else if (min !== -Infinity) {\n      range = ` (≥ ${max}°)`;\n    }\n    return `${this.amount.toDecimal()} × ${this.item.niceName}${range}`;\n  }\n}\n\nexport class Product {\n  readonly name: string;\n  readonly item: Item;\n  amount: Rational;\n\n  constructor(d: schema.Product, gd: GameData) {\n    this.name = d.name;\n    this.item = gd.getItem(d.name);\n\n    let amount;\n    if ('amount' in d) {\n      amount = Rational.fromFloat(d.amount);\n    } else {\n      amount = Rational.fromInts(d.amount_min + d.amount_max, 2);\n    }\n\n    if (typeof d.probability == 'number') {\n      if (d.probability === 0) {\n        amount = Rational.zero;\n      } else if (d.probability !== 1) {\n        assert(d.probability > 0);\n        assert(d.probability < 1);\n        amount = amount.mul(Rational.fromFloat(d.probability));\n      }\n    }\n    this.amount = amount;\n  }\n\n  get niceName(): string {\n    return `${this.amount.toDecimal()} × ${this.item.niceName}`;\n  }\n\n  satisfies(ingredient: Ingredient): boolean {\n    return ingredient.item === this.item;\n  }\n}\n\nexport class FluidProduct extends Product {\n  readonly item: Fluid;\n  readonly temperature: number;\n\n  constructor(d: schema.Product, gd: GameData) {\n    super(d, gd);\n    this.item = gd.getFluid(d.name);\n    this.temperature = d.temperature || this.item.defaultTemperature;\n  }\n\n  get niceName(): string {\n    let temp = '';\n    if (this.temperature !== this.item.defaultTemperature) {\n      temp = ` (${this.temperature}°)`;\n    }\n    return `${this.amount.toDecimal()} × ${this.item.niceName}${temp}`;\n  }\n\n  satisfies(ingredient: Ingredient): boolean {\n    return (\n      ingredient.item === this.item &&\n      ingredient instanceof FluidIngredient &&\n      ingredient.maximumTemperature >= this.temperature &&\n      ingredient.minimumTemperature <= this.temperature\n    );\n  }\n}\n\nexport class Recipe extends BaseDisplayable {\n  readonly category: string;\n  readonly ingredients: Ingredient[];\n  readonly products: Product[];\n  readonly craftingTime: Rational;\n\n  readonly madeIn: AssemblingMachine[] = [];\n\n  constructor(d: schema.Recipe, gd: GameData) {\n    super(d);\n    this.category = d.category;\n    this.craftingTime = Rational.fromFloat(d.energy_required);\n\n    this.ingredients = d.ingredients.map((ingredient) => {\n      if (ingredient.type === 'fluid') {\n        return new FluidIngredient(ingredient, gd);\n      } else {\n        return new Ingredient(ingredient, gd);\n      }\n    });\n\n    this.products = d.results.map((result) => {\n      if (result.type === 'fluid') {\n        return new FluidProduct(result, gd);\n      } else {\n        return new Product(result, gd);\n      }\n    });\n  }\n\n  get niceName(): string {\n    if (this.products.length !== 1) {\n      return super.niceName;\n    }\n    const product = this.products[0];\n    assert(product, 'recipe has no products');\n    if (product.amount.equal(Rational.one)) {\n      return product.item.niceName;\n    } else {\n      return product.niceName;\n    }\n  }\n}\n\nexport abstract class BaseEntity extends BaseDisplayable {\n  // constructor exists to constrain type\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(data: schema.BaseEntity) {\n    super(data);\n  }\n}\n\nexport class AssemblingMachine extends BaseEntity {\n  readonly craftingCategories: string[];\n  readonly craftingSpeed: number;\n  readonly moduleSlots: number;\n\n  constructor(data: schema.AssemblingMachine) {\n    super(data);\n    this.craftingCategories = data.crafting_categories;\n    this.craftingSpeed = data.crafting_speed;\n    this.moduleSlots = data.module_slots;\n  }\n\n  canBuildRecipe(recipe: Recipe): boolean {\n    // This does not (but should) account for entity fluid boxes\n    if (this.craftingCategories.indexOf(recipe.category) === -1) {\n      return false;\n    }\n\n    // ingredient_count seems to be item specific. this is disabled until\n    // I can figure out how many fluids a machine can support\n    // if (recipe.ingredients.length > this.data.ingredient_count) {\n    //     return false\n    // }\n    return true;\n  }\n}\n\nexport type Entity = AssemblingMachine;\n\ntype CategoryMap = { [category: string]: AssemblingMachine[] };\n\nconst createCategoryMap = (entities: Iterable<Entity>): CategoryMap => {\n  const catMap: CategoryMap = {};\n  for (const entity of entities) {\n    for (const category of entity.craftingCategories) {\n      const machines = catMap[category];\n      if (machines) {\n        machines.push(entity);\n      } else {\n        catMap[category] = [entity];\n      }\n    }\n  }\n  return catMap;\n};\n\nexport class GameData {\n  readonly itemMap = new Map<string, Item>();\n\n  readonly fluids: Fluid[] = [];\n  readonly fluidMap = new Map<string, Fluid>();\n\n  readonly modules: Module[] = [];\n  readonly moduleMap = new Map<string, Module>();\n\n  readonly recipes: Recipe[] = [];\n  readonly recipeMap = new Map<string, Recipe>();\n\n  readonly entityMap = new Map<string, Entity>();\n\n  readonly categoryMap: CategoryMap;\n  readonly groups: schema.Groups;\n\n  readonly clockSprite: BaseDisplayable;\n  readonly noModuleModule: Module;\n\n  readonly spriteHash: string;\n\n  constructor(raw: schema.Root) {\n    this.spriteHash = raw.sprites.hash;\n\n    for (const edata of Object.values(raw['assembling-machine'])) {\n      const entity = new AssemblingMachine(edata);\n      this.entityMap.set(entity.name, entity);\n    }\n\n    for (const edata of Object.values(raw['furnace'])) {\n      const entity = new AssemblingMachine(edata);\n      this.entityMap.set(entity.name, entity);\n    }\n\n    for (const edata of Object.values(raw['rocket-silo'])) {\n      const entity = new AssemblingMachine(edata);\n      this.entityMap.set(entity.name, entity);\n    }\n\n    for (const rawMiningDrill of Object.values(raw['mining-drill'])) {\n      const rawMachine: schema.AssemblingMachine = {\n        ...rawMiningDrill,\n        crafting_categories: rawMiningDrill.resource_categories.map(\n          (r) => 'resource-' + r\n        ),\n        crafting_speed: rawMiningDrill.mining_speed,\n        ingredient_count: 1,\n      };\n      const machine = new AssemblingMachine(rawMachine);\n      this.entityMap.set(rawMachine.name, machine);\n    }\n\n    for (const rawItem of Object.values(raw.items)) {\n      if ('type' in rawItem && rawItem.type === 'fluid') {\n        const fluid = new Fluid(rawItem);\n        this.itemMap.set(fluid.name, fluid);\n        this.fluids.push(fluid);\n        this.fluidMap.set(fluid.name, fluid);\n      } else if ('type' in rawItem && rawItem.type === 'module') {\n        const item = new Module(rawItem);\n        this.itemMap.set(item.name, item);\n        this.modules.push(item);\n        this.moduleMap.set(item.name, item);\n      } else {\n        const item = new Item(rawItem);\n        this.itemMap.set(item.name, item);\n      }\n    }\n\n    const recipes: Recipe[] = [];\n\n    // Add real recipes\n    for (const rawRecipe of Object.values(raw.recipes)) {\n      recipes.push(new Recipe(rawRecipe, this));\n    }\n\n    // Add fake recipes for resources\n    for (const rawResource of Object.values(raw.resource)) {\n      const category = `resource-${rawResource.category}`;\n      const ingredients: schema.Ingredient[] = [];\n      const { fluid_amount, required_fluid } = rawResource.minable;\n      if (fluid_amount && required_fluid) {\n        ingredients.push({\n          name: required_fluid,\n          type: 'fluid',\n          // 10 in lua becomes 1 in game. not sure why\n          amount: fluid_amount / 10,\n        });\n      }\n      recipes.push(\n        new Recipe(\n          {\n            name: `resource-${rawResource.name}`,\n            localised_name: rawResource.localised_name,\n            category,\n            energy_required: rawResource.minable.mining_time,\n            group: category, // TODO: better group?\n            subgroup: category, // TODO: better subgroup?\n            icon_col: rawResource.icon_col,\n            icon_row: rawResource.icon_row,\n            ingredients,\n            results: rawResource.minable.results,\n            type: 'recipe',\n            order: 'A',\n          },\n          this\n        )\n      );\n    }\n\n    for (const recipe of recipes) {\n      for (const entity of this.entityMap.values()) {\n        if ('canBuildRecipe' in entity && entity.canBuildRecipe(recipe)) {\n          recipe.madeIn.push(entity);\n        }\n      }\n      if (!recipe.madeIn.length) {\n        // Filter to only recipes buildable by knonwn assembling machines\n        console.warn(`Ignoring uncraftable recipe: ${recipe.name}`);\n        continue;\n      }\n\n      const hasProducts = recipe.products.some((p) => p.amount.isPositive());\n      if (!hasProducts) {\n        continue;\n      }\n\n      for (const ingredient of recipe.ingredients) {\n        ingredient.item.usedBy.push(recipe);\n      }\n      for (const product of recipe.products) {\n        product.item.madeBy.push(recipe);\n      }\n      this.recipes.push(recipe);\n      this.recipeMap.set(recipe.name, recipe);\n    }\n\n    this.categoryMap = createCategoryMap(this.entityMap.values());\n    this.groups = raw.groups;\n\n    const clockSprite = raw.sprites.extra['clock'];\n    assert(clockSprite, 'missing clock sprite');\n    const noModuleIcon = raw.sprites.extra['slot_icon_module'];\n    assert(noModuleIcon, 'missing \"no icon\" sprite');\n\n    this.clockSprite = new BaseDisplayable({\n      ...clockSprite,\n      name: 'clock',\n      localised_name: { en: 'Clock' },\n    });\n\n    this.noModuleModule = new Module({\n      ...noModuleIcon,\n      type: 'module',\n      name: 'no_module',\n      localised_name: { en: 'No Module' },\n      category: 'speed',\n      effect: {},\n      limitation: [],\n      rocket_launch_products: [],\n\n      group: '',\n      subgroup: '',\n      order: '',\n    });\n  }\n\n  getEntity(name: string): Entity {\n    const entity = this.entityMap.get(name);\n    assert(entity, `no entity with name: ${name}`);\n    return entity;\n  }\n\n  getFluid(name: string): Fluid {\n    const fluid = this.fluidMap.get(name);\n    assert(fluid, `no fluid with name: ${name}`);\n    return fluid;\n  }\n\n  getItem(name: string): Item {\n    const item = this.itemMap.get(name);\n    assert(item, `no item with name: ${name}`);\n    return item;\n  }\n\n  getModule(name: string): Module {\n    const module = this.moduleMap.get(name);\n    assert(module, `no module with name: ${name}`);\n    return module;\n  }\n\n  getRecipe(name: string): Recipe {\n    const recipe = this.recipeMap.get(name);\n    assert(recipe, `no recipe with name: ${name}`);\n    return recipe;\n  }\n\n  getItemOrder(item: Item | Fluid): [string, string, string, string] {\n    let groupOrder = '';\n    let subgroupOrder = '';\n    const group = this.groups[item.group];\n    if (group) {\n      groupOrder = group.order;\n      subgroupOrder = group.subgroups[item.subgroup] || '';\n    }\n    return [groupOrder, subgroupOrder, item.order, item.name];\n  }\n\n  // Sort by\n  // 1. group\n  // 2. subgroup\n  // 3. item order string\n  // 4. item name\n  sortByItem<T>(collection: T[], keyFn: (obj: T) => Item | Fluid): void {\n    collection.sort((a: T, b: T) => {\n      const ordersA = this.getItemOrder(keyFn(a));\n      const ordersB = this.getItemOrder(keyFn(b));\n\n      for (const i in ordersA) {\n        const valA = ordersA[i]!;\n        const valB = ordersB[i]!;\n        if (valA > valB) {\n          return 1;\n        } else if (valA < valB) {\n          return -1;\n        }\n      }\n\n      return 0;\n    });\n  }\n}\n","import * as game from './game';\nimport { AppSettingsData } from './state';\nimport { assert } from './util';\n\nexport function getDefaultMachine(\n  input: game.Recipe | string,\n  settings: AppSettingsData,\n  gameData: game.GameData\n): game.AssemblingMachine {\n  const category = input instanceof game.Recipe ? input.category : input;\n\n  let defaultMachine: game.AssemblingMachine | undefined;\n  if (category in settings.assemblerOverrides) {\n    defaultMachine = settings.assemblerOverrides[category];\n  } else {\n    defaultMachine = gameData.categoryMap[category]![0];\n  }\n\n  assert(defaultMachine);\n\n  if (input instanceof game.Recipe) {\n    assert(input.madeIn.indexOf(defaultMachine) !== -1);\n  }\n\n  return defaultMachine;\n}\n","import * as game from './game';\nimport { Rational } from './rational';\nimport { CompleteState, AppSettingsData } from './state';\nimport { getDefaultMachine } from './stateutil';\nimport { mapValues } from './util';\n\nimport { inflate, deflate } from 'pako';\n\ntype SerializedRowV1 = [\n  string, // recipe name, required\n  string | null, // assembling machine, null if default\n  number, // num assembling machines\n  (string | null)[], // modules,\n  string | undefined, // beacon module, if chosen\n  number // num beacon modules\n];\n\ninterface SerializedAppStateV1 {\n  version: 1;\n  data: SerializedRowV1[];\n}\n\nfunction state1to2(state: SerializedAppStateV1): SerializedAppStateV2 {\n  return {\n    version: 2,\n    data: {\n      rows: state.data,\n      settings: {\n        assemblerOverrides: {},\n      },\n    },\n  };\n}\n\ninterface SerializedAppStateV2 {\n  version: 2;\n  data: {\n    rows: SerializedRowV1[];\n    settings: SerializedSettings;\n  };\n}\n\n// V3 = v2 but compressed\nfunction state2to3(state: SerializedAppStateV2): SerializedAppStateV3 {\n  return {\n    version: 3,\n    data: state.data,\n  };\n}\n\ninterface SerializedAppStateV3 {\n  version: 3;\n  data: SerializedAppStateV2['data'];\n}\n\n// v4 is multiple groups of rows\nfunction state3to4(state: SerializedAppStateV3): SerializedAppStateV4 {\n  return {\n    version: 4,\n    data: {\n      settings: state.data.settings,\n      groups: [\n        {\n          name: 'Factory 1',\n          rows: state.data.rows,\n        },\n      ],\n    },\n  };\n}\n\n// v4 has multiple groups, each with multiple rows\ninterface SerializedGroupV4 {\n  name: string;\n  rows: SerializedRowV1[];\n}\ninterface SerializedAppStateV4 {\n  version: 4;\n  data: {\n    groups: SerializedGroupV4[];\n    settings: SerializedSettings;\n  };\n}\n\nfunction groupv4to5(group: SerializedGroupV4): SerializedGroupV5 {\n  return {\n    name: group.name,\n    rows: group.rows.map((r) => {\n      return [r[0], r[1], r[2].toString(), r[3], r[4], r[5]];\n    }),\n  };\n}\n\n// v5 has multiple groups, each with multiple rows\nfunction state4to5(state: SerializedAppStateV4): SerializedAppStateV5 {\n  return {\n    version: 5,\n    data: {\n      settings: state.data.settings,\n      groups: state.data.groups.map(groupv4to5),\n    },\n  };\n}\ntype SerializedRowV5 = [\n  string, // recipe name, required\n  string | null, // assembling machine, null if default\n  string, // num assembling machines as a rational\n  (string | null)[], // modules,\n  string | undefined, // beacon module, if chosen\n  number // num beacon modules\n];\n\ninterface SerializedGroupV5 {\n  name: string;\n  rows: SerializedRowV5[];\n}\ninterface SerializedAppStateV5 {\n  version: 5;\n  data: {\n    groups: SerializedGroupV5[];\n    settings: SerializedSettings;\n  };\n}\n\ninterface SerializedAppStateOther {\n  version: 0;\n  data: unknown;\n}\n\ntype MultiSerializedAppState =\n  | SerializedAppStateOther\n  | SerializedAppStateV1\n  | SerializedAppStateV2\n  | SerializedAppStateV3\n  | SerializedAppStateV4\n  | SerializedAppStateV5;\n\n// Latest values\ntype SerializedRow = SerializedRowV5;\ntype SerializedAppState = SerializedAppStateV5;\n\ninterface SerializedSettings {\n  assemblerOverrides: {\n    [category: string]: string;\n  };\n}\n\nexport const STATEKEY = `tscalc-${document.location.pathname}`;\n\nexport function setLocalStorageState(\n  state: CompleteState,\n  gameData: game.GameData\n): void {\n  localStorage.setItem(STATEKEY, JSON.stringify(serialize(state, gameData)));\n}\n\nexport function getLocalStorageState(\n  gameData: game.GameData\n): CompleteState | null {\n  let statestr = localStorage.getItem(STATEKEY);\n  if (!statestr) {\n    statestr = localStorage.getItem('appstate');\n    if (statestr) {\n      // move to the new key\n      localStorage.setItem(STATEKEY, statestr);\n      localStorage.removeItem('appstate');\n    } else {\n      return null;\n    }\n  }\n  const stateobj: MultiSerializedAppState = JSON.parse(statestr);\n  if (stateobj.version === 1) {\n    (stateobj as any).version = 3;\n  }\n\n  return deserialize(gameData, stateobj);\n}\n\nexport function setUrlState(\n  state: CompleteState,\n  gameData: game.GameData\n): void {\n  const serialized = serialize(state, gameData);\n  const version = serialized.version;\n  let str = JSON.stringify(serialized.data);\n  // compress\n  str = btoa(deflate(str, { to: 'string' }));\n\n  window.history.replaceState('', '', `#${version}-${str}`);\n}\n\nfunction serialize(\n  state: CompleteState,\n  gameData: game.GameData\n): SerializedAppState {\n  const groups = state.groups.map((group) => {\n    return {\n      name: group.name,\n      rows: group.rows.map((row) => {\n        let machineName: string | null = row.machine.name;\n        const defaultMachine = getDefaultMachine(\n          row.recipe,\n          state.settings,\n          gameData\n        );\n\n        if (defaultMachine.name === machineName) {\n          machineName = null;\n        }\n\n        const srow: SerializedRow = [\n          row.recipe.name,\n          machineName,\n          row.numMachines.toFraction(),\n          row.modules.map((m) => (m ? m.name : null)),\n          row.beaconModule ? row.beaconModule.name : undefined,\n          row.numBeacons,\n        ];\n        return srow;\n      }),\n    };\n  });\n\n  const settings = {\n    assemblerOverrides: mapValues(\n      state.settings.assemblerOverrides,\n      (a) => a.name\n    ),\n  };\n\n  return {\n    version: 5,\n    data: { groups, settings },\n  };\n}\n\nconst reStateUrl = /^#(\\d+)?(?:-)?(.+)$/;\n\nexport function getUrlState(gameData: game.GameData): CompleteState | null {\n  const matches = reStateUrl.exec(document.location.hash);\n  if (!matches) {\n    return null;\n  }\n  const version = Number(matches[1] || 1);\n\n  let str = decodeURIComponent(matches[2]!);\n  if (version > 2) {\n    str = inflate(atob(str), { to: 'string' });\n  }\n\n  let data = JSON.parse(str);\n\n  return deserialize(gameData, {\n    version: version as 0,\n    data,\n  });\n}\n\nfunction migrateSerializedState(\n  state: MultiSerializedAppState\n): SerializedAppState {\n  switch (state.version) {\n    case 1:\n      state = state1to2(state);\n    // fall through\n    case 2:\n      state = state2to3(state);\n    // fall through\n    case 3:\n      state = state3to4(state);\n    // fall through\n    case 4:\n      state = state4to5(state);\n    // fall through\n    case 5:\n      // the latest\n      break;\n    default:\n      throw new Error(`unknown state: ${state}`);\n  }\n\n  return state;\n}\n\nfunction deserialize(\n  gameData: game.GameData,\n  unmigrated: MultiSerializedAppState\n): CompleteState {\n  const migrated = migrateSerializedState(unmigrated).data;\n\n  const state: CompleteState = {\n    settings: deserializeSettings(gameData, migrated.settings),\n    groups: [],\n  };\n\n  state.groups = migrated.groups.map((group) => {\n    return {\n      name: group.name,\n      rows: group.rows.map(\n        ([\n          recipeName,\n          machineName,\n          numMachines,\n          modules,\n          beaconModule,\n          numBeacons,\n        ]) => {\n          const recipe = gameData.getRecipe(recipeName);\n\n          const machine = machineName\n            ? gameData.getEntity(machineName)\n            : getDefaultMachine(recipe, state.settings, gameData);\n\n          return {\n            recipe: recipe,\n            machine: machine,\n            numMachines: Rational.fromString(numMachines),\n            modules: modules.map((n) => (n ? gameData.getModule(n) : null)),\n            beaconModule: beaconModule\n              ? gameData.getModule(beaconModule)\n              : null,\n            numBeacons: numBeacons || 0,\n          };\n        }\n      ),\n    };\n  });\n\n  return state;\n}\n\nfunction deserializeSettings(\n  gameData: game.GameData,\n  serialized: SerializedSettings\n): AppSettingsData {\n  return {\n    assemblerOverrides: mapValues(serialized.assemblerOverrides, (name) =>\n      gameData.getEntity(name)\n    ),\n  };\n}\n","import * as game from './game';\n\ninterface SignalHandler<T> {\n  (arg: T): void;\n}\n\nexport class Signal<T> {\n  handlers: SignalHandler<T>[] = [];\n\n  addHandler(handler: SignalHandler<T>): void {\n    const index = this.handlers.indexOf(handler);\n    if (index === -1) {\n      this.handlers.push(handler);\n    }\n  }\n\n  removeHandler(handler: SignalHandler<T>): void {\n    const index = this.handlers.indexOf(handler);\n    if (index !== -1) {\n      this.handlers.splice(index, 1);\n    }\n  }\n\n  dispatch = (arg: T): void => {\n    for (const handler of this.handlers) {\n      handler(arg);\n    }\n  };\n}\n\nexport const addIngredientFilter = new Signal<game.Ingredient>();\nexport const addProductFilter = new Signal<game.Product>();\nexport const addRecipeRow = new Signal<game.Recipe>();\n","import { Signal } from './signal';\n\nexport interface Notification {\n  title: string;\n  when: Date;\n  body: React.ReactNode;\n}\n\nexport const newNotification = new Signal<Notification>();\n\nexport function notify(notification: Notification): void {\n  newNotification.dispatch(notification);\n}\n\nexport function error(body: Error | React.ReactNode): void {\n  let bodyText = body;\n  if (body instanceof Error && body.stack) {\n    bodyText = body.stack;\n  }\n\n  newNotification.dispatch({\n    title: 'Error!',\n    when: new Date(),\n    body: bodyText,\n  });\n}\n","import { useCallback } from 'react';\nimport { atom, useSetRecoilState } from 'recoil';\n\nimport { RecipeGroupData } from './state';\nimport { groupAtomsAtom } from './atoms';\n\nlet groupId = 0;\n\nexport interface AddGroupAction {\n  (group: RecipeGroupData): void;\n}\nexport const useGroupAdd = (): AddGroupAction => {\n  const setGroupAtoms = useSetRecoilState(groupAtomsAtom);\n\n  return useCallback(\n    function (group: RecipeGroupData): void {\n      setGroupAtoms((atoms) => [\n        ...atoms,\n        atom<RecipeGroupData>({\n          key: `group-${++groupId}`,\n          default: group,\n        }),\n      ]);\n    },\n    [setGroupAtoms]\n  );\n};\n","import * as game from './game';\n\nimport { clone } from './util';\n\nimport { Rational } from './rational';\n\nimport { RecipeRowData } from './state';\n\nexport class Totals {\n  ingredients: game.Ingredient[] = [];\n  products: game.Product[] = [];\n\n  constructor(rows?: RecipeRowData[]) {\n    if (rows && rows.length) {\n      for (const row of rows) {\n        this.addRow(row);\n      }\n    }\n  }\n\n  addIngredient(newIngredient: game.Ingredient): void {\n    for (const oldIng of this.ingredients) {\n      if (oldIng.name !== newIngredient.name) {\n        continue;\n      }\n      if (\n        newIngredient instanceof game.FluidIngredient &&\n        oldIng instanceof game.FluidIngredient\n      ) {\n        if (\n          newIngredient.maximumTemperature !== oldIng.maximumTemperature ||\n          newIngredient.minimumTemperature !== oldIng.minimumTemperature\n        ) {\n          continue;\n        }\n      }\n\n      oldIng.amount = oldIng.amount.add(newIngredient.amount);\n      return;\n    }\n\n    for (const oldProd of this.products) {\n      if (!oldProd.satisfies(newIngredient)) continue;\n      if (oldProd.amount.less(newIngredient.amount)) {\n        newIngredient.amount = newIngredient.amount.sub(oldProd.amount);\n        oldProd.amount = Rational.zero;\n        if (newIngredient.amount.isZero()) break;\n      } else {\n        oldProd.amount = oldProd.amount.sub(newIngredient.amount);\n        newIngredient.amount = Rational.zero;\n        break;\n      }\n    }\n\n    this.ingredients.push(newIngredient);\n    this.ingredients = this.ingredients.filter((p) => !p.amount.isZero());\n    this.products = this.products.filter((p) => !p.amount.isZero());\n  }\n\n  addProduct(newProduct: game.Product): void {\n    for (const oldProd of this.products) {\n      if (newProduct.name !== oldProd.name) continue;\n\n      if (\n        newProduct instanceof game.FluidProduct &&\n        oldProd instanceof game.FluidProduct\n      ) {\n        if (newProduct.temperature !== oldProd.temperature) {\n          continue;\n        }\n      }\n\n      oldProd.amount = oldProd.amount.add(newProduct.amount);\n      return;\n    }\n\n    for (const oldIng of this.ingredients) {\n      if (!newProduct.satisfies(oldIng)) continue;\n      if (newProduct.amount.less(oldIng.amount)) {\n        oldIng.amount = oldIng.amount.sub(newProduct.amount);\n        newProduct.amount = Rational.zero;\n        break;\n      } else {\n        newProduct.amount = newProduct.amount.sub(oldIng.amount);\n        oldIng.amount = Rational.zero;\n        if (newProduct.amount.isZero()) break;\n      }\n    }\n\n    this.products.push(newProduct);\n    this.ingredients = this.ingredients.filter((i) => !i.amount.isZero());\n    this.products = this.products.filter((i) => !i.amount.isZero());\n  }\n\n  addRow(row: RecipeRowData): void {\n    const effects = {\n      consumption: Rational.one,\n      pollution: Rational.one,\n      productivity: Rational.one,\n      speed: Rational.one,\n    };\n\n    for (const module of row.modules) {\n      if (!module) continue;\n      effects.consumption = effects.consumption.add(module.effects.consumption);\n      effects.pollution = effects.pollution.add(module.effects.pollution);\n      effects.productivity = effects.productivity.add(\n        module.effects.productivity\n      );\n      effects.speed = effects.speed.add(module.effects.speed);\n    }\n\n    if (row.beaconModule && row.numBeacons > 0) {\n      // assumes \"distribution_effectivity\" of 0.5 from default beacons\n      const be = row.beaconModule.effects;\n      const num = Rational.fromInts(row.numBeacons, 2);\n      effects.consumption = effects.consumption.add(be.consumption.mul(num));\n      effects.pollution = effects.pollution.add(be.pollution.mul(num));\n      effects.productivity = effects.productivity.add(be.productivity.mul(num));\n      effects.speed = effects.speed.add(be.speed.mul(num));\n    }\n\n    // Allowed -80% to de facto max of signed short int\n    effects.consumption = effects.consumption.clamp(0.2, 32767);\n    effects.pollution = effects.pollution.clamp(0.2, 32767);\n    effects.speed = effects.speed.clamp(0.2, 32767);\n\n    // Special minimum: -0%\n    effects.productivity = effects.productivity.clamp(1, 32767);\n\n    const ingredientMult = Rational.one\n      .mul(row.recipe.craftingTime.invert())\n      .mul(row.numMachines)\n      .mul(row.machine.craftingSpeed)\n      .mul(effects.speed);\n\n    const productMult = ingredientMult.mul(effects.productivity);\n\n    for (const ingredient of row.recipe.ingredients.map((ingredient) => {\n      ingredient = clone(ingredient);\n      ingredient.amount = ingredient.amount.mul(ingredientMult);\n      return ingredient;\n    })) {\n      this.addIngredient(ingredient);\n    }\n\n    for (const product of row.recipe.products.map((product) => {\n      product = clone(product);\n      product.amount = product.amount.mul(productMult);\n      return product;\n    })) {\n      this.addProduct(product);\n    }\n  }\n}\n","import * as React from 'react';\nimport Popper from 'popper.js';\n\nimport { assert } from '../../util';\n\ninterface DropdownHeader {\n  header: React.ReactNode;\n}\n\ninterface DropdownDivider {\n  divider: true;\n}\n\ninterface DropdownEntry<T> {\n  key: React.Key;\n  disabled?: boolean;\n  active?: boolean;\n  option: T;\n}\n\ntype DropdownOption<T> = DropdownHeader | DropdownDivider | DropdownEntry<T>;\n\ninterface Props<T> {\n  options: DropdownOption<T>[];\n  selected: T;\n  onSelect(selected: T): void;\n\n  renderOption(option: T): React.ReactNode;\n  renderSelected(option: T): React.ReactNode;\n}\ninterface State {\n  isOpen: boolean;\n}\n\nconst ESC_KEYCODE = 27;\n\nexport class Dropdown<T> extends React.PureComponent<Props<T>, State> {\n  buttonRef: React.RefObject<HTMLButtonElement> = React.createRef();\n\n  state: State = {\n    isOpen: false,\n  };\n\n  handleClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    if (!this.getCanToggle()) {\n      return;\n    }\n\n    // Prevent the \"opening\" click from immediately closing the dropdown\n    e.stopPropagation();\n\n    this.setState((state) => ({\n      ...state,\n      isOpen: !state.isOpen,\n    }));\n  };\n\n  handleSelect = (selected: T): void => {\n    this.props.onSelect(selected);\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  handleWantClose = (): void => {\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  getCanToggle(): boolean {\n    for (const option of this.props.options) {\n      if ('option' in option && !option.disabled) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render(): React.ReactNode {\n    const classes = ['btn', 'btn-secondary'];\n    if (this.getCanToggle()) {\n      classes.push('dropdown-toggle');\n    } else {\n      classes.push('disabled');\n    }\n\n    let floater: React.ReactNode | null;\n    if (this.state.isOpen) {\n      floater = (\n        <DropdownMenu\n          parentRef={this.buttonRef}\n          options={this.props.options}\n          renderOption={this.props.renderOption}\n          onSelect={this.handleSelect}\n          onWantClose={this.handleWantClose}\n        />\n      );\n    }\n\n    return (\n      <>\n        <button\n          ref={this.buttonRef}\n          className={classes.join(' ')}\n          type=\"button\"\n          onClick={this.handleClick}\n        >\n          {this.props.renderSelected(this.props.selected)}\n        </button>\n        {floater}\n      </>\n    );\n  }\n}\n\ninterface DropdownMenuProps<T> {\n  parentRef: React.RefObject<any>;\n  options: DropdownOption<T>[];\n  renderOption(option: T): React.ReactNode;\n  onSelect(selected: T): void;\n  onWantClose(): void;\n}\n\ninterface DropdownMenuState {\n  style: object;\n}\n\nclass DropdownMenu<T> extends React.PureComponent<\n  DropdownMenuProps<T>,\n  DropdownMenuState\n> {\n  popperInstance: Popper | null = null;\n  menuRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  state: DropdownMenuState = {\n    style: {},\n  };\n\n  popperUpdate = (data: Popper.Data): Popper.Data => {\n    this.setState({\n      style: data.styles,\n    });\n    return data;\n  };\n\n  handleBodyClick = (event: MouseEvent): void => {\n    if (!(event.target instanceof Node)) {\n      console.warn('handleBodyClick called for non-node', event.target);\n      return;\n    }\n    assert(this.menuRef.current);\n\n    if (!this.menuRef.current.contains(event.target)) {\n      // Click was outside menu\n      this.props.onWantClose();\n    }\n  };\n\n  handleKeyEvent = (event: KeyboardEvent): void => {\n    if (event.keyCode === ESC_KEYCODE) {\n      this.props.onWantClose();\n    }\n  };\n\n  componentDidMount(): void {\n    if (this.popperInstance) {\n      throw new Error('Component mounted twice?');\n    }\n\n    const referenceEl = this.props.parentRef.current;\n    if (!referenceEl) {\n      throw new Error('Cannot mount DropdownMenu without parentRef');\n    }\n\n    const menuEl = this.menuRef.current;\n    if (!menuEl) {\n      throw new Error('Cannot mount DropdownMenu without menuRef');\n    }\n\n    this.popperInstance = new Popper(referenceEl, menuEl, {\n      modifiers: {\n        applyStyle: { enabled: false },\n        updateStateWithStyle: {\n          enabled: true,\n          fn: this.popperUpdate,\n        },\n      },\n    });\n\n    document.body.addEventListener('click', this.handleBodyClick);\n    document.body.addEventListener('keyup', this.handleKeyEvent);\n  }\n\n  componentWillUnmount(): void {\n    if (this.popperInstance) {\n      this.popperInstance.disableEventListeners();\n      this.popperInstance = null;\n    }\n    document.body.removeEventListener('click', this.handleBodyClick);\n    document.body.removeEventListener('keyup', this.handleKeyEvent);\n  }\n\n  renderOptions = (): React.ReactNode => {\n    return this.props.options.map((option, i) => {\n      if ('header' in option) {\n        return (\n          <h6 className=\"dropdown-header\" key={'ddkey' + i}>\n            {option.header}\n          </h6>\n        );\n      }\n      if ('divider' in option) {\n        return <div className=\"dropdown-divider\" key={'ddkey' + i} />;\n      }\n\n      const classes = ['dropdown-item'];\n      option.active && classes.push('active');\n      option.disabled && classes.push('disabled');\n\n      return (\n        <button\n          key={option.key}\n          className={classes.join(' ')}\n          onClick={() => this.props.onSelect(option.option)}\n          type=\"button\"\n        >\n          {this.props.renderOption(option.option)}\n        </button>\n      );\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div\n        className=\"dropdown-menu show\"\n        style={this.state.style}\n        ref={this.menuRef}\n      >\n        {this.renderOptions()}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Popper from 'popper.js';\n\ninterface Props {\n  relativeTo: React.RefObject<HTMLElement>;\n  content: () => React.ReactNode;\n}\n\ninterface State {\n  showSelf: boolean;\n}\n\nconst ontop: React.CSSProperties = { zIndex: 1001 };\n\nexport class Tooltip extends React.Component<Props, State> {\n  selfRef: React.RefObject<any>;\n  popperInstance: Popper | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.selfRef = React.createRef();\n    this.popperInstance = null;\n    this.state = {\n      showSelf: false,\n    };\n  }\n\n  shouldComponentUpdate(oldProps: Props, oldState: State): boolean {\n    // universal props\n    if (\n      this.props.relativeTo !== oldProps.relativeTo ||\n      this.state.showSelf !== oldState.showSelf\n    ) {\n      return true;\n    }\n\n    // Only re-render due to props.content changes if we're displaying that content\n    return this.state.showSelf && this.props.content !== oldProps.content;\n  }\n\n  initPopper(): void {\n    if (this.popperInstance) {\n      return;\n    }\n\n    const referenceEl = this.props.relativeTo.current;\n    if (!referenceEl) {\n      throw new Error('Invalid relativeTo');\n    }\n\n    const selfEl = this.selfRef.current;\n    if (!selfEl) {\n      throw new Error('No self reference yet?');\n    }\n\n    this.popperInstance = new Popper(referenceEl, selfEl, {\n      placement: 'right',\n      modifiers: {\n        offset: {\n          enabled: true,\n          offset: '0, 20',\n        },\n        preventOverflow: {\n          enabled: true,\n          boundariesElement: 'window',\n        },\n      },\n    });\n  }\n\n  cleanupPopper(): void {\n    if (this.popperInstance) {\n      this.popperInstance.disableEventListeners();\n      this.popperInstance = null;\n    }\n  }\n\n  componentDidUpdate(_: Props, prevState: State): void {\n    if (prevState.showSelf !== this.state.showSelf) {\n      if (this.state.showSelf) {\n        this.initPopper();\n      } else {\n        this.cleanupPopper();\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const referenceEl = this.props.relativeTo.current;\n    if (!referenceEl) {\n      throw new Error('Invalid relativeTo');\n    }\n\n    referenceEl.addEventListener('mouseenter', this.handleMouseEnter);\n    referenceEl.addEventListener('mouseleave', this.handleMouseLeave);\n  }\n\n  handleMouseEnter = (): void => {\n    this.setState({\n      showSelf: true,\n    });\n  };\n\n  handleMouseLeave = (): void => {\n    this.setState({\n      showSelf: false,\n    });\n  };\n\n  componentWillUnmount(): void {\n    const referenceEl = this.props.relativeTo.current;\n    if (referenceEl) {\n      referenceEl.removeEventListener('mouseenter', this.handleMouseEnter);\n      referenceEl.removeEventListener('mouseleave', this.handleMouseLeave);\n    }\n  }\n\n  render(): React.ReactNode {\n    if (!this.state.showSelf) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(\n      <div style={ontop} ref={this.selfRef}>\n        {this.props.content()}\n      </div>,\n      document.body\n    );\n  }\n}\n","import * as React from 'react';\n\ninterface Props {\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n}\n\ninterface State {\n  txtValue: string;\n  errMsg: string | undefined;\n}\n\nexport class IntegerInput extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      txtValue: props.value.toString(),\n      errMsg: undefined,\n    };\n  }\n\n  shouldComponentUpdate(nextProps: Props, nextState: State): boolean {\n    // props.onChange is not used in rendering\n    return (\n      this.props.value !== nextProps.value ||\n      this.props.min !== nextProps.min ||\n      this.state.txtValue !== nextState.txtValue ||\n      this.state.errMsg !== nextState.errMsg\n    );\n  }\n\n  componentDidUpdate(oldProps: Props): void {\n    if (oldProps.value !== this.props.value) {\n      this.setState((state) => ({\n        txtValue:\n          Number(state.txtValue) === this.props.value\n            ? state.txtValue\n            : this.props.value.toString(),\n      }));\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const txtValue = event.target.value;\n    let errMsg: string | undefined;\n\n    const value = txtValue.trim() ? Number(txtValue) : NaN;\n    if (Number.isNaN(value)) {\n      errMsg = 'Improperly formatted number';\n    } else if (!Number.isInteger(value)) {\n      errMsg = 'Must be an integer';\n    } else if (typeof this.props.min === 'number' && value < this.props.min) {\n      errMsg =\n        this.props.min === 0\n          ? 'Must be positive'\n          : `Must be greater than ${this.props.min}`;\n    }\n\n    this.setState({ txtValue, errMsg }, () => {\n      if (typeof value === 'number' && !errMsg) {\n        this.props.onChange(value);\n      }\n    });\n  };\n\n  render(): React.ReactNode {\n    let className = 'form-control';\n    if (!!this.state.errMsg) {\n      className += ' is-invalid';\n    }\n\n    return (\n      <input\n        className={className}\n        value={this.state.txtValue}\n        onChange={this.handleChange}\n        type=\"number\"\n        min={this.props.min}\n        step=\"1\"\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Rational } from '../../rational';\n\ninterface Props {\n  value: Rational;\n  onChange: (value: Rational) => void;\n  positiveOnly?: boolean;\n}\n\ninterface State {\n  error: string | undefined;\n  txtValue: string;\n}\n\nexport class RationalInput extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      error: undefined,\n      txtValue: rationalToString(props.value),\n    };\n  }\n\n  componentDidUpdate(oldProps: Props): void {\n    if (!this.props.value.equal(oldProps.value)) {\n      let parsed: Rational;\n      try {\n        parsed = stringToRational(this.state.txtValue);\n      } catch (err) {\n        return;\n      }\n\n      if (!parsed.equal(this.props.value)) {\n        this.setState({\n          txtValue: rationalToString(this.props.value),\n        });\n      }\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const str = event.target.value;\n\n    let errmsg: string | undefined;\n    let parsed: Rational | undefined;\n\n    try {\n      parsed = stringToRational(str);\n    } catch (err) {\n      errmsg = err.message;\n    }\n\n    if (parsed && this.props.positiveOnly && parsed.isNegative()) {\n      parsed = undefined;\n      errmsg = 'Number must be positive';\n    }\n    this.setState({ txtValue: str, error: errmsg }, () => {\n      if (parsed) {\n        this.props.onChange(parsed);\n      }\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <input\n        className={classNames('form-control', {\n          'is-invalid': !!this.state.error,\n        })}\n        value={this.state.txtValue}\n        onChange={this.handleChange}\n        type=\"text\"\n      />\n    );\n  }\n}\n\nfunction stringToRational(str: string): Rational {\n  if (!str.trim()) {\n    throw new Error('Empty!');\n  }\n\n  const index = str.indexOf('/');\n  const lastIndex = str.lastIndexOf('/');\n  if (index !== lastIndex) {\n    throw new Error('Too many slashes');\n  }\n\n  return Rational.fromString(str);\n}\n\nfunction rationalToString(rational: Rational): string {\n  const dec = rational.toFloat().toString();\n  if (dec.length < 10) {\n    return dec;\n  }\n\n  return rational.toMixed();\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { BaseDisplayable } from '../game';\nimport { Tooltip } from './generic';\n\nimport styles from './Icon.module.css';\n\ninterface Props {\n  obj: BaseDisplayable;\n\n  className?: string;\n  title?: string;\n  onClick?(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\n  tooltip?: () => React.ReactNode;\n  text?: React.ReactNode;\n}\n\ninterface State {}\n\nexport class Icon extends React.PureComponent<Props, State> {\n  iconRef = React.createRef<HTMLDivElement>();\n\n  render(): React.ReactNode {\n    const x = -this.props.obj.iconCol * 32;\n    const y = -this.props.obj.iconRow * 32;\n\n    const divStyle: React.CSSProperties = {\n      backgroundPosition: `${x}px ${y}px`,\n    };\n\n    let icon = (\n      <div\n        ref={this.iconRef}\n        onClick={this.props.onClick}\n        title={this.props.title}\n        className={classNames(styles.Icon, 'game-icon', this.props.className)}\n        style={divStyle}\n      >\n        &nbsp;\n      </div>\n    );\n\n    if (this.props.tooltip) {\n      icon = (\n        <>\n          {icon}\n          <Tooltip content={this.props.tooltip} relativeTo={this.iconRef} />\n        </>\n      );\n    }\n\n    if (this.props.text) {\n      icon = (\n        <div className={styles.IconTextWrapper}>\n          {icon}\n          <span className={styles.IconText}>{this.props.text}</span>\n        </div>\n      );\n    }\n\n    return icon;\n  }\n}\n","import * as React from 'react';\n\nimport { format_joules } from '../util';\nimport * as game from '../game';\n\ninterface Props {\n  obj: game.Ingredient | game.Product;\n}\n\nexport const IngredientCard: React.FC<Props> = (props) => {\n  const { obj } = props;\n\n  let fuelValues: React.ReactNode;\n  if (obj.item.fuelValue) {\n    const totalValue = format_joules(\n      obj.amount.mul(obj.item.fuelValue).toFloat()\n    );\n    fuelValues = (\n      <div className=\"card-body\">\n        <div>\n          <b>Fuel value</b>: {format_joules(obj.item.fuelValue)}\n        </div>\n        <div>\n          <b>Total fuel value</b>: {totalValue}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        {obj.niceName} ({obj.item.name})\n      </div>\n      {fuelValues}\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { Rational } from '../rational';\nimport * as game from '../game';\nimport * as signal from '../signal';\n\nimport { Icon } from './Icon';\nimport { IngredientCard } from './IngredientCard';\n\nimport { recipeTargetAtom } from '../atoms';\n\nimport styles from './RecipePart.module.css';\n\ninterface Props {\n  obj: game.Ingredient | game.Product;\n  showName?: boolean;\n}\n\nexport const RecipePart: React.FC<Props> = ({ obj, showName }) => {\n  const [recipeTarget, setRecipeTarget] = useRecoilState(recipeTargetAtom);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent): void => {\n      if (event.shiftKey) {\n        event.preventDefault();\n        event.stopPropagation();\n        setRecipeTarget({\n          item: obj.item,\n          amount: obj.amount,\n        });\n        return;\n      }\n\n      if (obj instanceof game.Ingredient) {\n        if (obj.item.madeBy.length === 1) {\n          signal.addRecipeRow.dispatch(obj.item.madeBy[0]!);\n        } else {\n          signal.addIngredientFilter.dispatch(obj);\n        }\n      } else {\n        if (obj.item.usedBy.length === 1) {\n          signal.addRecipeRow.dispatch(obj.item.usedBy[0]!);\n        } else {\n          signal.addProductFilter.dispatch(obj);\n        }\n      }\n    },\n    [obj, setRecipeTarget]\n  );\n\n  let text = perSecond(obj.amount);\n  if (showName) {\n    text = (\n      <>\n        {obj.item.niceName} — {text}\n      </>\n    );\n  }\n\n  const isTarget =\n    recipeTarget &&\n    recipeTarget.item === obj.item &&\n    recipeTarget.amount.equal(obj.amount);\n  const copySource = isTarget ? 'copy-source' : '';\n\n  return (\n    <Icon\n      className={`${styles.RecipePart} ${copySource}`}\n      onClick={handleClick}\n      tooltip={() => <IngredientCard obj={obj} />}\n      obj={obj.item}\n      text={text}\n    />\n  );\n};\n\nfunction perSecond(rational: Rational): React.ReactNode {\n  const dec = rational.toDecimal().toString();\n  let amount: React.ReactNode;\n  if (dec.includes('.') && dec.length > 4) {\n    amount = <abbr title={rational.toFraction()}>{rational.toDecimal()}</abbr>;\n  } else {\n    amount = dec;\n  }\n  return <>{amount} / sec</>;\n}\n","import * as React from 'react';\nimport * as game from '../game';\n\ninterface Props {\n  machine: game.AssemblingMachine;\n}\n\nexport const MachineCard: React.FC<Props> = (props) => {\n  return (\n    <div className=\"machine-card card\">\n      <div className=\"card-body\">\n        <b>{props.machine.niceName}</b>\n        <br />\n        <b>Crafting Speed:</b> {props.machine.craftingSpeed}\n        <br />\n        <b>Module Slots:</b> {props.machine.moduleSlots}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport * as game from '../game';\n\nimport { Icon } from './Icon';\nimport { MachineCard } from './MachineCard';\nimport { useGameData } from '../atoms';\n\ninterface Props {\n  recipe: game.Recipe;\n  onClick?(r: game.Recipe): void;\n}\n\nexport const RecipeCard: React.FC<Props> = ({ recipe, onClick }) => {\n  const gameData = useGameData();\n\n  const handleClick = (): void => {\n    onClick && onClick(recipe);\n  };\n\n  const ingredients = recipe.ingredients.map((ingredient) => (\n    <Icon\n      key={ingredient.name}\n      obj={ingredient.item}\n      text={ingredient.niceName}\n    />\n  ));\n  const products = recipe.products.map((product) => (\n    <Icon key={product.name} obj={product.item} text={product.niceName} />\n  ));\n\n  const madeIn = recipe.madeIn.map((machine) => (\n    <Icon\n      key={machine.name}\n      obj={machine}\n      tooltip={() => <MachineCard machine={machine} />}\n    />\n  ));\n\n  return (\n    <div className=\"recipe-tooltip card\" onClick={handleClick}>\n      <div className=\"card-header\">\n        <Icon obj={recipe} text={`${recipe.niceName} (Recipe)`} />\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item\">\n          <b>Ingredients:</b>\n          {ingredients}\n          <Icon\n            obj={gameData.clockSprite}\n            text={\n              <span>\n                <b>{recipe.craftingTime.toDecimal()} s</b> Crafting time\n              </span>\n            }\n          />\n        </li>\n        <li className=\"list-group-item\">\n          <b>Products:</b>\n          {products}\n        </li>\n        <li className=\"list-group-item\">\n          <b>Made In:</b>\n          <br />\n          {madeIn}\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { AssemblingMachine } from '../game';\n\nimport { Icon } from './Icon';\nimport { MachineCard } from './MachineCard';\nimport { Dropdown } from './generic';\n\ninterface MachinePickerProps {\n  machines: AssemblingMachine[];\n  selected: AssemblingMachine;\n  onChange(m: AssemblingMachine): void;\n}\n\nconst renderSelected = (machine: AssemblingMachine): React.ReactNode => {\n  return <Icon obj={machine} tooltip={() => <MachineCard machine={machine} />} />;\n};\n\nconst renderOption = (machine: AssemblingMachine): React.ReactNode => {\n  return (\n    <Icon\n      obj={machine}\n      tooltip={() => <MachineCard machine={machine} />}\n      text={machine.niceName}\n    />\n  );\n};\n\nexport const MachinePicker: React.FC<MachinePickerProps> = (props) => {\n  const options = props.machines.map((machine) => ({\n    key: machine.name,\n    option: machine,\n    active: machine === props.selected,\n  }));\n\n  return (\n    <Dropdown\n      options={options}\n      selected={props.selected}\n      onSelect={props.onChange}\n      renderOption={renderOption}\n      renderSelected={renderSelected}\n    />\n  );\n};\n","import React from 'react';\n\nimport type { Rational } from '../rational';\nimport type { Module } from '../game';\nimport { round2 } from '../util';\n\ninterface Props {\n  module: Module;\n}\n\nfunction formatBonus(name: string, bonus: Rational): React.ReactNode {\n  if (bonus.isZero()) return null;\n  return (\n    <div>\n      <b>\n        {name} {round2(bonus.toFloat() * 100, 2)}%\n      </b>\n    </div>\n  );\n}\n\nexport const ModuleCard: React.FC<Props> = ({ module }) => {\n  return (\n    <div className=\"module-card card\">\n      <div className=\"card-header\">\n        <b>{module.niceName}</b>\n      </div>\n      <div className=\"card-body\">\n        {formatBonus('Speed', module.effects.speed)}\n        {formatBonus('Productivity', module.effects.productivity)}\n        {formatBonus('Energy Consumption', module.effects.consumption)}\n        {formatBonus('Pollution', module.effects.pollution)}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport type { Module, Recipe } from '../game';\n\nimport { Icon } from './Icon';\nimport { ModuleCard } from './ModuleCard';\nimport { Dropdown } from './generic';\nimport { useGameData } from '../atoms';\n\ninterface ModulePickerProps {\n  recipe: Recipe;\n  isBeacon?: boolean;\n  selected: Module | null;\n  onChange(m: Module | null): void;\n}\n\nexport const ModulePicker: React.FC<ModulePickerProps> = (props) => {\n  const gameData = useGameData();\n  const renderSelected = (module: Module | null): React.ReactNode => {\n    if (module) {\n      return (\n        <Icon obj={module} tooltip={() => <ModuleCard module={module} />} />\n      );\n    } else {\n      return <Icon obj={gameData.noModuleModule} />;\n    }\n  };\n\n  const renderOption = (module: Module | null): React.ReactNode => {\n    if (module) {\n      return (\n        <Icon\n          obj={module}\n          tooltip={() => <ModuleCard module={module} />}\n          text={module.niceName}\n        />\n      );\n    } else {\n      return (\n        <Icon\n          obj={gameData.noModuleModule}\n          text={gameData.noModuleModule.niceName}\n        />\n      );\n    }\n  };\n\n  const options = gameData.modules\n    .filter((m) => {\n      // TODO: what is the actual logic for which modules are allowed in beacons?\n      if (props.isBeacon && m.effects.productivity.isPositive()) {\n        return false;\n      }\n      return m.canUseWith(props.recipe);\n    })\n    .map((m) => ({\n      key: m.name,\n      option: m as Module | null,\n      active: m === props.selected,\n    }));\n\n  options.unshift({\n    key: 'no_module',\n    option: null,\n    active: !props.selected,\n  });\n\n  return (\n    <Dropdown\n      options={options}\n      selected={props.selected}\n      onSelect={props.onChange}\n      renderOption={renderOption}\n      renderSelected={renderSelected}\n    />\n  );\n};\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport * as game from '../game';\nimport { Rational } from '../rational';\nimport { Totals } from '../totals';\nimport { RecipeRowData } from '../state';\nimport { recipeTargetAtom, RecipeTarget } from '../atoms';\n\nimport { Icon } from './Icon';\nimport { RecipePart } from './RecipePart';\nimport { RecipeCard } from './RecipeCard';\nimport { MachinePicker } from './MachinePicker';\nimport { ModulePicker } from './ModulePicker';\nimport { IntegerInput, RationalInput } from './generic';\n\nimport styles from './RecipeRow.module.css';\n\ninterface Props {\n  index: number;\n  recipeTarget: RecipeTarget | undefined;\n  data: RecipeRowData;\n\n  onUpdateRow(row: RecipeRowData): void;\n  onRemoveRow(recipe: game.Recipe): void;\n}\n\nclass RawRecipeRow extends React.PureComponent<Props, never> {\n  handleRemoveRow = (): void => {\n    this.props.onRemoveRow(this.props.data.recipe);\n  };\n\n  handleMachineChange = (machine: game.AssemblingMachine): void => {\n    this.applyChange({\n      machine: machine,\n      modules: this.props.data.modules\n        .filter((module) => module !== null)\n        .slice(0, machine.moduleSlots),\n    });\n  };\n\n  handleNumMachinesChange = (num: Rational): void => {\n    this.applyChange({ numMachines: num });\n  };\n\n  handleNumBeaconsChange = (num: number): void => {\n    this.applyChange({ numBeacons: num });\n  };\n\n  handleSetAllModules = (): void => {\n    this.applyChange({\n      modules: new Array(this.props.data.machine.moduleSlots).fill(\n        this.props.data.modules[0]\n      ),\n    });\n  };\n\n  handleSetModule = (index: number, module: game.Module | null): void => {\n    const modules = this.props.data.modules.slice();\n    modules[index] = module;\n    this.applyChange({ modules: modules });\n  };\n\n  handleSetBeaconModule = (module: game.Module | null): void => {\n    this.applyChange({ beaconModule: module });\n  };\n\n  handleInputGroupClick: React.MouseEventHandler<any> = (event): void => {\n    const { recipeTarget } = this.props;\n    if (!event.shiftKey || !recipeTarget) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n\n    const output = new Totals();\n    output.addRow({\n      ...this.props.data,\n      numMachines: Rational.one,\n    });\n\n    let current: game.Ingredient | game.Product | undefined;\n    current = output.ingredients.find((x) => {\n      return x.item.name === recipeTarget.item.name;\n    });\n\n    current =\n      current ||\n      output.products.find((x) => {\n        return x.item.name === recipeTarget.item.name;\n      });\n\n    if (!current) {\n      console.error(\n        `Could not find ${recipeTarget.item.name} in totals`,\n        output\n      );\n      return;\n    }\n\n    const newNum = recipeTarget.amount.div(current.amount);\n\n    this.applyChange({\n      numMachines: newNum,\n    });\n  };\n\n  applyChange(change: Partial<RecipeRowData>): void {\n    this.props.onUpdateRow({\n      ...this.props.data,\n      ...change,\n    });\n  }\n\n  getOutput(): Totals {\n    const t = new Totals();\n    t.addRow(this.props.data);\n    return t;\n  }\n\n  renderModules(): React.ReactNode {\n    const numSlots = this.props.data.machine.moduleSlots;\n\n    const slots = [];\n    for (let i = 0; i < numSlots; i++) {\n      const module = this.props.data.modules[i] || null;\n      slots.push(\n        <ModulePicker\n          key={i}\n          recipe={this.props.data.recipe}\n          selected={module}\n          onChange={(m) => this.handleSetModule(i, m)}\n        />\n      );\n    }\n\n    if (numSlots > 1) {\n      slots.splice(\n        1,\n        0,\n        <button\n          onClick={this.handleSetAllModules}\n          key=\"applicator\"\n          className=\"btn\"\n        >\n          →\n        </button>\n      );\n    }\n\n    return slots;\n  }\n\n  renderBeacons(): React.ReactNode {\n    return (\n      <div className=\"btn-toolbar\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Beacon Modules</span>\n          </div>\n          <IntegerInput\n            value={this.props.data.numBeacons}\n            onChange={this.handleNumBeaconsChange}\n            min={0}\n          />\n          <div className=\"input-group-append btn-icon-wrapper\">\n            <ModulePicker\n              isBeacon={true}\n              recipe={this.props.data.recipe}\n              selected={this.props.data.beaconModule}\n              onChange={this.handleSetBeaconModule}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderMachines(): React.ReactNode {\n    return (\n      <div className=\"btn-toolbar mb-3\">\n        <div className=\"input-group\" onClick={this.handleInputGroupClick}>\n          <RationalInput\n            value={this.props.data.numMachines}\n            onChange={this.handleNumMachinesChange}\n            positiveOnly={true}\n          />\n          <div className=\"input-group-append btn-icon-wrapper\">\n            <MachinePicker\n              machines={this.props.data.recipe.madeIn}\n              selected={this.props.data.machine}\n              onChange={this.handleMachineChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render(): React.ReactNode {\n    const recipe = this.props.data.recipe;\n    const output = this.getOutput();\n\n    const ingredients = output.ingredients.map((ingredient) => (\n      <div className=\"mb-1\" key={ingredient.name}>\n        <RecipePart obj={ingredient} />\n      </div>\n    ));\n    const products = output.products.map((product) => (\n      <div className=\"mb-1\" key={product.name}>\n        <RecipePart obj={product} />\n      </div>\n    ));\n    return (\n      <Draggable draggableId={recipe.name} index={this.props.index}>\n        {(provided) => (\n          <div\n            className={`${styles.RecipeRow} recipe-row card mb-3`}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n          >\n            <div className=\"card-header clearfix\" {...provided.dragHandleProps}>\n              <div className=\"float-left\">\n                <Icon\n                  obj={recipe}\n                  text={recipe.niceName}\n                  tooltip={() => <RecipeCard recipe={recipe} />}\n                />\n              </div>\n              <div className=\"float-right\">\n                <button\n                  className=\"btn btn-danger btn-sm\"\n                  onClick={this.handleRemoveRow}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n            <div className=\"card-body clearfix\">\n              <div className=\"float-left\">\n                {this.renderMachines()}\n                <div className=\"mb-3 btn-group btn-icon-wrapper\" role=\"group\">\n                  {this.renderModules()}\n                </div>\n                {this.renderBeacons()}\n              </div>\n\n              <div className=\"float-right\">\n                <div\n                  className=\"mr-3\"\n                  style={{\n                    display: 'inline-block',\n                    float: 'left',\n                    minWidth: '150px',\n                  }}\n                >\n                  <b>Ingredients:</b>\n                  {ingredients}\n                </div>\n\n                <div\n                  className=\"mr-2\"\n                  style={{\n                    display: 'inline-block',\n                    minWidth: '150px',\n                  }}\n                >\n                  <b>Products:</b>\n                  {products}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport const RecipeRow: React.FC<{\n  index: number;\n  data: RecipeRowData;\n  onUpdateRow(data: RecipeRowData): void;\n  onRemoveRow(recipe: game.Recipe): void;\n}> = ({ index, data, onRemoveRow, onUpdateRow }) => {\n  const recipeTarget = useRecoilValue(recipeTargetAtom);\n\n  return (\n    <RawRecipeRow\n      index={index}\n      data={data}\n      recipeTarget={recipeTarget}\n      onUpdateRow={onUpdateRow}\n      onRemoveRow={onRemoveRow}\n    />\n  );\n};\n","import * as React from 'react';\nimport Fuse from 'fuse.js';\n\nimport { debounce } from '../util';\n\nimport * as game from '../game';\nimport * as signal from '../signal';\n\nimport { Icon } from './Icon';\nimport { IngredientCard } from './IngredientCard';\nimport { RecipeCard } from './RecipeCard';\n\nimport styles from './RecipePicker.module.css';\n\nconst getFn: Fuse.FuseGetFunction<game.Recipe> = (obj, path) => {\n  if (typeof path === 'string') {\n    throw new Error(`path unexpectedly string: ${path}`);\n  }\n  if (path.length !== 1) {\n    throw new Error(`path unexpectedly long/short: ${path}`);\n  }\n  switch (path[0]) {\n    case 'niceName':\n      return obj.niceName;\n    case 'name':\n      return obj.name;\n    default:\n      throw new Error(`Unsupported path: ${path}`);\n  }\n};\n\nconst RE_ADVANCED = /((?:produces)|(?:consumes)):([a-z0-9-]+)/g;\n\ninterface Props {\n  recipes: game.Recipe[];\n  onPickRecipe(r: game.Recipe): void;\n}\n\ninterface State {\n  query: string;\n  matches: game.Recipe[];\n}\n\nexport class RecipePicker extends React.PureComponent<Props, State> {\n  inputRef = React.createRef<HTMLInputElement>();\n\n  state: State = {\n    query: '',\n    matches: [],\n  };\n\n  componentDidMount(): void {\n    signal.addIngredientFilter.addHandler(this.handleIngredientClick);\n    signal.addProductFilter.addHandler(this.handleProductClick);\n  }\n\n  componentWillUnmount(): void {\n    this.debCalculateMatches.cancel();\n    signal.addIngredientFilter.removeHandler(this.handleIngredientClick);\n    signal.addProductFilter.removeHandler(this.handleProductClick);\n  }\n\n  handleIngredientClick = (ingredient: game.Ingredient): void => {\n    const term = `produces:${ingredient.name}`;\n    if (!this.state.query.includes(term)) {\n      this.setQuery(`${this.state.query} ${term}`, () => {\n        this.calculateMatches();\n      });\n      this.inputRef.current?.scrollIntoView();\n    }\n  };\n\n  handleProductClick = (product: game.Product): void => {\n    const term = `consumes:${product.name}`;\n    if (!this.state.query.includes(term)) {\n      this.setQuery(`${this.state.query} ${term}`, () => {\n        this.calculateMatches();\n      });\n      this.inputRef.current?.scrollIntoView();\n    }\n  };\n\n  handleQueryInput = (event: React.FormEvent<HTMLInputElement>): void => {\n    const target = event.target as HTMLInputElement;\n    this.setQuery(target.value);\n  };\n\n  handleRecipeClick = (recipe: game.Recipe): void => {\n    this.props.onPickRecipe(recipe);\n    this.setQuery('');\n  };\n\n  setQuery = (query: string, callback?: () => void): void => {\n    if (!query.trim()) {\n      this.debCalculateMatches.cancel();\n      this.setState(\n        {\n          query: '',\n          matches: [],\n        },\n        callback\n      );\n    } else {\n      this.setState({ query: query }, callback);\n      this.debCalculateMatches();\n    }\n  };\n\n  calculateMatches(): void {\n    let query = this.state.query.trim().toLowerCase();\n    if (!query) {\n      this.setState({ matches: [] });\n      return;\n    }\n\n    const conditions = {\n      consumes: [] as string[],\n      produces: [] as string[],\n    };\n\n    type ckey = keyof typeof conditions;\n\n    query = query\n      .replace(RE_ADVANCED, (_, key, value) => {\n        conditions[key as ckey].push(value);\n        return '';\n      })\n      .trim();\n\n    let recipes = this.props.recipes;\n    if (conditions.consumes.length || conditions.produces.length) {\n      recipes = recipes.filter((recipe) => {\n        for (const name of conditions.consumes) {\n          if (!recipe.ingredients.some((i) => i.name === name)) {\n            return false;\n          }\n        }\n        for (const name of conditions.produces) {\n          if (!recipe.products.some((i) => i.name === name)) {\n            return false;\n          }\n        }\n        return true;\n      });\n    }\n\n    if (query) {\n      const fuse = new Fuse(recipes, {\n        shouldSort: true,\n        getFn: getFn,\n        keys: [\n          {\n            name: 'niceName',\n            weight: 0.7,\n          },\n          {\n            name: 'name',\n            weight: 0.2,\n          },\n        ],\n      });\n      const results = fuse.search(query);\n      recipes = results.map((r) => r.item);\n    }\n    this.setState({ matches: recipes });\n  }\n\n  debCalculateMatches = debounce(this.calculateMatches.bind(this), 200);\n\n  renderMatches(): React.ReactNode {\n    if (!this.state.matches.length) {\n      return '';\n    }\n    let matches = this.state.matches;\n    if (matches.length > 100) {\n      matches = matches.slice(0, 100);\n    }\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>Recipe</th>\n            <th>Time</th>\n            <th>Ingredients</th>\n            <th>Products</th>\n          </tr>\n        </thead>\n        <tbody>\n          {matches.map((r) => (\n            <RecipeMatch\n              recipe={r}\n              key={r.name}\n              onClick={this.handleRecipeClick}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className={styles.RecipePicker}>\n        <div>\n          <input\n            type=\"search\"\n            ref={this.inputRef}\n            className=\"editable-display form-control\"\n            placeholder=\"What do you want to build?\"\n            value={this.state.query}\n            onChange={this.handleQueryInput}\n          />\n        </div>\n        {this.renderMatches()}\n      </div>\n    );\n  }\n}\n\ninterface RecipeMatchProps {\n  recipe: game.Recipe;\n  onClick(recipe: game.Recipe): void;\n}\n\nclass RecipeMatch extends React.PureComponent<RecipeMatchProps, never> {\n  handleClickAdd = (): void => {\n    this.props.onClick(this.props.recipe);\n  };\n\n  render(): React.ReactNode {\n    const recipe = this.props.recipe;\n    const ingredients = recipe.ingredients.map((ing) => (\n      <Icon\n        key={ing.name}\n        obj={ing.item}\n        tooltip={() => <IngredientCard obj={ing} />}\n      />\n    ));\n    const products = recipe.products.map((prod) => (\n      <Icon\n        key={prod.name}\n        obj={prod.item}\n        tooltip={() => <IngredientCard obj={prod} />}\n      />\n    ));\n    return (\n      <tr onClick={this.handleClickAdd}>\n        <td className={styles.ResultName}>\n          <Icon\n            obj={recipe}\n            text={recipe.niceName}\n            tooltip={() => <RecipeCard recipe={recipe} />}\n          />\n        </td>\n        <td>{recipe.craftingTime.toDecimal()}</td>\n        <td>{ingredients}</td>\n        <td>{products}</td>\n      </tr>\n    );\n  }\n}\n","import React, { useMemo } from 'react';\nimport { RecipePart } from './RecipePart';\nimport { RecipeRowData } from '../state';\nimport { useGameData } from '../atoms';\nimport { Totals } from '../totals';\n\nimport styles from './TotalCard.module.css';\n\ninterface Props {\n  rows: RecipeRowData[];\n}\n\nexport const TotalCard: React.FC<Props> = ({ rows }) => {\n  const gameData = useGameData();\n\n  const totals: Totals = useMemo(() => {\n    const t = new Totals(rows);\n    gameData.sortByItem(t.ingredients, (p) => p.item);\n    gameData.sortByItem(t.products, (p) => p.item);\n    return t;\n  }, [gameData, rows]);\n\n  if (!totals.ingredients.length && !totals.products.length) {\n    return <div />;\n  }\n\n  return (\n    <div className={`card ${styles.TotalCard}`}>\n      <div className=\"card-header\">Combined Totals</div>\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col\">\n            Ingredients:\n            {totals.ingredients.map((ing) => (\n              <RecipePart key={ing.name} obj={ing} showName />\n            ))}\n          </div>\n          <div className=\"col\">\n            Products:\n            {totals.products.map((prod) => (\n              <RecipePart key={prod.name} obj={prod} showName />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { DropResult, DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nimport * as signal from '../signal';\nimport * as game from '../game';\nimport * as su from '../stateutil';\nimport { Rational } from '../rational';\nimport { settingsAtom, useGameData, GroupAtom } from '../atoms';\nimport { assert } from '../util';\nimport { useGroupAdd } from '../actions';\nimport { RecipeGroupData, RecipeRowData } from '../state';\n\nimport { RecipeRow } from './RecipeRow';\nimport { RecipePicker } from './RecipePicker';\nimport { TotalCard } from './TotalCard';\n\nimport styles from './RecipeGroup.module.css';\n\ninterface Props {\n  group: RecipeGroupData;\n  gameData: game.GameData;\n\n  onRenameGroup(newName: string): void;\n  onCloneGroup(newName: string): void;\n  onRemoveGroup(): void;\n\n  onAddRow(recipe: game.Recipe): void;\n  onMoveRow(oldIndex: number, newIndex: number): void;\n  onUpdateRow(data: RecipeRowData): void;\n  onRemoveRow(recipe: game.Recipe): void;\n}\n\nclass RawRecipeGroup extends React.PureComponent<Props, never> {\n  componentDidMount(): void {\n    signal.addRecipeRow.addHandler(this.props.onAddRow);\n  }\n\n  componentDidUpdate(oldProps: Props, oldState: never): void {\n    if (this.props.onAddRow !== oldProps.onAddRow) {\n      signal.addRecipeRow.removeHandler(oldProps.onAddRow);\n      signal.addRecipeRow.addHandler(this.props.onAddRow);\n    }\n  }\n\n  componentWillUnmount(): void {\n    signal.addRecipeRow.removeHandler(this.props.onAddRow);\n  }\n\n  handleDragEnd = (result: DropResult): void => {\n    if (!result.destination) {\n      return;\n    }\n    if (result.source.index !== result.destination.index) {\n      this.props.onMoveRow(result.source.index, result.destination.index);\n    }\n  };\n\n  renderRow = (data: RecipeRowData, index: number): React.ReactNode => {\n    return (\n      <RecipeRow\n        key={data.recipe.name}\n        index={index}\n        data={data}\n        onUpdateRow={this.props.onUpdateRow}\n        onRemoveRow={this.props.onRemoveRow}\n      />\n    );\n  };\n\n  handleClickRename = (): void => {\n    const name = prompt('Whatcha wanna call it now?', this.props.group.name);\n    if (name) {\n      this.props.onRenameGroup(name);\n    }\n  };\n\n  handleClickClone = (): void => {\n    const name = prompt(\n      'Whatcha wanna call it now?',\n      `${this.props.group.name} (Clone)`\n    );\n    if (name) {\n      this.props.onCloneGroup(name);\n    }\n  };\n\n  handleClickDelete = (): void => {\n    if (this.props.group.rows.length) {\n      if (\n        !window.confirm(\n          `Are you sure you want to delete ${this.props.group.name}`\n        )\n      ) {\n        return;\n      }\n    }\n    this.props.onRemoveGroup();\n  };\n\n  render(): React.ReactNode {\n    const gd = this.props.gameData;\n    const availableRecipes = gd.recipes.filter((recipe) => {\n      return !this.props.group.rows.some((row) => row.recipe === recipe);\n    });\n\n    return (\n      <div className={styles.RecipeGroup}>\n        <div className=\"clearfix\">\n          <h3 className=\"float-left\">{this.props.group.name}</h3>\n          <div className=\"float-right\">\n            <div className=\"button-group\">\n              <button className=\"btn btn-info\" onClick={this.handleClickRename}>\n                Rename\n              </button>\n              <button className=\"btn btn-info\" onClick={this.handleClickClone}>\n                Clone\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={this.handleClickDelete}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n        <RecipePicker\n          recipes={availableRecipes}\n          onPickRecipe={this.props.onAddRow}\n        />\n        <hr />\n\n        <DragDropContext onDragEnd={this.handleDragEnd}>\n          <Droppable droppableId={'eyy'}>\n            {(provided) => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {this.props.group.rows.map(this.renderRow)}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        <hr />\n        <TotalCard rows={this.props.group.rows} />\n      </div>\n    );\n  }\n}\n\ninterface RecipeGroupProps {\n  groupAtom: GroupAtom;\n  onRemoveGroup(groupAtom: GroupAtom): void;\n}\nexport const RecipeGroup: React.FC<RecipeGroupProps> = ({\n  groupAtom,\n  onRemoveGroup,\n}) => {\n  const [group, setGroup] = useRecoilState(groupAtom);\n  const settings = useRecoilValue(settingsAtom);\n  const gameData = useGameData();\n  const addGroup = useGroupAdd();\n\n  const handleRenameGroup = useCallback(\n    (newName: string) => {\n      setGroup((oldGroup) => ({\n        ...oldGroup,\n        name: newName,\n      }));\n    },\n    [setGroup]\n  );\n\n  const handleCloneGroup = useCallback(\n    (newName: string) => {\n      addGroup({\n        ...group,\n        name: newName,\n      });\n    },\n    [addGroup, group]\n  );\n\n  const handleRemoveGroup = useCallback(() => {\n    onRemoveGroup(groupAtom);\n  }, [onRemoveGroup, groupAtom]);\n\n  const handleMoveRow = useCallback(\n    (oldIndex: number, newIndex: number) => {\n      const rows = Array.from(group.rows);\n      const [removed] = rows.splice(oldIndex, 1);\n      assert(removed, `Nothing at old index: ${oldIndex}`);\n      rows.splice(newIndex, 0, removed);\n\n      setGroup((oldGroup) => ({\n        ...oldGroup,\n        rows,\n      }));\n    },\n    [group, setGroup]\n  );\n\n  const handleAddRow = useCallback(\n    (recipe: game.Recipe) => {\n      setGroup((group) => {\n        // only allow one instance of a recipe per group\n        if (group.rows.find((row) => row.recipe.name === recipe.name)) {\n          return group;\n        }\n\n        return {\n          ...group,\n          rows: [\n            ...group.rows,\n            {\n              recipe: recipe,\n              machine: su.getDefaultMachine(recipe, settings, gameData),\n              numMachines: Rational.one,\n              modules: [],\n              beaconModule: null,\n              numBeacons: 0,\n            },\n          ],\n        };\n      });\n    },\n    [settings, gameData, setGroup]\n  );\n\n  const handleUpdateRow = useCallback(\n    (data: RecipeRowData) => {\n      setGroup((group) => ({\n        ...group,\n        rows: group.rows.map((r) => (r.recipe === data.recipe ? data : r)),\n      }));\n    },\n    [setGroup]\n  );\n\n  const handleRemoveRow = useCallback(\n    (recipe: game.Recipe) => {\n      setGroup((group) => ({\n        ...group,\n        rows: group.rows.filter((r) => r.recipe !== recipe),\n      }));\n    },\n    [setGroup]\n  );\n\n  return (\n    <RawRecipeGroup\n      group={group}\n      gameData={gameData}\n      onRenameGroup={handleRenameGroup}\n      onCloneGroup={handleCloneGroup}\n      onRemoveGroup={handleRemoveGroup}\n      onAddRow={handleAddRow}\n      onMoveRow={handleMoveRow}\n      onUpdateRow={handleUpdateRow}\n      onRemoveRow={handleRemoveRow}\n    />\n  );\n};\n","import React, { useCallback, useMemo } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport * as game from '../game';\n\nimport { settingsAtom, useGameData } from '../atoms';\nimport { AppSettingsData } from '../state';\nimport { getDefaultMachine } from '../stateutil';\n\nimport { MachinePicker } from './MachinePicker';\n\nexport const Settings: React.FC<{}> = () => {\n  const gameData = useGameData();\n  const [settings, setSettings] = useRecoilState(settingsAtom);\n\n  const handleSetDefaultMachine = useCallback(\n    (category: string, machine: game.AssemblingMachine) => {\n      setSettings((settings) => ({\n        ...settings,\n        assemblerOverrides: {\n          ...settings.assemblerOverrides,\n          [category]: machine,\n        },\n      }));\n    },\n    [setSettings]\n  );\n\n  const categoryNames: string[] = useMemo(() => {\n    const names = Object.entries(gameData.categoryMap)\n      .filter((entry) => entry[1].length > 1)\n      .map((entry) => entry[0]);\n\n    names.sort((a, b) => a.localeCompare(b));\n    return names;\n  }, [gameData]);\n\n  return (\n    <div>\n      <h3>Default Assemblers</h3>\n      {categoryNames.map((name) => (\n        <CategoryRow\n          gameData={gameData}\n          settings={settings}\n          key={name}\n          category={name}\n          onSetDefaultMachine={handleSetDefaultMachine}\n        />\n      ))}\n    </div>\n  );\n};\n\ninterface CategoryRowProps {\n  category: string;\n  gameData: game.GameData;\n  settings: AppSettingsData;\n  onSetDefaultMachine(category: string, machine: game.AssemblingMachine): void;\n}\n\nclass CategoryRow extends React.PureComponent<CategoryRowProps, never> {\n  handleChange = (machine: game.AssemblingMachine): void => {\n    this.props.onSetDefaultMachine(this.props.category, machine);\n  };\n\n  render(): React.ReactNode {\n    const machines = this.props.gameData.categoryMap[this.props.category] || [];\n    const selected = getDefaultMachine(\n      this.props.category,\n      this.props.settings,\n      this.props.gameData\n    );\n    return (\n      <div className=\"btn-toolbar mb-3\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">{this.props.category}</span>\n          </div>\n          <div className=\"input-group-append btn-icon-wrapper\">\n            <MachinePicker\n              machines={machines}\n              selected={selected}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useRecoilValue, useSetRecoilState, RecoilState } from 'recoil';\n\nimport { RecipeGroup } from './RecipeGroup';\nimport { Settings } from './Settings';\n\nimport { useGroupAdd, AddGroupAction } from '../actions';\nimport { groupAtomsAtom, groupsState, GroupAtom } from '../atoms';\nimport { RecipeGroupData } from '../state';\nimport { GameData } from '../game';\nimport { assert, assertNever } from '../util';\n\nimport styles from './App.module.css';\n\ninterface Props {\n  gameData: GameData;\n  groups: [RecipeGroupData, GroupAtom][];\n  onAddGroup: AddGroupAction;\n  onRemoveGroupAtom(groupAtom: GroupAtom): void;\n}\n\ninterface State {\n  activePage: 'settings' | GroupAtom;\n}\n\nclass RawApp extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    let activePage: State['activePage'] = 'settings';\n    for (const x of this.props.groups) {\n      activePage = x[1];\n      break;\n    }\n\n    this.state = { activePage };\n  }\n\n  componentDidMount(): void {\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n  componentWillUnmount(): void {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (event.key === 'Shift') {\n      document.body.classList.add('shift-down');\n    }\n  };\n  handleKeyUp = (event: KeyboardEvent): void => {\n    if (event.key === 'Shift') {\n      document.body.classList.remove('shift-down');\n    }\n  };\n\n  handleClickGroup = (groupAtom: GroupAtom): void => {\n    this.setState({\n      activePage: groupAtom,\n    });\n  };\n\n  handleClickAddGroup = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    event.preventDefault();\n    const defaultName = `Factory ${this.props.groups.length + 1}`;\n    const name = prompt('What do you want to name this group?', defaultName);\n    if (!name || !name.trim()) {\n      return;\n    }\n    this.props.onAddGroup({ name, rows: [] });\n  };\n\n  handleRemoveGroupAtom = (groupAtom: GroupAtom): void => {\n    if (this.state.activePage === groupAtom) {\n      let changed = false;\n      for (const xy of this.props.groups) {\n        if (xy[1] !== groupAtom) {\n          this.setState({\n            activePage: xy[1],\n          });\n          changed = true;\n          break;\n        }\n      }\n      if (!changed) {\n        this.setState({\n          activePage: 'settings',\n        });\n      }\n    }\n    this.props.onRemoveGroupAtom(groupAtom);\n  };\n\n  handleClickSettings = (): void => {\n    this.setState({\n      activePage: 'settings',\n    });\n  };\n\n  renderNavbar(): React.ReactNode {\n    const settingsActive = this.state.activePage === 'settings';\n\n    const factoryPills = this.props.groups.map(([group, groupAtom], i) => {\n      const active = this.state.activePage === groupAtom;\n      return (\n        <button\n          key={i}\n          type=\"button\"\n          className={`list-group-item list-group-item-action ${\n            active ? 'active' : ''\n          }`}\n          onClick={() => this.handleClickGroup(groupAtom)}\n        >\n          {group.name}\n        </button>\n      );\n    });\n\n    return (\n      <>\n        <ul className=\"list-group mt-3\">\n          <li className=\"list-group-item\">\n            <span role=\"img\" aria-label=\"Factory icon\">\n              🏭\n            </span>{' '}\n            Factories\n          </li>\n\n          {factoryPills}\n\n          <button\n            type=\"button\"\n            className=\"list-group-item list-group-item-action\"\n            onClick={this.handleClickAddGroup}\n          >\n            <span role=\"img\" aria-label=\"Factory icon\">\n              ＋\n            </span>{' '}\n            Add a Factory\n          </button>\n        </ul>\n\n        <ul className=\"list-group mt-3\">\n          <button\n            type=\"button\"\n            className={`list-group-item list-group-item-action ${\n              settingsActive ? 'active' : ''\n            }`}\n            onClick={this.handleClickSettings}\n          >\n            <span role=\"img\" aria-label=\"Gear icon\">\n              ⚙️\n            </span>{' '}\n            Settings\n          </button>\n        </ul>\n      </>\n    );\n  }\n\n  renderBody(): React.ReactNode {\n    if (this.state.activePage === 'settings') {\n      return <Settings />;\n    } else if (this.state.activePage) {\n      return (\n        <RecipeGroup\n          groupAtom={this.state.activePage}\n          onRemoveGroup={this.handleRemoveGroupAtom}\n        />\n      );\n    } else {\n      return assertNever(this.state.activePage);\n    }\n  }\n\n  render(): React.ReactNode {\n    assert(this.props.gameData, 'falsy gameData, should never happen');\n\n    return (\n      <>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className={classNames('col col-2 bg-primary', styles.Sidebar)}>\n              {this.renderNavbar()}\n            </div>\n            <div className=\"col pt-3\">{this.renderBody()}</div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const App: React.FC<{\n  gameData: GameData;\n}> = ({ gameData }) => {\n  const groups = useRecoilValue(groupsState);\n\n  const setGroupAtoms = useSetRecoilState(groupAtomsAtom);\n\n  const handleAddGroup = useGroupAdd();\n\n  const handleRemoveGroupAtom = useCallback(\n    (groupAtom: RecoilState<RecipeGroupData>) => {\n      setGroupAtoms((atoms) => atoms.filter((a) => a !== groupAtom));\n    },\n    [setGroupAtoms]\n  );\n\n  return (\n    <RawApp\n      gameData={gameData}\n      groups={groups}\n      onAddGroup={handleAddGroup}\n      onRemoveGroupAtom={handleRemoveGroupAtom}\n    />\n  );\n};\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { atom, useRecoilValue, useSetRecoilState } from 'recoil';\n\nimport * as game from '../game';\nimport { groupsState, groupAtomsAtom, settingsAtom } from '../atoms';\nimport { CompleteState, RecipeGroupData } from '../state';\nimport * as serialization from '../serialization';\n\nimport { error } from '../notifications';\n\nimport { App } from './App';\n\ninterface RawAppLoaderProps {\n  gameData: game.GameData;\n  onSetPreviousState(state: CompleteState): void;\n}\n\ninterface State {\n  loaded: boolean;\n}\n\nclass RawAppLoader extends React.PureComponent<RawAppLoaderProps, State> {\n  state: State = {\n    loaded: false,\n  };\n\n  componentDidMount(): void {\n    this.load().then(\n      () => {\n        this.setState({ loaded: true });\n      },\n      (err) => {\n        this.setState(() => {\n          throw err;\n        });\n      }\n    );\n  }\n\n  getPreviousState(): CompleteState | undefined {\n    let urlState: CompleteState | null = null;\n    try {\n      urlState = serialization.getUrlState(this.props.gameData);\n    } catch (err: unknown) {\n      error(\n        <>\n          <b>Error loading from URL</b>\n          <br />\n          <pre>{String(err)}</pre>\n        </>\n      );\n      console.error('error loading from url', err);\n    }\n    if (urlState) return urlState;\n\n    try {\n      const storageState = serialization.getLocalStorageState(\n        this.props.gameData\n      );\n      if (storageState) return storageState;\n    } catch (err: unknown) {\n      console.error('Failed to load local storage state', err);\n    }\n  }\n\n  async load(): Promise<void> {\n    const previousState = this.getPreviousState();\n    if (!previousState) return;\n\n    this.props.onSetPreviousState(previousState);\n  }\n\n  render(): React.ReactNode {\n    if (!this.state.loaded) {\n      return <h1>Loading...</h1>;\n    }\n    const sheet = `${process.env.PUBLIC_URL}/assets/sprite-sheet-${this.props.gameData.spriteHash}.png`;\n    const style = `\n        .game-icon {\n            background-image: url(${sheet});\n        }\n        `;\n    return (\n      <>\n        <StateWriter gameData={this.props.gameData} />\n        <Prefetch href={sheet} />\n        <style>{style}</style>\n        <App gameData={this.props.gameData} />\n      </>\n    );\n  }\n}\n\nconst StateWriter: React.FC<{ gameData: game.GameData }> = ({ gameData }) => {\n  const groups = useRecoilValue(groupsState);\n  const settings = useRecoilValue(settingsAtom);\n  const initialRender = useRef(true);\n\n  useEffect(() => {\n    // don't waste time re-writing state from the initial render\n    if (initialRender.current) {\n      initialRender.current = false;\n      return;\n    }\n    const completeState: CompleteState = {\n      groups: groups.map((g) => g[0]),\n      settings: settings,\n    };\n    serialization.setUrlState(completeState, gameData);\n    serialization.setLocalStorageState(completeState, gameData);\n  }, [gameData, groups, settings]);\n\n  return null;\n};\n\nconst Prefetch: React.FC<{ href: string }> = (props) => {\n  return ReactDOM.createPortal(\n    <link rel=\"prefetch\" href={props.href} />,\n    document.head\n  );\n};\n\ninterface AppLoaderProps {\n  gameData: game.GameData;\n}\n\nexport const AppLoader: React.FC<AppLoaderProps> = ({ gameData }) => {\n  const setGroupAtoms = useSetRecoilState(groupAtomsAtom);\n  const setSettings = useSetRecoilState(settingsAtom);\n\n  const handleSetPreviousState = useCallback(\n    (state: CompleteState) => {\n      let i = 0;\n      setGroupAtoms(\n        state.groups.map((group) => {\n          return atom<RecipeGroupData>({\n            key: `group-${Date.now()}-${i++}`,\n            default: group,\n          });\n        })\n      );\n      setSettings(state.settings);\n    },\n    [setGroupAtoms, setSettings]\n  );\n\n  return (\n    <RawAppLoader\n      gameData={gameData}\n      onSetPreviousState={handleSetPreviousState}\n    />\n  );\n};\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport usePromise from 'react-use-promise';\n\nimport { gameDataAtom } from '../atoms';\n\nimport { GameData } from '../game';\n\ninterface Props {\n  child(gameData: GameData): React.ReactElement;\n}\n\nconst datasets = {\n  'kras-18': 'Krastorio2 for 1.0.0',\n  'seablock-17': 'Seablock for 0.17',\n} as const;\n\nasync function loadGameData(\n  filename: keyof typeof datasets\n): Promise<GameData> {\n  const response = await fetch(\n    `${process.env.PUBLIC_URL}/assets/${filename}.json`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(\n      `Could not load game data, got HTTP status ${response.status}`\n    );\n  }\n\n  let parsed;\n  try {\n    parsed = await response.json();\n  } catch (err) {\n    throw new Error(`Could not parse game data: ${err}`);\n  }\n  const gameData = new GameData(parsed);\n  return gameData;\n}\n\nexport const GameDataLoader: React.FC<Props> = ({ child }) => {\n  const setGameState = useRecoilState(gameDataAtom)[1];\n\n  const [gameData, error, status] = usePromise<GameData | null>(async () => {\n    const gameData = await loadGameData('kras-18');\n    setGameState(gameData);\n    return gameData;\n  }, []);\n\n  if (status === 'pending') {\n    return <h3>Loading game data...</h3>;\n  } else if (status === 'rejected') {\n    return (\n      <div>\n        <h3>Error loading game data!</h3>\n        <pre>{String(error)}</pre>\n      </div>\n    );\n  } else if (gameData) {\n    return child(gameData);\n  } else {\n    throw new Error('Somehow missing gamedata');\n  }\n};\n\nexport default GameDataLoader;\n","import React, { useEffect } from 'react';\n\nimport { useRelativeTime } from '../util';\n\ninterface Props {\n  title: string;\n  when: Date;\n  onClose(): void;\n}\n\nconst AUTOHIDE_DELAY = 5000;\n\nexport const Toast: React.FC<Props> = ({ title, when, onClose, children }) => {\n  useEffect(() => {\n    const tId = setTimeout(() => {\n      onClose();\n    }, AUTOHIDE_DELAY);\n\n    return () => {\n      clearTimeout(tId);\n    };\n  }, [title, when, onClose, children]);\n\n  const reltime = useRelativeTime(when);\n\n  return (\n    <div\n      className=\"toast fade show\"\n      role=\"alert\"\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n    >\n      <div className=\"toast-header\">\n        <strong className=\"mr-auto\">{title}</strong>\n        <small>{reltime}</small>\n        <button\n          type=\"button\"\n          className=\"ml-2 mb-1 close\"\n          data-dismiss=\"toast\"\n          aria-label=\"Close\"\n          onClick={onClose}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"toast-body\">{children}</div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { newNotification, Notification } from '../notifications';\n\nimport { Toast } from './Toast';\n\nimport styles from './ToastPortal.module.css';\n\ninterface ShownToast extends Notification {\n  key: number;\n  handleClose(): void;\n}\n\ninterface Props {}\n\ninterface State {\n  toasts: ShownToast[];\n}\n\nlet nextKey = 0;\n\nexport class ToastPortal extends React.Component<Props, State> {\n  state: State = {\n    toasts: [],\n  };\n\n  componentDidMount(): void {\n    newNotification.addHandler(this.handleNotification);\n  }\n\n  componentWillUnmount(): void {\n    newNotification.removeHandler(this.handleNotification);\n  }\n\n  handleNotification = (notification: Notification): void => {\n    const toastPortal = this;\n    const toast: ShownToast = {\n      ...notification,\n      key: nextKey++,\n      handleClose() {\n        toastPortal.setState(\n          (state): State => {\n            return {\n              ...state,\n              toasts: state.toasts.filter((n) => n.key !== toast.key),\n            };\n          }\n        );\n      },\n    };\n    this.setState(\n      (state): State => {\n        return {\n          ...state,\n          toasts: [...state.toasts, toast],\n        };\n      }\n    );\n  };\n\n  renderToast = (toast: ShownToast): React.ReactNode => {\n    return (\n      <Toast\n        key={toast.key}\n        title={toast.title}\n        when={toast.when}\n        onClose={toast.handleClose}\n      >\n        {toast.body}\n      </Toast>\n    );\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div aria-live=\"polite\" aria-atomic=\"true\" className={styles.ToastPortal}>\n        {this.state.toasts.map(this.renderToast)}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\n\nimport { ErrorCatcher } from './components/ErrorCatcher';\nimport { AppLoader } from './components/AppLoader';\nimport { GameDataLoader } from './components/GameDataLoader';\nimport { ToastPortal } from './components/ToastPortal';\n\nimport './index.css';\n\nReactDOM.render(\n  <ErrorCatcher>\n    <RecoilRoot>\n      <GameDataLoader child={(gameData) => <AppLoader gameData={gameData} />} />\n      <ToastPortal />\n    </RecoilRoot>\n  </ErrorCatcher>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}