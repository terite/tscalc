{"version":3,"sources":["components/Icon.module.css","components/RecipePicker.module.css","components/ErrorCatcher.module.css","components/RecipePart.module.css","components/RecipeRow.module.css","components/TotalCard.module.css","components/RecipeGroup.module.css","components/App.module.css","components/ErrorCatcher.tsx","atoms.ts","util.ts","rational.ts","game.ts","stateutil.ts","serialization.ts","signal.ts","totals.ts","components/generic/Dropdown.tsx","components/generic/Tooltip.tsx","components/generic/IntegerInput.tsx","components/generic/RationalInput.tsx","components/Icon.tsx","components/IngredientCard.tsx","components/RecipePart.tsx","components/MachineCard.tsx","components/RecipeCard.tsx","components/MachinePicker.tsx","components/ModuleCard.tsx","components/ModulePicker.tsx","components/RecipeRow.tsx","components/RecipePicker.tsx","components/TotalCard.tsx","components/RecipeGroup.tsx","components/Settings.tsx","actions.ts","components/App.tsx","components/AppLoader.tsx","components/GameDataLoader.tsx","index.tsx"],"names":["module","exports","ErrorCatcher","state","crashMsg","undefined","nextProps","nextState","this","error","errorInfo","setState","componentStack","stack","join","className","styles","crashed","props","children","React","Component","gameDataAtom","atom","key","default","useGameData","gameData","useRecoilValue","Error","recipeTargetAtom","groupAtomsAtom","groupsState","selector","get","map","groupAtom","settingsAtom","assemblerOverrides","assert","condition","message","mapValues","obj","fn","ret","Object","entries","value","clone","orig","assign","create","getPrototypeOf","round2","num","places","mag","Math","pow","round","format_magnitude","amount","suffixes","i","length","debounce","ms","pendingId","debounced","args","clearTimeout","setTimeout","defineProperty","num_gcd","a","b","num_divmod","Number","isSafeInteger","quotient","floor","remainder","FLOAT_CONVERT_PRECISION","Rational","p","q","div","divmod","result","less","zero","sub","one","other","fromFloat","min","max","mul","toFraction","toString","maxDigits","roundingFactor","sign","x","isNegative","negate","add","integerPart","decimalPart","fraction","ten","equal","slice","isZero","parts","push","isInteger","r","lookups","str","sum","split","part","trim","index","indexOf","fromInts","oneThird","twoThirds","rounded","floored","BaseDisplayable","data","name","localisedName","iconCol","iconRow","localised_name","icon_col","icon_row","en","Item","d","group","subgroup","order","fuelValue","usedBy","madeBy","fuel_value","Module","type","limitedTo","effects","Set","limitation","speed","effect","bonus","productivity","consumption","pollution","recipe","size","has","Fluid","defaultTemperature","default_temperature","Ingredient","gd","item","getItem","toDecimal","niceName","FluidIngredient","minimumTemperature","maximumTemperature","getFluid","minimum_temperature","Infinity","maximum_temperature","range","Product","amount_min","amount_max","probability","ingredient","FluidProduct","temperature","temp","Recipe","category","ingredients","products","craftingTime","madeIn","energy_required","results","product","AssemblingMachine","craftingCategories","craftingSpeed","moduleSlots","crafting_categories","crafting_speed","module_slots","GameData","raw","itemMap","Map","fluids","fluidMap","modules","moduleMap","recipes","recipeMap","entityMap","categoryMap","groups","clockSprite","noModuleModule","spriteHash","sprites","hash","values","edata","entity","set","rawMiningDrill","rawMachine","resource_categories","mining_speed","ingredient_count","machine","items","rawItem","fluid","rawRecipe","resource","rawResource","minable","fluid_amount","required_fluid","mining_time","canBuildRecipe","some","isPositive","console","warn","entities","catMap","machines","createCategoryMap","extra","noModuleIcon","rocket_launch_products","groupOrder","subgroupOrder","subgroups","collection","keyFn","sort","ordersA","getItemOrder","ordersB","valA","valB","getDefaultMachine","input","settings","defaultMachine","game","groupv4to5","rows","serialize","version","row","machineName","numMachines","m","beaconModule","numBeacons","reStateUrl","migrateSerializedState","state1to2","state2to3","state3to4","state4to5","deserialize","unmigrated","migrated","deserializeSettings","recipeName","getRecipe","getEntity","fromString","n","getModule","serialized","Signal","handlers","dispatch","arg","handler","splice","addIngredientFilter","addProductFilter","addRecipeRow","Totals","addRow","newIngredient","oldIng","oldProd","satisfies","filter","newProduct","be","clamp","ingredientMult","invert","productMult","addIngredient","addProduct","Dropdown","buttonRef","isOpen","handleClick","e","getCanToggle","stopPropagation","handleSelect","selected","onSelect","handleWantClose","options","option","disabled","floater","classes","parentRef","renderOption","onWantClose","ref","onClick","renderSelected","DropdownMenu","popperInstance","menuRef","style","popperUpdate","handleBodyClick","event","current","target","contains","handleKeyEvent","keyCode","renderOptions","header","active","referenceEl","menuEl","Popper","modifiers","applyStyle","enabled","updateStateWithStyle","document","body","addEventListener","disableEventListeners","removeEventListener","ontop","zIndex","Tooltip","selfRef","handleMouseEnter","showSelf","handleMouseLeave","oldProps","oldState","relativeTo","content","selfEl","placement","offset","preventOverflow","boundariesElement","_","prevState","initPopper","cleanupPopper","ReactDOM","IntegerInput","handleChange","txtValue","isNaN","onChange","step","RationalInput","errmsg","parsed","stringToRational","err","positiveOnly","rationalToString","classNames","lastIndexOf","rational","dec","toFloat","toMixed","Icon","iconRef","createRef","y","divStyle","backgroundPosition","icon","title","tooltip","text","IconTextWrapper","IconText","PureComponent","IngredientCard","fuelValues","totalValue","RecipePart","showName","useRecoilState","recipeTarget","setRecipeTarget","useCallback","shiftKey","preventDefault","signal","includes","perSecond","copySource","MachineCard","RecipeCard","MachinePicker","formatBonus","ModuleCard","ModulePicker","isBeacon","canUseWith","unshift","RawRecipeRow","handleRemoveRow","onRemoveRow","handleMachineChange","applyChange","handleNumMachinesChange","handleNumBeaconsChange","handleSetAllModules","Array","fill","handleSetModule","handleSetBeaconModule","handleInputGroupClick","output","find","newNum","change","onUpdateRow","t","numSlots","slots","getOutput","draggableId","provided","RecipeRow","innerRef","draggableProps","dragHandleProps","renderMachines","role","renderModules","renderBeacons","display","float","minWidth","getFn","path","RE_ADVANCED","RecipePicker","inputRef","query","matches","handleIngredientClick","term","setQuery","calculateMatches","scrollIntoView","handleProductClick","handleQueryInput","handleRecipeClick","onPickRecipe","callback","debCalculateMatches","cancel","bind","addHandler","removeHandler","toLowerCase","conditions","consumes","produces","replace","Fuse","shouldSort","keys","weight","search","placeholder","renderMatches","RecipeMatch","handleClickAdd","ing","prod","ResultName","TotalCard","totals","useMemo","sortByItem","RawRecipeGroup","handleDragEnd","destination","source","onMoveRow","renderRow","handleClickRename","prompt","onRenameGroup","handleClickClone","onCloneGroup","handleClickDelete","window","confirm","onRemoveGroup","onAddRow","availableRecipes","RecipeGroup","onDragEnd","droppableId","droppableProps","setGroup","handleRenameGroup","newName","oldGroup","handleCloneGroup","alert","handleRemoveGroup","handleMoveRow","oldIndex","newIndex","from","removed","handleAddRow","su","handleUpdateRow","Settings","setSettings","handleSetDefaultMachine","categoryNames","names","entry","localeCompare","onSetDefaultMachine","CategoryRow","groupId","RawApp","activePage","handleKeyDown","classList","handleKeyUp","remove","handleClickGroup","handleClickAddGroup","defaultName","onAddGroup","handleRemoveGroupAtom","xy","onRemoveGroupAtom","handleClickSettings","settingsActive","factoryPills","aria-label","assertNever","Sidebar","renderNavbar","renderBody","App","setGroupAtoms","useSetRecoilState","handleAddGroup","atoms","useGroupAdd","RawAppLoader","loaded","load","then","urlState","exec","location","decodeURIComponent","inflate","atob","to","JSON","parse","serialization","storageState","statestr","localStorage","stateobj","previousState","getPreviousState","onSetPreviousState","sheet","process","href","StateWriter","initialRender","useRef","useEffect","completeState","g","stringify","btoa","deflate","history","replaceState","setItem","Prefetch","rel","head","AppLoader","handleSetPreviousState","Date","now","loadGameData","filename","fetch","response","status","json","GameDataLoader","child","setGameState","usePromise","String","getElementById"],"mappings":"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","file":"static/js/main.5ea4ce20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"Icon_Icon__377W-\",\"IconTextWrapper\":\"Icon_IconTextWrapper__Nb7R3\",\"IconText\":\"Icon_IconText__KjO-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipePicker\":\"RecipePicker_RecipePicker__3sU3V\",\"ResultName\":\"RecipePicker_ResultName__jSE56\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"crashed\":\"ErrorCatcher_crashed__3tour\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipePart\":\"RecipePart_RecipePart__3J39l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipeRow\":\"RecipeRow_RecipeRow__3swT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TotalCard\":\"TotalCard_TotalCard__2ci0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecipeGroup\":\"RecipeGroup_RecipeGroup__3MC_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"App_Sidebar__3POeR\"};","import React from 'react';\n\nimport styles from './ErrorCatcher.module.css';\n\ninterface Props {}\n\ninterface State {\n  crashMsg: string | undefined;\n}\n\nexport class ErrorCatcher extends React.Component<Props, State> {\n  state: State = {\n    crashMsg: undefined,\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State): boolean {\n    return nextState.crashMsg !== this.state.crashMsg;\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      crashMsg: [\n        'Component Stack:',\n        errorInfo.componentStack,\n        '',\n        error && error.stack,\n      ].join('\\n'),\n    });\n  }\n\n  render(): React.ReactNode {\n    if (this.state.crashMsg) {\n      return (\n        <div className={styles.crashed}>\n          <h1>Crashed!</h1>\n          <pre>{this.state.crashMsg}</pre>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { atom, selector, useRecoilValue, RecoilState } from 'recoil';\nimport type { AppSettingsData, RecipeGroupData } from './state';\nimport type { GameData, Fluid, Item } from './game';\nimport type { Rational } from './rational';\n\n//\n// GameData\n//\nexport const gameDataAtom = atom<GameData | null>({\n  key: 'gameData',\n\n  // set early by apploader\n  default: null,\n});\n\nexport const useGameData = (): GameData => {\n  const gameData = useRecoilValue(gameDataAtom);\n  if (!gameData) {\n    throw new Error('useGameData called without gameData available');\n  }\n  return gameData;\n};\n\n//\n// RecipeTarget\n//\nexport interface RecipeTarget {\n  item: Item | Fluid;\n  amount: Rational;\n}\n\nexport const recipeTargetAtom = atom<RecipeTarget | undefined>({\n  key: 'recipeTarget',\n  default: undefined,\n});\n\n//\n// Groups\n//\nexport type GroupAtom = RecoilState<RecipeGroupData>;\nexport const groupAtomsAtom = atom<GroupAtom[]>({\n  key: 'groupAtoms',\n  default: [],\n});\n\nexport const groupsState = selector<[RecipeGroupData, GroupAtom][]>({\n  key: 'groupsState',\n  get: ({ get }) => {\n    const groupAtoms = get(groupAtomsAtom);\n    return groupAtoms.map((groupAtom) => [get(groupAtom), groupAtom]);\n  },\n});\n\n//\n// Settings\n//\nexport const settingsAtom = atom<AppSettingsData>({\n  key: 'settings',\n  default: {\n    assemblerOverrides: {},\n  },\n});\n","export function assert(condition: any, message?: string): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nexport function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x);\n}\n\nexport function mapValues<T, V>(\n  obj: { [s: string]: T },\n  fn: (v: T) => V\n): { [s: string]: V } {\n  let ret: { [key: string]: V } = {};\n  for (const [key, value] of Object.entries(obj)) {\n    ret[key] = fn(value);\n  }\n  return ret;\n}\n\nexport function clone<T>(orig: T): T {\n  return Object.assign(Object.create(Object.getPrototypeOf(orig)), orig);\n}\n\nexport function round2(num: number, places: number): number {\n  const mag = Math.pow(10, places);\n  return Math.round(num * mag) / mag;\n}\n\nexport function format_magnitude(amount: number, suffixes: string[]): string {\n  let i = 0;\n  for (; i < suffixes.length; i++) {\n    if (amount >= 1000) {\n      amount = amount / 1000;\n    } else {\n      break;\n    }\n  }\n\n  return `${round2(amount, 2)} ${suffixes[i]}`;\n}\n\nexport function format_watts(watts: number): string {\n  return format_magnitude(watts, ['W', 'kW', 'MW', 'GW', 'TW', 'PW']);\n}\n\nexport function format_joules(joules: number): string {\n  return format_magnitude(joules, ['J', 'kJ', 'MJ', 'GJ', 'TJ', 'PJ']);\n}\n\ninterface Func<T extends any[]> {\n  (...args: T): void;\n}\n\ninterface DebouncedFunc<T extends any[]> extends Func<T> {\n  cancel(): void;\n}\n\nexport function debounce<T extends any[]>(\n  fn: Func<T>,\n  ms: number\n): DebouncedFunc<T> {\n  let pendingId: any; // TODO: number when node is removed\n\n  function debounced(...args: T): void {\n    if (pendingId !== undefined) {\n      clearTimeout(pendingId);\n    }\n    pendingId = setTimeout(() => {\n      pendingId = undefined;\n      fn(...args);\n    }, ms);\n  }\n\n  function cancel(): void {\n    if (pendingId !== undefined) {\n      clearTimeout(pendingId);\n      pendingId = undefined;\n    }\n  }\n\n  Object.defineProperty(debounced, 'cancel', {\n    value: cancel,\n  });\n\n  return debounced as DebouncedFunc<T>;\n}\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, ms));\n}\n","import { assert } from './util';\n\nfunction num_gcd(a: number, b: number): number {\n  return !b ? a : num_gcd(b, a % b);\n}\n\nfunction num_divmod(\n  a: number,\n  b: number\n): {\n  quotient: number;\n  remainder: number;\n} {\n  assert(Number.isSafeInteger(a));\n  assert(Number.isSafeInteger(b));\n\n  return {\n    quotient: Math.floor(a / b),\n    remainder: a % b,\n  };\n}\n\nconst FLOAT_CONVERT_PRECISION = 10000;\n\nexport class Rational {\n  readonly p: number;\n  readonly q: number;\n\n  constructor(p: number, q: number) {\n    assert(\n      Number.isSafeInteger(p),\n      `Numerator must be a safe integer, got ${p}`\n    );\n    assert(\n      Number.isSafeInteger(q),\n      `Denominator must be a safe integer, got ${q}`\n    );\n    assert(q !== 0, 'Denominator must not be zero');\n\n    if (q < 0) {\n      p = -p;\n      q = -q;\n    }\n\n    if (p === 0) {\n      q = 1;\n    }\n\n    const div = num_gcd(p, q);\n    if (div > 1) {\n      p = p / div;\n      q = q / div;\n    }\n    this.p = p;\n    this.q = q;\n  }\n\n  //\n  // Operations returning Rational\n  //\n  floor(): Rational {\n    const divmod = num_divmod(this.p, this.q);\n    let result = new Rational(divmod.quotient, 1);\n    if (result.less(Rational.zero) && divmod.remainder !== 0) {\n      result = result.sub(Rational.one);\n    }\n    return result;\n  }\n\n  negate(): Rational {\n    return new Rational(-this.p, this.q);\n  }\n\n  invert(): Rational {\n    return new Rational(this.q, this.p);\n  }\n\n  add(other: Rational): Rational {\n    return new Rational(this.p * other.q + this.q * other.p, this.q * other.q);\n  }\n\n  sub(other: Rational): Rational {\n    return new Rational(this.p * other.q - this.q * other.p, this.q * other.q);\n  }\n\n  mul(other: Rational | number): Rational {\n    if (typeof other == 'number') {\n      other = Rational.fromFloat(other);\n    }\n    return new Rational(this.p * other.p, this.q * other.q);\n  }\n\n  div(other: Rational): Rational {\n    return new Rational(this.p * other.q, this.q * other.p);\n  }\n\n  clamp(min: Rational | number, max: Rational | number): Rational {\n    if (typeof min == 'number') {\n      min = Rational.fromFloat(min);\n    }\n    if (typeof max == 'number') {\n      max = Rational.fromFloat(max);\n    }\n\n    if (this.less(min)) return min;\n    if (max.less(this)) return max;\n    return this;\n  }\n\n  //\n  // Operations NOT returning Rational\n  //\n  divmod(other: Rational): { quotient: Rational; remainder: Rational } {\n    var quotient = this.div(other);\n    var div = quotient.floor();\n    var mod = this.sub(other.mul(div));\n    return { quotient: div, remainder: mod };\n  }\n\n  equal(other: Rational): boolean {\n    return this.p === other.p && this.q === other.q;\n  }\n\n  isNegative(): boolean {\n    return this.p < 0;\n  }\n  isPositive(): boolean {\n    return this.p > 0;\n  }\n\n  isOne(): boolean {\n    return this.p === 1;\n  }\n\n  isZero(): boolean {\n    return this.p === 0;\n  }\n\n  less(other: Rational): boolean {\n    return this.p * other.q < this.q * other.p;\n  }\n\n  toFloat(): number {\n    return this.p / this.q;\n  }\n\n  toString(): string {\n    return this.toFraction();\n  }\n\n  toFraction(): string {\n    if (this.q === 1) {\n      return this.p.toString();\n    }\n    return this.p.toString() + '/' + this.q.toString();\n  }\n\n  toDecimal(maxDigits?: number, roundingFactor?: Rational): string {\n    if (maxDigits == null) {\n      maxDigits = 3;\n    }\n    if (roundingFactor == null) {\n      roundingFactor = new Rational(5, 10 ** (maxDigits + 1));\n    }\n\n    let sign = '';\n    let x: Rational = this;\n    if (x.isNegative()) {\n      sign = '-';\n      x = x.negate();\n    }\n    x = x.add(roundingFactor);\n    let divmod = num_divmod(x.p, x.q);\n    var integerPart = divmod.quotient.toString();\n    var decimalPart = '';\n    var fraction = new Rational(divmod.remainder, x.q);\n    let ten = new Rational(10, 1);\n    while (maxDigits > 0 && !fraction.equal(roundingFactor)) {\n      fraction = fraction.mul(ten);\n      roundingFactor = roundingFactor.mul(ten);\n      let divmod = num_divmod(fraction.p, fraction.q);\n      decimalPart += divmod.quotient.toString();\n      fraction = new Rational(divmod.remainder, fraction.q);\n      maxDigits--;\n    }\n    if (fraction.equal(roundingFactor)) {\n      while (decimalPart[decimalPart.length - 1] === '0') {\n        decimalPart = decimalPart.slice(0, decimalPart.length - 1);\n      }\n    }\n    if (decimalPart !== '') {\n      return sign + integerPart + '.' + decimalPart;\n    }\n    return sign + integerPart;\n  }\n\n  toMixed(): string {\n    if (this.isZero()) {\n      return '0';\n    }\n\n    const { quotient, remainder } = this.divmod(Rational.one);\n\n    let parts: string[] = [];\n    if (!quotient.isZero()) {\n      parts.push(quotient.toFraction());\n    }\n    if (!remainder.isZero()) {\n      parts.push(remainder.toFraction());\n    }\n\n    return parts.join(' + ');\n  }\n\n  //\n  // Statics\n  //\n  static fromFloat(num: number): Rational {\n    if (Number.isInteger(num)) {\n      return new this(num, 1);\n    }\n\n    // Sufficient precision for our data?\n    const r = new Rational(\n      Math.round(num * FLOAT_CONVERT_PRECISION),\n      FLOAT_CONVERT_PRECISION\n    );\n\n    const divmod = r.divmod(Rational.one);\n    for (const [key, value] of lookups) {\n      if (divmod.remainder.equal(key)) {\n        return divmod.quotient.add(value);\n      }\n    }\n\n    return r;\n  }\n  static fromInts(p: number, q: number): Rational {\n    return new this(p, q);\n  }\n\n  static fromString(str: string): Rational {\n    let sum = Rational.zero;\n\n    for (let part of str.split('+')) {\n      part = part.trim();\n      if (!part) continue;\n\n      const index = part.indexOf('/');\n      if (index === -1) {\n        sum = sum.add(Rational.fromFloat(Number(part)));\n      } else {\n        const p = Number(part.slice(0, index));\n        const q = Number(part.slice(index + 1));\n        sum = sum.add(Rational.fromInts(p, q));\n      }\n    }\n\n    return sum;\n  }\n\n  static zero = new Rational(0, 1);\n  static one = new Rational(1, 1);\n  static oneThird = new Rational(1, 3);\n  static twoThirds = new Rational(2, 3);\n}\n\nconst lookups: [Rational, Rational][] = [];\n\nfor (let q = 2; q < 100; q++) {\n  for (let p = 1; p < q; p++) {\n    const num = p / q;\n\n    // Is there a better way to quickly filter out non-repeating decimals?\n    if (num.toString().length < 10) {\n      continue;\n    }\n\n    // Support computer input, use proper rounding\n    const rounded = new Rational(\n      Math.round(num * FLOAT_CONVERT_PRECISION),\n      FLOAT_CONVERT_PRECISION\n    );\n    lookups.push([rounded, Rational.fromInts(p, q)]);\n\n    // Support human input, who just leave off the end after a while\n    const floored = new Rational(\n      Math.floor(num * FLOAT_CONVERT_PRECISION),\n      FLOAT_CONVERT_PRECISION\n    );\n    lookups.push([floored, Rational.fromInts(p, q)]);\n  }\n}\n","import { Rational } from './rational';\nimport { assert } from './util';\n\nimport * as schema from './schema';\n\ninterface IBaseDisplayable {\n  name: string;\n  localised_name: schema.LocalisedName;\n  icon_col: number;\n  icon_row: number;\n}\n\nexport class BaseDisplayable {\n  readonly name: string;\n  readonly localisedName: schema.LocalisedName;\n  readonly iconCol: number;\n  readonly iconRow: number;\n\n  constructor(data: IBaseDisplayable) {\n    this.name = data.name;\n    this.localisedName = data.localised_name;\n    this.iconCol = data.icon_col;\n    this.iconRow = data.icon_row;\n  }\n\n  get niceName(): string {\n    return this.localisedName.en;\n  }\n}\n\nexport class Item extends BaseDisplayable {\n  readonly group: string;\n  readonly subgroup: string;\n  readonly order: string;\n  readonly fuelValue: number | null;\n\n  readonly usedBy: Recipe[] = [];\n  readonly madeBy: Recipe[] = [];\n\n  constructor(d: schema.Item) {\n    super(d);\n\n    this.group = d.group;\n    this.subgroup = d.subgroup;\n    this.order = d.order;\n    this.fuelValue = d.fuel_value ?? null;\n  }\n}\n\nexport class Module extends Item {\n  readonly type: 'module';\n  readonly limitedTo: Set<string>;\n  readonly effects: {\n    speed: Rational;\n    productivity: Rational;\n    consumption: Rational;\n    pollution: Rational;\n  };\n\n  constructor(d: schema.ModuleItem) {\n    super(d);\n    this.type = d.type;\n    this.limitedTo = new Set(d.limitation);\n\n    this.effects = {\n      speed: Rational.fromFloat((d.effect.speed || { bonus: 0 }).bonus),\n      productivity: Rational.fromFloat(\n        (d.effect.productivity || { bonus: 0 }).bonus\n      ),\n      consumption: Rational.fromFloat(\n        (d.effect.consumption || { bonus: 0 }).bonus\n      ),\n      pollution: Rational.fromFloat((d.effect.pollution || { bonus: 0 }).bonus),\n    };\n  }\n\n  canUseWith(recipe: Recipe): boolean {\n    if (this.limitedTo.size === 0) {\n      return true;\n    }\n\n    return this.limitedTo.has(recipe.name);\n  }\n}\n\nexport class Fluid extends Item {\n  readonly defaultTemperature: number;\n  readonly type: 'fluid' = 'fluid';\n\n  constructor(d: schema.FluidItem) {\n    super(d);\n    this.defaultTemperature = d.default_temperature;\n  }\n}\n\nexport class Ingredient {\n  readonly type: 'item' | 'fluid';\n  readonly name: string;\n  amount: Rational; // TODO: readonly\n  readonly item: Item;\n\n  constructor(d: schema.Ingredient, gd: GameData) {\n    this.name = d.name;\n    this.amount = Rational.fromFloat(d.amount);\n    this.type = d.type ?? 'item';\n    this.item = gd.getItem(d.name);\n  }\n\n  get niceName(): string {\n    return `${this.amount.toDecimal()} × ${this.item.niceName}`;\n  }\n}\n\nexport class FluidIngredient extends Ingredient {\n  readonly type: 'fluid' = 'fluid';\n  readonly item: Fluid;\n  readonly minimumTemperature: number;\n  readonly maximumTemperature: number;\n\n  constructor(d: schema.Ingredient, gd: GameData) {\n    super(d, gd);\n    this.item = gd.getFluid(d.name);\n\n    this.minimumTemperature = d.minimum_temperature || -Infinity;\n    this.maximumTemperature = d.maximum_temperature || Infinity;\n\n    if (this.maximumTemperature >= 1.797e308) {\n      this.maximumTemperature = Infinity;\n    }\n    if (this.minimumTemperature <= -1.797e308) {\n      this.minimumTemperature = -Infinity;\n    }\n  }\n\n  get niceName(): string {\n    const min = this.minimumTemperature;\n    const max = this.maximumTemperature;\n    let range = '';\n    if (min !== -Infinity && max !== Infinity) {\n      range = ` (${min}° – ${max}°)`;\n    } else if (max !== Infinity) {\n      range = ` (≤ ${max}°)`;\n    } else if (min !== -Infinity) {\n      range = ` (≥ ${max}°)`;\n    }\n    return `${this.amount.toDecimal()} × ${this.item.niceName}${range}`;\n  }\n}\n\nexport class Product {\n  readonly name: string;\n  readonly item: Item;\n  amount: Rational;\n\n  constructor(d: schema.Product, gd: GameData) {\n    this.name = d.name;\n    this.item = gd.getItem(d.name);\n\n    let amount;\n    if ('amount' in d) {\n      amount = Rational.fromFloat(d.amount);\n    } else {\n      amount = Rational.fromInts(d.amount_min + d.amount_max, 2);\n    }\n\n    if (typeof d.probability == 'number') {\n      if (d.probability === 0) {\n        amount = Rational.zero;\n      } else if (d.probability !== 1) {\n        assert(d.probability > 0);\n        assert(d.probability < 1);\n        amount = amount.mul(Rational.fromFloat(d.probability));\n      }\n    }\n    this.amount = amount;\n  }\n\n  get niceName(): string {\n    return `${this.amount.toDecimal()} × ${this.item.niceName}`;\n  }\n\n  satisfies(ingredient: Ingredient): boolean {\n    return ingredient.item === this.item;\n  }\n}\n\nexport class FluidProduct extends Product {\n  readonly item: Fluid;\n  readonly temperature: number;\n\n  constructor(d: schema.Product, gd: GameData) {\n    super(d, gd);\n    this.item = gd.getFluid(d.name);\n    this.temperature = d.temperature || this.item.defaultTemperature;\n  }\n\n  get niceName(): string {\n    let temp = '';\n    if (this.temperature !== this.item.defaultTemperature) {\n      temp = ` (${this.temperature}°)`;\n    }\n    return `${this.amount.toDecimal()} × ${this.item.niceName}${temp}`;\n  }\n\n  satisfies(ingredient: Ingredient): boolean {\n    return (\n      ingredient.item === this.item &&\n      ingredient instanceof FluidIngredient &&\n      ingredient.maximumTemperature >= this.temperature &&\n      ingredient.minimumTemperature <= this.temperature\n    );\n  }\n}\n\nexport class Recipe extends BaseDisplayable {\n  readonly category: string;\n  readonly ingredients: Ingredient[];\n  readonly products: Product[];\n  readonly craftingTime: Rational;\n\n  readonly madeIn: AssemblingMachine[] = [];\n\n  constructor(d: schema.Recipe, gd: GameData) {\n    super(d);\n    this.category = d.category;\n    this.craftingTime = Rational.fromFloat(d.energy_required);\n\n    this.ingredients = d.ingredients.map((ingredient) => {\n      if (ingredient.type === 'fluid') {\n        return new FluidIngredient(ingredient, gd);\n      } else {\n        return new Ingredient(ingredient, gd);\n      }\n    });\n\n    this.products = d.results.map((result) => {\n      if (result.type === 'fluid') {\n        return new FluidProduct(result, gd);\n      } else {\n        return new Product(result, gd);\n      }\n    });\n  }\n\n  get niceName(): string {\n    if (this.products.length !== 1) {\n      return super.niceName;\n    }\n    const product = this.products[0];\n    assert(product, 'recipe has no products');\n    if (product.amount.equal(Rational.one)) {\n      return product.item.niceName;\n    } else {\n      return product.niceName;\n    }\n  }\n}\n\nexport abstract class BaseEntity extends BaseDisplayable {\n  // constructor exists to constrain type\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(data: schema.BaseEntity) {\n    super(data);\n  }\n}\n\nexport class AssemblingMachine extends BaseEntity {\n  readonly craftingCategories: string[];\n  readonly craftingSpeed: number;\n  readonly moduleSlots: number;\n\n  constructor(data: schema.AssemblingMachine) {\n    super(data);\n    this.craftingCategories = data.crafting_categories;\n    this.craftingSpeed = data.crafting_speed;\n    this.moduleSlots = data.module_slots;\n  }\n\n  canBuildRecipe(recipe: Recipe): boolean {\n    // TODO: this needs to account for entity fluid boxes\n    if (this.craftingCategories.indexOf(recipe.category) === -1) {\n      return false;\n    }\n\n    // ingredient_count seems to be item specific. this is disabled until\n    // I can figure out how many fluids a machine can support\n    // if (recipe.ingredients.length > this.data.ingredient_count) {\n    //     return false\n    // }\n    return true;\n  }\n}\n\nexport type Entity = AssemblingMachine;\n\ntype CategoryMap = { [category: string]: AssemblingMachine[] };\n\nconst createCategoryMap = (entities: Iterable<Entity>): CategoryMap => {\n  const catMap: CategoryMap = {};\n  for (const entity of entities) {\n    for (const category of entity.craftingCategories) {\n      const machines = catMap[category];\n      if (machines) {\n        machines.push(entity);\n      } else {\n        catMap[category] = [entity];\n      }\n    }\n  }\n  return catMap;\n};\n\nexport class GameData {\n  readonly itemMap = new Map<string, Item>();\n\n  readonly fluids: Fluid[] = [];\n  readonly fluidMap = new Map<string, Fluid>();\n\n  readonly modules: Module[] = [];\n  readonly moduleMap = new Map<string, Module>();\n\n  readonly recipes: Recipe[] = [];\n  readonly recipeMap = new Map<string, Recipe>();\n\n  readonly entityMap = new Map<string, Entity>();\n\n  readonly categoryMap: CategoryMap;\n  readonly groups: schema.Groups;\n\n  readonly clockSprite: BaseDisplayable;\n  readonly noModuleModule: Module;\n\n  readonly spriteHash: string;\n\n  constructor(raw: schema.Root) {\n    this.spriteHash = raw.sprites.hash;\n\n    for (const edata of Object.values(raw['assembling-machine'])) {\n      const entity = new AssemblingMachine(edata);\n      this.entityMap.set(entity.name, entity);\n    }\n\n    for (const edata of Object.values(raw['furnace'])) {\n      const entity = new AssemblingMachine(edata);\n      this.entityMap.set(entity.name, entity);\n    }\n\n    for (const edata of Object.values(raw['rocket-silo'])) {\n      const entity = new AssemblingMachine(edata);\n      this.entityMap.set(entity.name, entity);\n    }\n\n    for (const rawMiningDrill of Object.values(raw['mining-drill'])) {\n      const rawMachine: schema.AssemblingMachine = {\n        ...rawMiningDrill,\n        crafting_categories: rawMiningDrill.resource_categories.map(\n          (r) => 'resource-' + r\n        ),\n        crafting_speed: rawMiningDrill.mining_speed,\n        ingredient_count: 1,\n      };\n      const machine = new AssemblingMachine(rawMachine);\n      this.entityMap.set(rawMachine.name, machine);\n    }\n\n    for (const rawItem of Object.values(raw.items)) {\n      if ('type' in rawItem && rawItem.type === 'fluid') {\n        const fluid = new Fluid(rawItem);\n        this.itemMap.set(fluid.name, fluid);\n        this.fluids.push(fluid);\n        this.fluidMap.set(fluid.name, fluid);\n      } else if ('type' in rawItem && rawItem.type === 'module') {\n        const item = new Module(rawItem);\n        this.itemMap.set(item.name, item);\n        this.modules.push(item);\n        this.moduleMap.set(item.name, item);\n      } else {\n        const item = new Item(rawItem);\n        this.itemMap.set(item.name, item);\n      }\n    }\n\n    const recipes: Recipe[] = [];\n\n    // Add real recipes\n    for (const rawRecipe of Object.values(raw.recipes)) {\n      recipes.push(new Recipe(rawRecipe, this));\n    }\n\n    // Add fake recipes for resources\n    for (const rawResource of Object.values(raw.resource)) {\n      const category = `resource-${rawResource.category}`;\n      const ingredients: schema.Ingredient[] = [];\n      const { fluid_amount, required_fluid } = rawResource.minable;\n      if (fluid_amount && required_fluid) {\n        ingredients.push({\n          name: required_fluid,\n          type: 'fluid',\n          // 10 in lua becomes 1 in game. not sure why\n          amount: fluid_amount / 10,\n        });\n      }\n      recipes.push(\n        new Recipe(\n          {\n            name: `resource-${rawResource.name}`,\n            localised_name: rawResource.localised_name,\n            category,\n            energy_required: rawResource.minable.mining_time,\n            group: category, // TODO: better group?\n            subgroup: category, // TODO: better subgroup?\n            icon_col: rawResource.icon_col,\n            icon_row: rawResource.icon_row,\n            ingredients,\n            results: rawResource.minable.results,\n            type: 'recipe',\n            order: 'A',\n          },\n          this\n        )\n      );\n    }\n\n    for (const recipe of recipes) {\n      for (const entity of this.entityMap.values()) {\n        if ('canBuildRecipe' in entity && entity.canBuildRecipe(recipe)) {\n          recipe.madeIn.push(entity);\n        }\n      }\n      if (!recipe.madeIn.length) {\n        // Filter to only recipes buildable by knonwn assembling machines\n        console.warn(`Ignoring uncraftable recipe: ${recipe.name}`);\n        continue;\n      }\n\n      const hasProducts = recipe.products.some((p) => p.amount.isPositive());\n      if (!hasProducts) {\n        continue;\n      }\n\n      for (const ingredient of recipe.ingredients) {\n        ingredient.item.usedBy.push(recipe);\n      }\n      for (const product of recipe.products) {\n        product.item.madeBy.push(recipe);\n      }\n      this.recipes.push(recipe);\n      this.recipeMap.set(recipe.name, recipe);\n    }\n\n    this.categoryMap = createCategoryMap(this.entityMap.values());\n    this.groups = raw.groups;\n\n    const clockSprite = raw.sprites.extra['clock'];\n    assert(clockSprite, 'missing clock sprite');\n    const noModuleIcon = raw.sprites.extra['slot_icon_module'];\n    assert(noModuleIcon, 'missing \"no icon\" sprite');\n\n    this.clockSprite = new BaseDisplayable({\n      ...clockSprite,\n      name: 'clock',\n      localised_name: { en: 'Clock' },\n    });\n\n    this.noModuleModule = new Module({\n      ...noModuleIcon,\n      type: 'module',\n      name: 'no_module',\n      localised_name: { en: 'No Module' },\n      category: 'speed',\n      effect: {},\n      limitation: [],\n      rocket_launch_products: [],\n\n      group: '',\n      subgroup: '',\n      order: '',\n    });\n  }\n\n  getEntity(name: string): Entity {\n    const entity = this.entityMap.get(name);\n    assert(entity, `no entity with name: ${name}`);\n    return entity;\n  }\n\n  getFluid(name: string): Fluid {\n    const fluid = this.fluidMap.get(name);\n    assert(fluid, `no fluid with name: ${name}`);\n    return fluid;\n  }\n\n  getItem(name: string): Item {\n    const item = this.itemMap.get(name);\n    assert(item, `no item with name: ${name}`);\n    return item;\n  }\n\n  getModule(name: string): Module {\n    const module = this.moduleMap.get(name);\n    assert(module, `no module with name: ${name}`);\n    return module;\n  }\n\n  getRecipe(name: string): Recipe {\n    const recipe = this.recipeMap.get(name);\n    assert(recipe, `no recipe with name: ${name}`);\n    return recipe;\n  }\n\n  getItemOrder(item: Item | Fluid): [string, string, string, string] {\n    let groupOrder = '';\n    let subgroupOrder = '';\n    const group = this.groups[item.group];\n    if (group) {\n      groupOrder = group.order;\n      subgroupOrder = group.subgroups[item.subgroup] || '';\n    }\n    return [groupOrder, subgroupOrder, item.order, item.name];\n  }\n\n  // Sort by\n  // 1. group\n  // 2. subgroup\n  // 3. item order string\n  // 4. item name\n  sortByItem<T>(collection: T[], keyFn: (obj: T) => Item | Fluid): void {\n    collection.sort((a: T, b: T) => {\n      const ordersA = this.getItemOrder(keyFn(a));\n      const ordersB = this.getItemOrder(keyFn(b));\n\n      for (const i in ordersA) {\n        const valA = ordersA[i]!;\n        const valB = ordersB[i]!;\n        if (valA > valB) {\n          return 1;\n        } else if (valA < valB) {\n          return -1;\n        }\n      }\n\n      return 0;\n    });\n  }\n}\n","import * as game from './game';\nimport { AppSettingsData } from './state';\nimport { assert } from './util';\n\nexport function getDefaultMachine(\n  input: game.Recipe | string,\n  settings: AppSettingsData,\n  gameData: game.GameData\n): game.AssemblingMachine {\n  const category = input instanceof game.Recipe ? input.category : input;\n\n  let defaultMachine: game.AssemblingMachine | undefined;\n  if (category in settings.assemblerOverrides) {\n    defaultMachine = settings.assemblerOverrides[category];\n  } else {\n    defaultMachine = gameData.categoryMap[category]![0];\n  }\n\n  assert(defaultMachine);\n\n  if (input instanceof game.Recipe) {\n    assert(input.madeIn.indexOf(defaultMachine) !== -1);\n  }\n\n  return defaultMachine;\n}\n","import * as game from './game';\nimport { Rational } from './rational';\nimport { CompleteState, AppSettingsData } from './state';\nimport { getDefaultMachine } from './stateutil';\nimport { mapValues } from './util';\n\nimport { inflate, deflate } from 'pako';\n\ntype SerializedRowV1 = [\n  string, // recipe name, required\n  string | null, // assembling machine, null if default\n  number, // num assembling machines\n  (string | null)[], // modules,\n  string | undefined, // beacon module, if chosen\n  number // num beacon modules\n];\n\ninterface SerializedAppStateV1 {\n  version: 1;\n  data: SerializedRowV1[];\n}\n\nfunction state1to2(state: SerializedAppStateV1): SerializedAppStateV2 {\n  return {\n    version: 2,\n    data: {\n      rows: state.data,\n      settings: {\n        assemblerOverrides: {},\n      },\n    },\n  };\n}\n\ninterface SerializedAppStateV2 {\n  version: 2;\n  data: {\n    rows: SerializedRowV1[];\n    settings: SerializedSettings;\n  };\n}\n\n// V3 = v2 but compressed\nfunction state2to3(state: SerializedAppStateV2): SerializedAppStateV3 {\n  return {\n    version: 3,\n    data: state.data,\n  };\n}\n\ninterface SerializedAppStateV3 {\n  version: 3;\n  data: SerializedAppStateV2['data'];\n}\n\n// v4 is multiple groups of rows\nfunction state3to4(state: SerializedAppStateV3): SerializedAppStateV4 {\n  return {\n    version: 4,\n    data: {\n      settings: state.data.settings,\n      groups: [\n        {\n          name: 'Factory 1',\n          rows: state.data.rows,\n        },\n      ],\n    },\n  };\n}\n\n// v4 has multiple groups, each with multiple rows\ninterface SerializedGroupV4 {\n  name: string;\n  rows: SerializedRowV1[];\n}\ninterface SerializedAppStateV4 {\n  version: 4;\n  data: {\n    groups: SerializedGroupV4[];\n    settings: SerializedSettings;\n  };\n}\n\nfunction groupv4to5(group: SerializedGroupV4): SerializedGroupV5 {\n  return {\n    name: group.name,\n    rows: group.rows.map((r) => {\n      return [r[0], r[1], r[2].toString(), r[3], r[4], r[5]];\n    }),\n  };\n}\n\n// v5 has multiple groups, each with multiple rows\nfunction state4to5(state: SerializedAppStateV4): SerializedAppStateV5 {\n  return {\n    version: 5,\n    data: {\n      settings: state.data.settings,\n      groups: state.data.groups.map(groupv4to5),\n    },\n  };\n}\ntype SerializedRowV5 = [\n  string, // recipe name, required\n  string | null, // assembling machine, null if default\n  string, // num assembling machines as a rational\n  (string | null)[], // modules,\n  string | undefined, // beacon module, if chosen\n  number // num beacon modules\n];\n\ninterface SerializedGroupV5 {\n  name: string;\n  rows: SerializedRowV5[];\n}\ninterface SerializedAppStateV5 {\n  version: 5;\n  data: {\n    groups: SerializedGroupV5[];\n    settings: SerializedSettings;\n  };\n}\n\ninterface SerializedAppStateOther {\n  version: 0;\n  data: unknown;\n}\n\ntype MultiSerializedAppState =\n  | SerializedAppStateOther\n  | SerializedAppStateV1\n  | SerializedAppStateV2\n  | SerializedAppStateV3\n  | SerializedAppStateV4\n  | SerializedAppStateV5;\n\n// Latest values\ntype SerializedRow = SerializedRowV5;\ntype SerializedAppState = SerializedAppStateV5;\n\ninterface SerializedSettings {\n  assemblerOverrides: {\n    [category: string]: string;\n  };\n}\n\nexport function setLocalStorageState(\n  state: CompleteState,\n  gameData: game.GameData\n): void {\n  localStorage.setItem('appstate', JSON.stringify(serialize(state, gameData)));\n}\n\nexport function getLocalStorageState(\n  gameData: game.GameData\n): CompleteState | null {\n  const statestr = localStorage.getItem('appstate');\n  if (!statestr) {\n    return null;\n  }\n  const stateobj: MultiSerializedAppState = JSON.parse(statestr);\n  if (stateobj.version === 1) {\n    (stateobj as any).version = 3;\n  }\n\n  return deserialize(gameData, stateobj);\n}\n\nexport function setUrlState(\n  state: CompleteState,\n  gameData: game.GameData\n): void {\n  const serialized = serialize(state, gameData);\n  const version = serialized.version;\n  let str = JSON.stringify(serialized.data);\n  // compress\n  str = btoa(deflate(str, { to: 'string' }));\n\n  window.history.replaceState('', '', `#${version}-${str}`);\n}\n\nfunction serialize(\n  state: CompleteState,\n  gameData: game.GameData\n): SerializedAppState {\n  const groups = state.groups.map((group) => {\n    return {\n      name: group.name,\n      rows: group.rows.map((row) => {\n        let machineName: string | null = row.machine.name;\n        const defaultMachine = getDefaultMachine(\n          row.recipe,\n          state.settings,\n          gameData\n        );\n\n        if (defaultMachine.name === machineName) {\n          machineName = null;\n        }\n\n        const srow: SerializedRow = [\n          row.recipe.name,\n          machineName,\n          row.numMachines.toFraction(),\n          row.modules.map((m) => (m ? m.name : null)),\n          row.beaconModule ? row.beaconModule.name : undefined,\n          row.numBeacons,\n        ];\n        return srow;\n      }),\n    };\n  });\n\n  const settings = {\n    assemblerOverrides: mapValues(\n      state.settings.assemblerOverrides,\n      (a) => a.name\n    ),\n  };\n\n  return {\n    version: 5,\n    data: { groups, settings },\n  };\n}\n\nconst reStateUrl = /^#(\\d+)?(?:-)?(.+)$/;\n\nexport function getUrlState(gameData: game.GameData): CompleteState | null {\n  const matches = reStateUrl.exec(document.location.hash);\n  if (!matches) {\n    return null;\n  }\n  const version = Number(matches[1] || 1);\n\n  let str = decodeURIComponent(matches[2]!);\n  if (version > 2) {\n    str = inflate(atob(str), { to: 'string' });\n  }\n\n  let data = JSON.parse(str);\n\n  return deserialize(gameData, {\n    version: version as 0,\n    data,\n  });\n}\n\nfunction migrateSerializedState(\n  state: MultiSerializedAppState\n): SerializedAppState {\n  switch (state.version) {\n    case 1:\n      state = state1to2(state);\n    // fall through\n    case 2:\n      state = state2to3(state);\n    // fall through\n    case 3:\n      state = state3to4(state);\n    // fall through\n    case 4:\n      state = state4to5(state);\n    // fall through\n    case 5:\n      // the latest\n      break;\n    default:\n      throw new Error(`unknown state: ${state}`);\n  }\n\n  return state;\n}\n\nfunction deserialize(\n  gameData: game.GameData,\n  unmigrated: MultiSerializedAppState\n): CompleteState {\n  const migrated = migrateSerializedState(unmigrated).data;\n\n  const state: CompleteState = {\n    settings: deserializeSettings(gameData, migrated.settings),\n    groups: [],\n  };\n\n  state.groups = migrated.groups.map((group) => {\n    return {\n      name: group.name,\n      rows: group.rows.map(\n        ([\n          recipeName,\n          machineName,\n          numMachines,\n          modules,\n          beaconModule,\n          numBeacons,\n        ]) => {\n          const recipe = gameData.getRecipe(recipeName);\n\n          const machine = machineName\n            ? gameData.getEntity(machineName)\n            : getDefaultMachine(recipe, state.settings, gameData);\n\n          return {\n            recipe: recipe,\n            machine: machine,\n            numMachines: Rational.fromString(numMachines),\n            modules: modules.map((n) => (n ? gameData.getModule(n) : null)),\n            beaconModule: beaconModule\n              ? gameData.getModule(beaconModule)\n              : null,\n            numBeacons: numBeacons || 0,\n          };\n        }\n      ),\n    };\n  });\n\n  return state;\n}\n\nfunction deserializeSettings(\n  gameData: game.GameData,\n  serialized: SerializedSettings\n): AppSettingsData {\n  return {\n    assemblerOverrides: mapValues(serialized.assemblerOverrides, (name) =>\n      gameData.getEntity(name)\n    ),\n  };\n}\n","import * as game from './game';\n\ninterface SignalHandler<T> {\n  (arg: T): void;\n}\n\nexport class Signal<T> {\n  handlers: SignalHandler<T>[] = [];\n\n  addHandler(handler: SignalHandler<T>): void {\n    const index = this.handlers.indexOf(handler);\n    if (index === -1) {\n      this.handlers.push(handler);\n    }\n  }\n\n  removeHandler(handler: SignalHandler<T>): void {\n    const index = this.handlers.indexOf(handler);\n    if (index !== -1) {\n      this.handlers.splice(index, 1);\n    }\n  }\n\n  dispatch = (arg: T): void => {\n    for (const handler of this.handlers) {\n      handler(arg);\n    }\n  };\n}\n\nexport const addIngredientFilter = new Signal<game.Ingredient>();\nexport const addProductFilter = new Signal<game.Product>();\nexport const addRecipeRow = new Signal<game.Recipe>();\n","import * as game from './game';\n\nimport { clone } from './util';\n\nimport { Rational } from './rational';\n\nimport { RecipeRowData } from './state';\n\nexport class Totals {\n  ingredients: game.Ingredient[] = [];\n  products: game.Product[] = [];\n\n  constructor(rows?: RecipeRowData[]) {\n    if (rows && rows.length) {\n      for (const row of rows) {\n        this.addRow(row);\n      }\n    }\n  }\n\n  addIngredient(newIngredient: game.Ingredient): void {\n    for (const oldIng of this.ingredients) {\n      if (oldIng.name !== newIngredient.name) {\n        continue;\n      }\n      if (\n        newIngredient instanceof game.FluidIngredient &&\n        oldIng instanceof game.FluidIngredient\n      ) {\n        if (\n          newIngredient.maximumTemperature !== oldIng.maximumTemperature ||\n          newIngredient.minimumTemperature !== oldIng.minimumTemperature\n        ) {\n          continue;\n        }\n      }\n\n      oldIng.amount = oldIng.amount.add(newIngredient.amount);\n      return;\n    }\n\n    for (const oldProd of this.products) {\n      if (!oldProd.satisfies(newIngredient)) continue;\n      if (oldProd.amount.less(newIngredient.amount)) {\n        newIngredient.amount = newIngredient.amount.sub(oldProd.amount);\n        oldProd.amount = Rational.zero;\n        if (newIngredient.amount.isZero()) break;\n      } else {\n        oldProd.amount = oldProd.amount.sub(newIngredient.amount);\n        newIngredient.amount = Rational.zero;\n        break;\n      }\n    }\n\n    this.ingredients.push(newIngredient);\n    this.ingredients = this.ingredients.filter((p) => !p.amount.isZero());\n    this.products = this.products.filter((p) => !p.amount.isZero());\n  }\n\n  addProduct(newProduct: game.Product): void {\n    for (const oldProd of this.products) {\n      if (newProduct.name !== oldProd.name) continue;\n\n      if (\n        newProduct instanceof game.FluidProduct &&\n        oldProd instanceof game.FluidProduct\n      ) {\n        if (newProduct.temperature !== oldProd.temperature) {\n          continue;\n        }\n      }\n\n      oldProd.amount = oldProd.amount.add(newProduct.amount);\n      return;\n    }\n\n    for (const oldIng of this.ingredients) {\n      if (!newProduct.satisfies(oldIng)) continue;\n      if (newProduct.amount.less(oldIng.amount)) {\n        oldIng.amount = oldIng.amount.sub(newProduct.amount);\n        newProduct.amount = Rational.zero;\n        break;\n      } else {\n        newProduct.amount = newProduct.amount.sub(oldIng.amount);\n        oldIng.amount = Rational.zero;\n        if (newProduct.amount.isZero()) break;\n      }\n    }\n\n    this.products.push(newProduct);\n    this.ingredients = this.ingredients.filter((i) => !i.amount.isZero());\n    this.products = this.products.filter((i) => !i.amount.isZero());\n  }\n\n  addRow(row: RecipeRowData): void {\n    const effects = {\n      consumption: Rational.one,\n      pollution: Rational.one,\n      productivity: Rational.one,\n      speed: Rational.one,\n    };\n\n    for (const module of row.modules) {\n      if (!module) continue;\n      effects.consumption = effects.consumption.add(module.effects.consumption);\n      effects.pollution = effects.pollution.add(module.effects.pollution);\n      effects.productivity = effects.productivity.add(\n        module.effects.productivity\n      );\n      effects.speed = effects.speed.add(module.effects.speed);\n    }\n\n    if (row.beaconModule && row.numBeacons > 0) {\n      // assumes \"distribution_effectivity\" of 0.5 from default beacons\n      const be = row.beaconModule.effects;\n      const num = Rational.fromInts(row.numBeacons, 2);\n      effects.consumption = effects.consumption.add(be.consumption.mul(num));\n      effects.pollution = effects.pollution.add(be.pollution.mul(num));\n      effects.productivity = effects.productivity.add(be.productivity.mul(num));\n      effects.speed = effects.speed.add(be.speed.mul(num));\n    }\n\n    // Allowed -80% to de facto max of signed short int\n    effects.consumption = effects.consumption.clamp(0.2, 32767);\n    effects.pollution = effects.pollution.clamp(0.2, 32767);\n    effects.speed = effects.speed.clamp(0.2, 32767);\n\n    // Special minimum: -0%\n    effects.productivity = effects.productivity.clamp(1, 32767);\n\n    const ingredientMult = Rational.one\n      .mul(row.recipe.craftingTime.invert())\n      .mul(row.numMachines)\n      .mul(row.machine.craftingSpeed)\n      .mul(effects.speed);\n\n    const productMult = ingredientMult.mul(effects.productivity);\n\n    for (const ingredient of row.recipe.ingredients.map((ingredient) => {\n      ingredient = clone(ingredient);\n      ingredient.amount = ingredient.amount.mul(ingredientMult);\n      return ingredient;\n    })) {\n      this.addIngredient(ingredient);\n    }\n\n    for (const product of row.recipe.products.map((product) => {\n      product = clone(product);\n      product.amount = product.amount.mul(productMult);\n      return product;\n    })) {\n      this.addProduct(product);\n    }\n  }\n}\n","import * as React from 'react';\nimport Popper from 'popper.js';\n\ninterface DropdownHeader {\n  header: React.ReactNode;\n}\n\ninterface DropdownDivider {\n  divider: true;\n}\n\ninterface DropdownEntry<T> {\n  key: React.Key;\n  disabled?: boolean;\n  active?: boolean;\n  option: T;\n}\n\ntype DropdownOption<T> = DropdownHeader | DropdownDivider | DropdownEntry<T>;\n\ninterface Props<T> {\n  options: DropdownOption<T>[];\n  selected: T;\n  onSelect(selected: T): void;\n\n  renderOption(option: T): React.ReactNode;\n  renderSelected(option: T): React.ReactNode;\n}\ninterface State {\n  isOpen: boolean;\n}\n\nconst ESC_KEYCODE = 27;\n\nexport class Dropdown<T> extends React.PureComponent<Props<T>, State> {\n  buttonRef: React.RefObject<HTMLButtonElement> = React.createRef();\n\n  state: State = {\n    isOpen: false,\n  };\n\n  handleClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    if (!this.getCanToggle()) {\n      return;\n    }\n\n    // Prevent the \"opening\" click from immediately closing the dropdown\n    e.stopPropagation();\n\n    this.setState((state) => ({\n      ...state,\n      isOpen: !state.isOpen,\n    }));\n  };\n\n  handleSelect = (selected: T): void => {\n    this.props.onSelect(selected);\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  handleWantClose = (): void => {\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  getCanToggle(): boolean {\n    for (const option of this.props.options) {\n      if ('option' in option && !option.disabled) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render(): React.ReactNode {\n    const classes = ['btn', 'btn-secondary'];\n    if (this.getCanToggle()) {\n      classes.push('dropdown-toggle');\n    } else {\n      classes.push('disabled');\n    }\n\n    let floater: React.ReactNode | null;\n    if (this.state.isOpen) {\n      floater = (\n        <DropdownMenu\n          parentRef={this.buttonRef}\n          options={this.props.options}\n          renderOption={this.props.renderOption}\n          onSelect={this.handleSelect}\n          onWantClose={this.handleWantClose}\n        />\n      );\n    }\n\n    return (\n      <>\n        <button\n          ref={this.buttonRef}\n          className={classes.join(' ')}\n          type=\"button\"\n          onClick={this.handleClick}\n        >\n          {this.props.renderSelected(this.props.selected)}\n        </button>\n        {floater}\n      </>\n    );\n  }\n}\n\ninterface DropdownMenuProps<T> {\n  parentRef: React.RefObject<any>;\n  options: DropdownOption<T>[];\n  renderOption(option: T): React.ReactNode;\n  onSelect(selected: T): void;\n  onWantClose(): void;\n}\n\ninterface DropdownMenuState {\n  style: object;\n}\n\nclass DropdownMenu<T> extends React.PureComponent<\n  DropdownMenuProps<T>,\n  DropdownMenuState\n> {\n  popperInstance: Popper | null = null;\n  menuRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  state: DropdownMenuState = {\n    style: {},\n  };\n\n  popperUpdate = (data: Popper.Data): Popper.Data => {\n    this.setState({\n      style: data.styles,\n    });\n    return data;\n  };\n\n  handleBodyClick = (event: MouseEvent): void => {\n    if (!this.menuRef.current) {\n      throw new Error(\n        'Click event without menu rendered. This should not happen.'\n      );\n    }\n    if (!event.target) {\n      throw new Error(\n        'Click event without click target. This should not happen.'\n      );\n    }\n    // TODO: why doesnt EventTarget satisfy \"Node\"\n    const target = event.target as any;\n    if (!this.menuRef.current.contains(target)) {\n      // Click was outside menu\n      this.props.onWantClose();\n    }\n  };\n\n  handleKeyEvent = (event: KeyboardEvent): void => {\n    if (event.keyCode === ESC_KEYCODE) {\n      this.props.onWantClose();\n    }\n  };\n\n  componentDidMount(): void {\n    if (this.popperInstance) {\n      throw new Error('Component mounted twice?');\n    }\n\n    const referenceEl = this.props.parentRef.current;\n    if (!referenceEl) {\n      throw new Error('Cannot mount DropdownMenu without parentRef');\n    }\n\n    const menuEl = this.menuRef.current;\n    if (!menuEl) {\n      throw new Error('Cannot mount DropdownMenu without menuRef');\n    }\n\n    this.popperInstance = new Popper(referenceEl, menuEl, {\n      modifiers: {\n        applyStyle: { enabled: false },\n        updateStateWithStyle: {\n          enabled: true,\n          fn: this.popperUpdate,\n        },\n      },\n    });\n\n    document.body.addEventListener('click', this.handleBodyClick);\n    document.body.addEventListener('keyup', this.handleKeyEvent);\n  }\n\n  componentWillUnmount(): void {\n    if (this.popperInstance) {\n      this.popperInstance.disableEventListeners();\n      this.popperInstance = null;\n    }\n    document.body.removeEventListener('click', this.handleBodyClick);\n    document.body.removeEventListener('keyup', this.handleKeyEvent);\n  }\n\n  renderOptions = (): React.ReactNode => {\n    return this.props.options.map((option, i) => {\n      if ('header' in option) {\n        return (\n          <h6 className=\"dropdown-header\" key={'ddkey' + i}>\n            {option.header}\n          </h6>\n        );\n      }\n      if ('divider' in option) {\n        return <div className=\"dropdown-divider\" key={'ddkey' + i} />;\n      }\n\n      const classes = ['dropdown-item'];\n      option.active && classes.push('active');\n      option.disabled && classes.push('disabled');\n\n      return (\n        <button\n          key={option.key}\n          className={classes.join(' ')}\n          onClick={() => this.props.onSelect(option.option)}\n          type=\"button\"\n        >\n          {this.props.renderOption(option.option)}\n        </button>\n      );\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div\n        className=\"dropdown-menu show\"\n        style={this.state.style}\n        ref={this.menuRef}\n      >\n        {this.renderOptions()}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Popper from 'popper.js';\n\ninterface Props {\n  relativeTo: React.RefObject<HTMLElement>;\n  content: () => React.ReactNode;\n}\n\ninterface State {\n  showSelf: boolean;\n}\n\nconst ontop: React.CSSProperties = { zIndex: 1001 };\n\nexport class Tooltip extends React.Component<Props, State> {\n  selfRef: React.RefObject<any>;\n  popperInstance: Popper | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.selfRef = React.createRef();\n    this.popperInstance = null;\n    this.state = {\n      showSelf: false,\n    };\n  }\n\n  shouldComponentUpdate(oldProps: Props, oldState: State): boolean {\n    // universal props\n    if (\n      this.props.relativeTo !== oldProps.relativeTo ||\n      this.state.showSelf !== oldState.showSelf\n    ) {\n      return true;\n    }\n\n    // Only re-render due to props.content changes if we're displaying that content\n    return this.state.showSelf && this.props.content !== oldProps.content;\n  }\n\n  initPopper(): void {\n    if (this.popperInstance) {\n      return;\n    }\n\n    const referenceEl = this.props.relativeTo.current;\n    if (!referenceEl) {\n      throw new Error('Invalid relativeTo');\n    }\n\n    const selfEl = this.selfRef.current;\n    if (!selfEl) {\n      throw new Error('No self reference yet?');\n    }\n\n    this.popperInstance = new Popper(referenceEl, selfEl, {\n      placement: 'right',\n      modifiers: {\n        offset: {\n          enabled: true,\n          offset: '0, 20',\n        },\n        preventOverflow: {\n          enabled: true,\n          boundariesElement: 'window',\n        },\n      },\n    });\n  }\n\n  cleanupPopper(): void {\n    if (this.popperInstance) {\n      this.popperInstance.disableEventListeners();\n      this.popperInstance = null;\n    }\n  }\n\n  componentDidUpdate(_: Props, prevState: State): void {\n    if (prevState.showSelf !== this.state.showSelf) {\n      if (this.state.showSelf) {\n        this.initPopper();\n      } else {\n        this.cleanupPopper();\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const referenceEl = this.props.relativeTo.current;\n    if (!referenceEl) {\n      throw new Error('Invalid relativeTo');\n    }\n\n    referenceEl.addEventListener('mouseenter', this.handleMouseEnter);\n    referenceEl.addEventListener('mouseleave', this.handleMouseLeave);\n  }\n\n  handleMouseEnter = (): void => {\n    this.setState({\n      showSelf: true,\n    });\n  };\n\n  handleMouseLeave = (): void => {\n    this.setState({\n      showSelf: false,\n    });\n  };\n\n  componentWillUnmount(): void {\n    const referenceEl = this.props.relativeTo.current;\n    if (referenceEl) {\n      referenceEl.removeEventListener('mouseenter', this.handleMouseEnter);\n      referenceEl.removeEventListener('mouseleave', this.handleMouseLeave);\n    }\n  }\n\n  render(): React.ReactNode {\n    if (!this.state.showSelf) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(\n      <div style={ontop} ref={this.selfRef}>\n        {this.props.content()}\n      </div>,\n      document.body\n    );\n  }\n}\n","import * as React from 'react';\n\ninterface Props {\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n}\n\ninterface State {\n  txtValue: string;\n}\n\nexport class IntegerInput extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      txtValue: props.value.toString(),\n    };\n  }\n\n  componentDidUpdate(oldProps: Props): void {\n    if (oldProps.value !== this.props.value) {\n      this.setState((state) => ({\n        txtValue:\n          Number(state.txtValue) === this.props.value\n            ? state.txtValue\n            : this.props.value.toString(),\n      }));\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const value = event.target.value;\n    this.setState({ txtValue: value }, () => {\n      if (!value.trim()) {\n        return;\n      }\n      const num = Number(value);\n      if (isNaN(num)) {\n        return;\n      }\n      if (!Number.isInteger(num)) {\n        return;\n      }\n\n      if (typeof this.props.min === 'number' && num < this.props.min) {\n        // TODO: Error\n        return;\n      }\n\n      this.props.onChange(num);\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <input\n        className=\"form-control\"\n        value={this.state.txtValue}\n        onChange={this.handleChange}\n        type=\"number\"\n        min={this.props.min}\n        step=\"1\"\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Rational } from '../../rational';\n\ninterface Props {\n  value: Rational;\n  onChange: (value: Rational) => void;\n  positiveOnly?: boolean;\n}\n\ninterface State {\n  error: string | undefined;\n  txtValue: string;\n}\n\nexport class RationalInput extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      error: '',\n      txtValue: rationalToString(props.value),\n    };\n  }\n\n  componentDidUpdate(oldProps: Props): void {\n    if (!this.props.value.equal(oldProps.value)) {\n      let parsed: Rational;\n      try {\n        parsed = stringToRational(this.state.txtValue);\n      } catch (err) {\n        return;\n      }\n\n      if (!parsed.equal(this.props.value)) {\n        this.setState({\n          txtValue: rationalToString(this.props.value),\n        });\n      }\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const str = event.target.value;\n\n    let errmsg: string | undefined;\n    let parsed: Rational | undefined;\n\n    try {\n      parsed = stringToRational(str);\n    } catch (err) {\n      errmsg = err.message;\n    }\n\n    if (parsed && this.props.positiveOnly && parsed.isNegative()) {\n      parsed = undefined;\n      errmsg = 'Number must be positive';\n    }\n    this.setState({ txtValue: str, error: errmsg }, () => {\n      if (parsed) {\n        this.props.onChange(parsed);\n      }\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <input\n        className={classNames('form-control', {\n          'is-invalid': !!this.state.error,\n        })}\n        value={this.state.txtValue}\n        onChange={this.handleChange}\n        type=\"text\"\n      />\n    );\n  }\n}\n\nfunction stringToRational(str: string): Rational {\n  if (!str.trim()) {\n    throw new Error('Empty!');\n  }\n\n  const index = str.indexOf('/');\n  const lastIndex = str.lastIndexOf('/');\n  if (index !== lastIndex) {\n    throw new Error('Too many slashes');\n  }\n\n  return Rational.fromString(str);\n}\n\nfunction rationalToString(rational: Rational): string {\n  const dec = rational.toFloat().toString();\n  if (dec.length < 10) {\n    return dec;\n  }\n\n  return rational.toMixed();\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { BaseDisplayable } from '../game';\nimport { Tooltip } from './generic';\n\nimport styles from './Icon.module.css';\n\ninterface Props {\n  obj: BaseDisplayable;\n\n  className?: string;\n  title?: string;\n  onClick?(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\n  tooltip?: () => React.ReactNode;\n  text?: React.ReactNode;\n}\n\ninterface State {}\n\nexport class Icon extends React.PureComponent<Props, State> {\n  iconRef = React.createRef<HTMLDivElement>();\n\n  render(): React.ReactNode {\n    const x = -this.props.obj.iconCol * 32;\n    const y = -this.props.obj.iconRow * 32;\n\n    const divStyle: React.CSSProperties = {\n      backgroundPosition: `${x}px ${y}px`,\n    };\n\n    let icon = (\n      <div\n        ref={this.iconRef}\n        onClick={this.props.onClick}\n        title={this.props.title}\n        className={classNames(styles.Icon, 'game-icon', this.props.className)}\n        style={divStyle}\n      >\n        &nbsp;\n      </div>\n    );\n\n    if (this.props.tooltip) {\n      icon = (\n        <>\n          {icon}\n          <Tooltip content={this.props.tooltip} relativeTo={this.iconRef} />\n        </>\n      );\n    }\n\n    if (this.props.text) {\n      icon = (\n        <div className={styles.IconTextWrapper}>\n          {icon}\n          <span className={styles.IconText}>{this.props.text}</span>\n        </div>\n      );\n    }\n\n    return icon;\n  }\n}\n","import * as React from 'react';\n\nimport { format_joules, format_watts } from '../util';\nimport * as game from '../game';\n\ninterface Props {\n  obj: game.Ingredient | game.Product;\n}\n\nexport const IngredientCard: React.FC<Props> = (props) => {\n  const { obj } = props;\n\n  let fuelValues: React.ReactNode;\n  if (obj.item.fuelValue) {\n    const totalValue = format_watts(\n      obj.amount.mul(obj.item.fuelValue).toFloat()\n    );\n    fuelValues = (\n      <div className=\"card-body\">\n        <div>\n          <b>Fuel value</b>: {format_joules(obj.item.fuelValue)}\n        </div>\n        <div>\n          <b>Total fuel value</b>: {totalValue}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        {obj.item.niceName} ({obj.item.name})\n      </div>\n      {fuelValues}\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { Rational } from '../rational';\nimport * as game from '../game';\nimport * as signal from '../signal';\n\nimport { Icon } from './Icon';\nimport { IngredientCard } from './IngredientCard';\n\nimport { recipeTargetAtom } from '../atoms';\n\nimport styles from './RecipePart.module.css';\n\ninterface Props {\n  obj: game.Ingredient | game.Product;\n  showName?: boolean;\n}\n\nexport const RecipePart: React.FC<Props> = ({ obj, showName }) => {\n  const [recipeTarget, setRecipeTarget] = useRecoilState(recipeTargetAtom);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent): void => {\n      if (event.shiftKey) {\n        event.preventDefault();\n        event.stopPropagation();\n        setRecipeTarget({\n          item: obj.item,\n          amount: obj.amount,\n        });\n        return;\n      }\n\n      if (obj instanceof game.Ingredient) {\n        if (obj.item.madeBy.length === 1) {\n          signal.addRecipeRow.dispatch(obj.item.madeBy[0]!);\n        } else {\n          signal.addIngredientFilter.dispatch(obj);\n        }\n      } else {\n        if (obj.item.usedBy.length === 1) {\n          signal.addRecipeRow.dispatch(obj.item.usedBy[0]!);\n        } else {\n          signal.addProductFilter.dispatch(obj);\n        }\n      }\n    },\n    [obj, setRecipeTarget]\n  );\n\n  let text = perSecond(obj.amount);\n  if (showName) {\n    text = (\n      <>\n        {obj.item.niceName} -- {text}\n      </>\n    );\n  }\n\n  const isTarget =\n    recipeTarget &&\n    recipeTarget.item === obj.item &&\n    recipeTarget.amount.equal(obj.amount);\n  const copySource = isTarget ? 'copy-source' : '';\n\n  return (\n    <Icon\n      className={`${styles.RecipePart} ${copySource}`}\n      onClick={handleClick}\n      tooltip={() => <IngredientCard obj={obj} />}\n      obj={obj.item}\n      text={text}\n    />\n  );\n};\n\nfunction perSecond(rational: Rational): React.ReactNode {\n  const dec = rational.toDecimal().toString();\n  let amount: React.ReactNode;\n  if (dec.includes('.') && dec.length > 4) {\n    amount = <abbr title={rational.toFraction()}>{rational.toDecimal()}</abbr>;\n  } else {\n    amount = dec;\n  }\n  return <>{amount} / sec</>;\n}\n","import * as React from 'react';\nimport * as game from '../game';\n\ninterface Props {\n  machine: game.AssemblingMachine;\n}\n\nexport const MachineCard: React.FC<Props> = (props) => {\n  return (\n    <div className=\"machine-card card\">\n      <div className=\"card-body\">\n        <b>{props.machine.niceName}</b>\n        <br />\n        <b>Crafting Speed:</b> {props.machine.craftingSpeed}\n        <br />\n        <b>Module Slots:</b> {props.machine.moduleSlots}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport * as game from '../game';\n\nimport { Icon } from './Icon';\nimport { MachineCard } from './MachineCard';\nimport { useGameData } from '../atoms';\n\ninterface Props {\n  recipe: game.Recipe;\n  onClick?(r: game.Recipe): void;\n}\n\nexport const RecipeCard: React.FC<Props> = ({ recipe, onClick }) => {\n  const gameData = useGameData();\n\n  const handleClick = (): void => {\n    onClick && onClick(recipe);\n  };\n\n  const ingredients = recipe.ingredients.map((ingredient) => (\n    <Icon\n      key={ingredient.name}\n      obj={ingredient.item}\n      text={ingredient.niceName}\n    />\n  ));\n  const products = recipe.products.map((product) => (\n    <Icon key={product.name} obj={product.item} text={product.niceName} />\n  ));\n\n  const madeIn = recipe.madeIn.map((machine) => (\n    <Icon\n      key={machine.name}\n      obj={machine}\n      tooltip={() => <MachineCard machine={machine} />}\n    />\n  ));\n\n  return (\n    <div className=\"recipe-tooltip card\" onClick={handleClick}>\n      <div className=\"card-header\">\n        <Icon obj={recipe} text={`${recipe.niceName} (Recipe)`} />\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item\">\n          <b>Ingredients:</b>\n          {ingredients}\n          <Icon\n            obj={gameData.clockSprite}\n            text={\n              <span>\n                <b>{recipe.craftingTime.toDecimal()} s</b> Crafting time\n              </span>\n            }\n          />\n        </li>\n        <li className=\"list-group-item\">\n          <b>Products:</b>\n          {products}\n        </li>\n        <li className=\"list-group-item\">\n          <b>Made In:</b>\n          <br />\n          {madeIn}\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { AssemblingMachine } from '../game';\n\nimport { Icon } from './Icon';\nimport { MachineCard } from './MachineCard';\nimport { Dropdown } from './generic';\n\ninterface MachinePickerProps {\n  machines: AssemblingMachine[];\n  selected: AssemblingMachine;\n  onChange(m: AssemblingMachine): void;\n}\n\nconst renderSelected = (machine: AssemblingMachine): React.ReactNode => {\n  return <Icon obj={machine} tooltip={() => <MachineCard machine={machine} />} />;\n};\n\nconst renderOption = (machine: AssemblingMachine): React.ReactNode => {\n  return (\n    <Icon\n      obj={machine}\n      tooltip={() => <MachineCard machine={machine} />}\n      text={machine.niceName}\n    />\n  );\n};\n\nexport const MachinePicker: React.FC<MachinePickerProps> = (props) => {\n  const options = props.machines.map((machine) => ({\n    key: machine.name,\n    option: machine,\n    active: machine === props.selected,\n  }));\n\n  return (\n    <Dropdown\n      options={options}\n      selected={props.selected}\n      onSelect={props.onChange}\n      renderOption={renderOption}\n      renderSelected={renderSelected}\n    />\n  );\n};\n","import React from 'react';\n\nimport type { Rational } from '../rational';\nimport type { Module } from '../game';\nimport { round2 } from '../util';\n\ninterface Props {\n  module: Module;\n}\n\nfunction formatBonus(name: string, bonus: Rational): React.ReactNode {\n  if (bonus.isZero()) return null;\n  return (\n    <div>\n      <b>\n        {name} {round2(bonus.toFloat() * 100, 2)}%\n      </b>\n    </div>\n  );\n}\n\nexport const ModuleCard: React.FC<Props> = ({ module }) => {\n  return (\n    <div className=\"module-card card\">\n      <div className=\"card-header\">\n        <b>{module.niceName}</b>\n      </div>\n      <div className=\"card-body\">\n        {formatBonus('Speed', module.effects.speed)}\n        {formatBonus('Productivity', module.effects.productivity)}\n        {formatBonus('Energy Consumption', module.effects.consumption)}\n        {formatBonus('Pollution', module.effects.pollution)}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport type { Module, Recipe } from '../game';\n\nimport { Icon } from './Icon';\nimport { ModuleCard } from './ModuleCard';\nimport { Dropdown } from './generic';\nimport { useGameData } from '../atoms';\n\ninterface ModulePickerProps {\n  recipe: Recipe;\n  isBeacon?: boolean;\n  selected: Module | null;\n  onChange(m: Module | null): void;\n}\n\nexport const ModulePicker: React.FC<ModulePickerProps> = (props) => {\n  const gameData = useGameData();\n  const renderSelected = (module: Module | null): React.ReactNode => {\n    if (module) {\n      return (\n        <Icon obj={module} tooltip={() => <ModuleCard module={module} />} />\n      );\n    } else {\n      return <Icon obj={gameData.noModuleModule} />;\n    }\n  };\n\n  const renderOption = (module: Module | null): React.ReactNode => {\n    if (module) {\n      return (\n        <Icon\n          obj={module}\n          tooltip={() => <ModuleCard module={module} />}\n          text={module.niceName}\n        />\n      );\n    } else {\n      return (\n        <Icon\n          obj={gameData.noModuleModule}\n          text={gameData.noModuleModule.niceName}\n        />\n      );\n    }\n  };\n\n  const options = gameData.modules\n    .filter((m) => {\n      // TODO: what is the actual logic for which modules are allowed in beacons?\n      if (props.isBeacon && m.effects.productivity.isPositive()) {\n        return false;\n      }\n      return m.canUseWith(props.recipe);\n    })\n    .map((m) => ({\n      key: m.name,\n      option: m as Module | null,\n      active: m === props.selected,\n    }));\n\n  options.unshift({\n    key: 'no_module',\n    option: null,\n    active: !props.selected,\n  });\n\n  return (\n    <Dropdown\n      options={options}\n      selected={props.selected}\n      onSelect={props.onChange}\n      renderOption={renderOption}\n      renderSelected={renderSelected}\n    />\n  );\n};\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport * as game from '../game';\nimport { Rational } from '../rational';\nimport { Totals } from '../totals';\nimport { RecipeRowData } from '../state';\nimport { recipeTargetAtom, RecipeTarget } from '../atoms';\n\nimport { Icon } from './Icon';\nimport { RecipePart } from './RecipePart';\nimport { RecipeCard } from './RecipeCard';\nimport { MachinePicker } from './MachinePicker';\nimport { ModulePicker } from './ModulePicker';\nimport { IntegerInput, RationalInput } from './generic';\n\nimport styles from './RecipeRow.module.css';\n\ninterface Props {\n  index: number;\n  recipeTarget: RecipeTarget | undefined;\n  data: RecipeRowData;\n\n  onUpdateRow(row: RecipeRowData): void;\n  onRemoveRow(recipe: game.Recipe): void;\n}\n\nclass RawRecipeRow extends React.PureComponent<Props, never> {\n  handleRemoveRow = (): void => {\n    this.props.onRemoveRow(this.props.data.recipe);\n  };\n\n  handleMachineChange = (machine: game.AssemblingMachine): void => {\n    this.applyChange({\n      machine: machine,\n      modules: this.props.data.modules\n        .filter((module) => module !== null)\n        .slice(0, machine.moduleSlots),\n    });\n  };\n\n  handleNumMachinesChange = (num: Rational): void => {\n    this.applyChange({ numMachines: num });\n  };\n\n  handleNumBeaconsChange = (num: number): void => {\n    this.applyChange({ numBeacons: num });\n  };\n\n  handleSetAllModules = (): void => {\n    this.applyChange({\n      modules: new Array(this.props.data.machine.moduleSlots).fill(\n        this.props.data.modules[0]\n      ),\n    });\n  };\n\n  handleSetModule = (index: number, module: game.Module | null): void => {\n    const modules = this.props.data.modules.slice();\n    modules[index] = module;\n    this.applyChange({ modules: modules });\n  };\n\n  handleSetBeaconModule = (module: game.Module | null): void => {\n    this.applyChange({ beaconModule: module });\n  };\n\n  handleInputGroupClick: React.MouseEventHandler<any> = (event): void => {\n    const { recipeTarget } = this.props;\n    if (!event.shiftKey || !recipeTarget) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n\n    const output = new Totals();\n    output.addRow({\n      ...this.props.data,\n      numMachines: Rational.one,\n    });\n\n    let current: game.Ingredient | game.Product | undefined;\n    current = output.ingredients.find((x) => {\n      return x.item.name === recipeTarget.item.name;\n    });\n\n    current =\n      current ||\n      output.products.find((x) => {\n        return x.item.name === recipeTarget.item.name;\n      });\n\n    if (!current) {\n      console.error(\n        `Could not find ${recipeTarget.item.name} in totals`,\n        output\n      );\n      return;\n    }\n\n    const newNum = recipeTarget.amount.div(current.amount);\n\n    this.applyChange({\n      numMachines: newNum,\n    });\n  };\n\n  applyChange(change: Partial<RecipeRowData>): void {\n    this.props.onUpdateRow({\n      ...this.props.data,\n      ...change,\n    });\n  }\n\n  getOutput(): Totals {\n    const t = new Totals();\n    t.addRow(this.props.data);\n    return t;\n  }\n\n  renderModules(): React.ReactNode {\n    const numSlots = this.props.data.machine.moduleSlots;\n\n    const slots = [];\n    for (let i = 0; i < numSlots; i++) {\n      const module = this.props.data.modules[i] || null;\n      slots.push(\n        <ModulePicker\n          key={i}\n          recipe={this.props.data.recipe}\n          selected={module}\n          onChange={(m) => this.handleSetModule(i, m)}\n        />\n      );\n    }\n\n    if (numSlots > 1) {\n      slots.splice(\n        1,\n        0,\n        <button\n          onClick={this.handleSetAllModules}\n          key=\"applicator\"\n          className=\"btn\"\n        >\n          →\n        </button>\n      );\n    }\n\n    return slots;\n  }\n\n  renderBeacons(): React.ReactNode {\n    return (\n      <div className=\"btn-toolbar\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Beacon Modules</span>\n          </div>\n          <IntegerInput\n            value={this.props.data.numBeacons}\n            onChange={this.handleNumBeaconsChange}\n            min={0}\n          />\n          <div className=\"input-group-append btn-icon-wrapper\">\n            <ModulePicker\n              isBeacon={true}\n              recipe={this.props.data.recipe}\n              selected={this.props.data.beaconModule}\n              onChange={this.handleSetBeaconModule}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderMachines(): React.ReactNode {\n    return (\n      <div className=\"btn-toolbar mb-3\">\n        <div className=\"input-group\" onClick={this.handleInputGroupClick}>\n          <RationalInput\n            value={this.props.data.numMachines}\n            onChange={this.handleNumMachinesChange}\n            positiveOnly={true}\n          />\n          <div className=\"input-group-append btn-icon-wrapper\">\n            <MachinePicker\n              machines={this.props.data.recipe.madeIn}\n              selected={this.props.data.machine}\n              onChange={this.handleMachineChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render(): React.ReactNode {\n    const recipe = this.props.data.recipe;\n    const output = this.getOutput();\n\n    const ingredients = output.ingredients.map((ingredient) => (\n      <div className=\"mb-1\" key={ingredient.name}>\n        <RecipePart obj={ingredient} />\n      </div>\n    ));\n    const products = output.products.map((product) => (\n      <div className=\"mb-1\" key={product.name}>\n        <RecipePart obj={product} />\n      </div>\n    ));\n    return (\n      <Draggable draggableId={recipe.name} index={this.props.index}>\n        {(provided) => (\n          <div\n            className={`${styles.RecipeRow} recipe-row card mb-3`}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n          >\n            <div className=\"card-header clearfix\" {...provided.dragHandleProps}>\n              <div className=\"float-left\">\n                <Icon\n                  obj={recipe}\n                  text={recipe.niceName}\n                  tooltip={() => <RecipeCard recipe={recipe} />}\n                />\n              </div>\n              <div className=\"float-right\">\n                <button\n                  className=\"btn btn-danger btn-sm\"\n                  onClick={this.handleRemoveRow}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n            <div className=\"card-body clearfix\">\n              <div className=\"float-left\">\n                {this.renderMachines()}\n                <div className=\"mb-3 btn-group btn-icon-wrapper\" role=\"group\">\n                  {this.renderModules()}\n                </div>\n                {this.renderBeacons()}\n              </div>\n\n              <div className=\"float-right\">\n                <div\n                  className=\"mr-3\"\n                  style={{\n                    display: 'inline-block',\n                    float: 'left',\n                    minWidth: '150px',\n                  }}\n                >\n                  <b>Ingredients:</b>\n                  {ingredients}\n                </div>\n\n                <div\n                  className=\"mr-2\"\n                  style={{\n                    display: 'inline-block',\n                    minWidth: '150px',\n                  }}\n                >\n                  <b>Products:</b>\n                  {products}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport const RecipeRow: React.FC<{\n  index: number;\n  data: RecipeRowData;\n  onUpdateRow(data: RecipeRowData): void;\n  onRemoveRow(recipe: game.Recipe): void;\n}> = ({ index, data, onRemoveRow, onUpdateRow }) => {\n  const recipeTarget = useRecoilValue(recipeTargetAtom);\n\n  return (\n    <RawRecipeRow\n      index={index}\n      data={data}\n      recipeTarget={recipeTarget}\n      onUpdateRow={onUpdateRow}\n      onRemoveRow={onRemoveRow}\n    />\n  );\n};\n","import * as React from 'react';\nimport Fuse from 'fuse.js';\n\nimport { debounce } from '../util';\n\nimport * as game from '../game';\nimport * as signal from '../signal';\n\nimport { Icon } from './Icon';\nimport { IngredientCard } from './IngredientCard';\nimport { RecipeCard } from './RecipeCard';\n\nimport styles from './RecipePicker.module.css';\n\nconst getFn: Fuse.FuseGetFunction<game.Recipe> = (obj, path) => {\n  if (typeof path === 'string') {\n    throw new Error(`path unexpectedly string: ${path}`);\n  }\n  if (path.length !== 1) {\n    throw new Error(`path unexpectedly long/short: ${path}`);\n  }\n  switch (path[0]) {\n    case 'niceName':\n      return obj.niceName;\n    case 'name':\n      return obj.name;\n    default:\n      throw new Error(`Unsupported path: ${path}`);\n  }\n};\n\nconst RE_ADVANCED = /((?:produces)|(?:consumes)):([a-z0-9-]+)/g;\n\ninterface Props {\n  recipes: game.Recipe[];\n  onPickRecipe(r: game.Recipe): void;\n}\n\ninterface State {\n  query: string;\n  matches: game.Recipe[];\n}\n\nexport class RecipePicker extends React.PureComponent<Props, State> {\n  inputRef = React.createRef<HTMLInputElement>();\n\n  state: State = {\n    query: '',\n    matches: [],\n  };\n\n  componentDidMount(): void {\n    signal.addIngredientFilter.addHandler(this.handleIngredientClick);\n    signal.addProductFilter.addHandler(this.handleProductClick);\n  }\n\n  componentWillUnmount(): void {\n    this.debCalculateMatches.cancel();\n    signal.addIngredientFilter.removeHandler(this.handleIngredientClick);\n    signal.addProductFilter.removeHandler(this.handleProductClick);\n  }\n\n  handleIngredientClick = (ingredient: game.Ingredient): void => {\n    const term = `produces:${ingredient.name}`;\n    if (!this.state.query.includes(term)) {\n      this.setQuery(`${this.state.query} ${term}`, () => {\n        this.calculateMatches();\n      });\n      this.inputRef.current?.scrollIntoView();\n    }\n  };\n\n  handleProductClick = (product: game.Product): void => {\n    const term = `consumes:${product.name}`;\n    if (!this.state.query.includes(term)) {\n      this.setQuery(`${this.state.query} ${term}`, () => {\n        this.calculateMatches();\n      });\n      this.inputRef.current?.scrollIntoView();\n    }\n  };\n\n  handleQueryInput = (event: React.FormEvent<HTMLInputElement>): void => {\n    const target = event.target as HTMLInputElement;\n    this.setQuery(target.value);\n  };\n\n  handleRecipeClick = (recipe: game.Recipe): void => {\n    this.props.onPickRecipe(recipe);\n    this.setQuery('');\n  };\n\n  setQuery = (query: string, callback?: () => void): void => {\n    if (!query.trim()) {\n      this.debCalculateMatches.cancel();\n      this.setState(\n        {\n          query: '',\n          matches: [],\n        },\n        callback\n      );\n    } else {\n      this.setState({ query: query }, callback);\n      this.debCalculateMatches();\n    }\n  };\n\n  calculateMatches(): void {\n    let query = this.state.query.trim().toLowerCase();\n    if (!query) {\n      this.setState({ matches: [] });\n      return;\n    }\n\n    const conditions = {\n      consumes: [] as string[],\n      produces: [] as string[],\n    };\n\n    type ckey = keyof typeof conditions;\n\n    query = query\n      .replace(RE_ADVANCED, (_, key, value) => {\n        conditions[key as ckey].push(value);\n        return '';\n      })\n      .trim();\n\n    let recipes = this.props.recipes;\n    if (conditions.consumes.length || conditions.produces.length) {\n      recipes = recipes.filter((recipe) => {\n        for (const name of conditions.consumes) {\n          if (!recipe.ingredients.some((i) => i.name === name)) {\n            return false;\n          }\n        }\n        for (const name of conditions.produces) {\n          if (!recipe.products.some((i) => i.name === name)) {\n            return false;\n          }\n        }\n        return true;\n      });\n    }\n\n    if (query) {\n      const fuse = new Fuse(recipes, {\n        shouldSort: true,\n        getFn: getFn,\n        keys: [\n          {\n            name: 'niceName',\n            weight: 0.7,\n          },\n          {\n            name: 'name',\n            weight: 0.2,\n          },\n        ],\n      });\n      const results = fuse.search(query);\n      recipes = results.map((r) => r.item);\n    }\n    this.setState({ matches: recipes });\n  }\n\n  debCalculateMatches = debounce(this.calculateMatches.bind(this), 200);\n\n  renderMatches(): React.ReactNode {\n    if (!this.state.matches.length) {\n      return '';\n    }\n    let matches = this.state.matches;\n    if (matches.length > 100) {\n      matches = matches.slice(0, 100);\n    }\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>Recipe</th>\n            <th>Time</th>\n            <th>Ingredients</th>\n            <th>Products</th>\n          </tr>\n        </thead>\n        <tbody>\n          {matches.map((r) => (\n            <RecipeMatch\n              recipe={r}\n              key={r.name}\n              onClick={this.handleRecipeClick}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className={styles.RecipePicker}>\n        <div>\n          <input\n            type=\"search\"\n            ref={this.inputRef}\n            className=\"editable-display form-control\"\n            placeholder=\"What do you want to build?\"\n            value={this.state.query}\n            onChange={this.handleQueryInput}\n          />\n        </div>\n        {this.renderMatches()}\n      </div>\n    );\n  }\n}\n\ninterface RecipeMatchProps {\n  recipe: game.Recipe;\n  onClick(recipe: game.Recipe): void;\n}\n\nclass RecipeMatch extends React.PureComponent<RecipeMatchProps, never> {\n  handleClickAdd = (): void => {\n    this.props.onClick(this.props.recipe);\n  };\n\n  render(): React.ReactNode {\n    const recipe = this.props.recipe;\n    const ingredients = recipe.ingredients.map((ing) => (\n      <Icon\n        key={ing.name}\n        obj={ing.item}\n        tooltip={() => <IngredientCard obj={ing} />}\n      />\n    ));\n    const products = recipe.products.map((prod) => (\n      <Icon\n        key={prod.name}\n        obj={prod.item}\n        tooltip={() => <IngredientCard obj={prod} />}\n      />\n    ));\n    return (\n      <tr onClick={this.handleClickAdd}>\n        <td className={styles.ResultName}>\n          <Icon\n            obj={recipe}\n            text={recipe.niceName}\n            tooltip={() => <RecipeCard recipe={recipe} />}\n          />\n        </td>\n        <td>{recipe.craftingTime.toDecimal()}</td>\n        <td>{ingredients}</td>\n        <td>{products}</td>\n      </tr>\n    );\n  }\n}\n","import React, { useMemo } from 'react';\nimport { RecipePart } from './RecipePart';\nimport { RecipeRowData } from '../state';\nimport { useGameData } from '../atoms';\nimport { Totals } from '../totals';\n\nimport styles from './TotalCard.module.css';\n\ninterface Props {\n  rows: RecipeRowData[];\n}\n\nexport const TotalCard: React.FC<Props> = ({ rows }) => {\n  const gameData = useGameData();\n\n  const totals: Totals = useMemo(() => {\n    const t = new Totals(rows);\n    gameData.sortByItem(t.ingredients, (p) => p.item);\n    gameData.sortByItem(t.products, (p) => p.item);\n    return t;\n  }, [gameData, rows]);\n\n  if (!totals.ingredients.length && !totals.products.length) {\n    return <div />;\n  }\n\n  return (\n    <div className={`card ${styles.TotalCard}`}>\n      <div className=\"card-header\">Combined Totals</div>\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col\">\n            Ingredients:\n            {totals.ingredients.map((ing) => (\n              <RecipePart key={ing.name} obj={ing} showName />\n            ))}\n          </div>\n          <div className=\"col\">\n            Products:\n            {totals.products.map((prod) => (\n              <RecipePart key={prod.name} obj={prod} showName />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useRecoilState, useRecoilValue, RecoilState } from 'recoil';\nimport { DropResult, DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nimport * as signal from '../signal';\nimport * as game from '../game';\nimport * as su from '../stateutil';\nimport { Rational } from '../rational';\nimport { settingsAtom, useGameData } from '../atoms';\nimport { assert } from '../util';\n\nimport { RecipeRow } from './RecipeRow';\nimport { RecipePicker } from './RecipePicker';\nimport { TotalCard } from './TotalCard';\n\nimport { RecipeGroupData, RecipeRowData } from '../state';\n\nimport styles from './RecipeGroup.module.css';\n\ninterface Props {\n  group: RecipeGroupData;\n  gameData: game.GameData;\n\n  onRenameGroup(newName: string): void;\n  onCloneGroup(newName: string): void;\n  onRemoveGroup(): void;\n\n  onAddRow(recipe: game.Recipe): void;\n  onMoveRow(oldIndex: number, newIndex: number): void;\n  onUpdateRow(data: RecipeRowData): void;\n  onRemoveRow(recipe: game.Recipe): void;\n}\n\nclass RawRecipeGroup extends React.PureComponent<Props, never> {\n  componentDidMount(): void {\n    signal.addRecipeRow.addHandler(this.props.onAddRow);\n  }\n\n  componentDidUpdate(oldProps: Props, oldState: never): void {\n    if (this.props.onAddRow !== oldProps.onAddRow) {\n      signal.addRecipeRow.removeHandler(oldProps.onAddRow);\n      signal.addRecipeRow.addHandler(this.props.onAddRow);\n    }\n  }\n\n  componentWillUnmount(): void {\n    signal.addRecipeRow.removeHandler(this.props.onAddRow);\n  }\n\n  handleDragEnd = (result: DropResult): void => {\n    if (!result.destination) {\n      return;\n    }\n    if (result.source.index !== result.destination.index) {\n      this.props.onMoveRow(result.source.index, result.destination.index);\n    }\n  };\n\n  renderRow = (data: RecipeRowData, index: number): React.ReactNode => {\n    return (\n      <RecipeRow\n        key={data.recipe.name}\n        index={index}\n        data={data}\n        onUpdateRow={this.props.onUpdateRow}\n        onRemoveRow={this.props.onRemoveRow}\n      />\n    );\n  };\n\n  handleClickRename = (): void => {\n    const name = prompt('Whatcha wanna call it now?', this.props.group.name);\n    if (name) {\n      this.props.onRenameGroup(name);\n    }\n  };\n\n  handleClickClone = (): void => {\n    const name = prompt('Whatcha wanna call it now?', this.props.group.name);\n    if (name) {\n      this.props.onCloneGroup(name);\n    }\n  };\n\n  handleClickDelete = (): void => {\n    if (this.props.group.rows.length) {\n      if (\n        !window.confirm(\n          `Are you sure you want to delete ${this.props.group.name}`\n        )\n      ) {\n        return;\n      }\n    }\n    this.props.onRemoveGroup();\n  };\n\n  render(): React.ReactNode {\n    const gd = this.props.gameData;\n    const availableRecipes = gd.recipes.filter((recipe) => {\n      return !this.props.group.rows.some((row) => row.recipe === recipe);\n    });\n\n    return (\n      <div className={styles.RecipeGroup}>\n        <div className=\"clearfix\">\n          <h3 className=\"float-left\">{this.props.group.name}</h3>\n          <div className=\"float-right\">\n            <div className=\"button-group\">\n              <button className=\"btn btn-info\" onClick={this.handleClickRename}>\n                Rename\n              </button>\n              <button className=\"btn btn-info\" onClick={this.handleClickClone}>\n                Clone\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={this.handleClickDelete}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n        <RecipePicker\n          recipes={availableRecipes}\n          onPickRecipe={this.props.onAddRow}\n        />\n        <hr />\n\n        <DragDropContext onDragEnd={this.handleDragEnd}>\n          <Droppable droppableId={'eyy'}>\n            {(provided) => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {this.props.group.rows.map(this.renderRow)}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        <hr />\n        <TotalCard rows={this.props.group.rows} />\n      </div>\n    );\n  }\n}\n\ninterface RecipeGroupProps {\n  groupAtom: RecoilState<RecipeGroupData>;\n  onRemoveGroup(groupAtom: RecoilState<RecipeGroupData>): void;\n}\nexport const RecipeGroup: React.FC<RecipeGroupProps> = ({\n  groupAtom,\n  onRemoveGroup,\n}) => {\n  const [group, setGroup] = useRecoilState(groupAtom);\n  const settings = useRecoilValue(settingsAtom);\n  const gameData = useGameData();\n\n  const handleRenameGroup = useCallback(\n    (newName: string) => {\n      setGroup((oldGroup) => ({\n        ...oldGroup,\n        name: newName,\n      }));\n    },\n    [setGroup]\n  );\n\n  const handleCloneGroup = useCallback((newName: string) => {\n    alert('TODO: handleCloneGroup');\n  }, []);\n\n  const handleRemoveGroup = useCallback(() => {\n    onRemoveGroup(groupAtom);\n  }, [onRemoveGroup, groupAtom]);\n\n  const handleMoveRow = useCallback(\n    (oldIndex: number, newIndex: number) => {\n      const rows = Array.from(group.rows);\n      const [removed] = rows.splice(oldIndex, 1);\n      assert(removed, `Nothing at old index: ${oldIndex}`);\n      rows.splice(newIndex, 0, removed);\n\n      setGroup((oldGroup) => ({\n        ...oldGroup,\n        rows,\n      }));\n    },\n    [group, setGroup]\n  );\n\n  const handleAddRow = useCallback(\n    (recipe: game.Recipe) => {\n      setGroup((group) => {\n        // only allow one instance of a recipe per group\n        if (group.rows.find((row) => row.recipe.name === recipe.name)) {\n          return group;\n        }\n\n        return {\n          ...group,\n          rows: [\n            ...group.rows,\n            {\n              recipe: recipe,\n              machine: su.getDefaultMachine(recipe, settings, gameData),\n              numMachines: Rational.one,\n              modules: [],\n              beaconModule: null,\n              numBeacons: 0,\n            },\n          ],\n        };\n      });\n    },\n    [settings, gameData, setGroup]\n  );\n\n  const handleUpdateRow = useCallback(\n    (data: RecipeRowData) => {\n      setGroup((group) => ({\n        ...group,\n        rows: group.rows.map((r) => (r.recipe === data.recipe ? data : r)),\n      }));\n    },\n    [setGroup]\n  );\n\n  const handleRemoveRow = useCallback(\n    (recipe: game.Recipe) => {\n      setGroup((group) => ({\n        ...group,\n        rows: group.rows.filter((r) => r.recipe !== recipe),\n      }));\n    },\n    [setGroup]\n  );\n\n  return (\n    <RawRecipeGroup\n      group={group}\n      gameData={gameData}\n      onRenameGroup={handleRenameGroup}\n      onCloneGroup={handleCloneGroup}\n      onRemoveGroup={handleRemoveGroup}\n      onAddRow={handleAddRow}\n      onMoveRow={handleMoveRow}\n      onUpdateRow={handleUpdateRow}\n      onRemoveRow={handleRemoveRow}\n    />\n  );\n};\n","import React, { useCallback, useMemo } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport * as game from '../game';\n\nimport { settingsAtom, useGameData } from '../atoms';\nimport { AppSettingsData } from '../state';\nimport { getDefaultMachine } from '../stateutil';\n\nimport { MachinePicker } from './MachinePicker';\n\nexport const Settings: React.FC<{}> = () => {\n  const gameData = useGameData();\n  const [settings, setSettings] = useRecoilState(settingsAtom);\n\n  const handleSetDefaultMachine = useCallback(\n    (category: string, machine: game.AssemblingMachine) => {\n      setSettings((settings) => ({\n        ...settings,\n        assemblerOverrides: {\n          ...settings.assemblerOverrides,\n          [category]: machine,\n        },\n      }));\n    },\n    [setSettings]\n  );\n\n  const categoryNames: string[] = useMemo(() => {\n    const names = Object.entries(gameData.categoryMap)\n      .filter((entry) => entry[1].length > 1)\n      .map((entry) => entry[0]);\n\n    names.sort((a, b) => a.localeCompare(b));\n    return names;\n  }, [gameData]);\n\n  return (\n    <div>\n      <h3>Default Assemblers</h3>\n      {categoryNames.map((name) => (\n        <CategoryRow\n          gameData={gameData}\n          settings={settings}\n          key={name}\n          category={name}\n          onSetDefaultMachine={handleSetDefaultMachine}\n        />\n      ))}\n    </div>\n  );\n};\n\ninterface CategoryRowProps {\n  category: string;\n  gameData: game.GameData;\n  settings: AppSettingsData;\n  onSetDefaultMachine(category: string, machine: game.AssemblingMachine): void;\n}\n\nclass CategoryRow extends React.PureComponent<CategoryRowProps, never> {\n  handleChange = (machine: game.AssemblingMachine): void => {\n    this.props.onSetDefaultMachine(this.props.category, machine);\n  };\n\n  render(): React.ReactNode {\n    const machines = this.props.gameData.categoryMap[this.props.category] || [];\n    const selected = getDefaultMachine(\n      this.props.category,\n      this.props.settings,\n      this.props.gameData\n    );\n    return (\n      <div className=\"btn-toolbar mb-3\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">{this.props.category}</span>\n          </div>\n          <div className=\"input-group-append btn-icon-wrapper\">\n            <MachinePicker\n              machines={machines}\n              selected={selected}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useCallback } from 'react';\nimport { atom, useSetRecoilState } from 'recoil';\n\nimport { RecipeGroupData } from './state';\nimport { groupAtomsAtom } from './atoms';\n\nlet groupId = 0;\n\nexport interface AddGroupAction {\n  (group: RecipeGroupData): void;\n}\nexport const useGroupAdd = (): AddGroupAction => {\n  const setGroupAtoms = useSetRecoilState(groupAtomsAtom);\n\n  return useCallback(\n    function (group: RecipeGroupData): void {\n      setGroupAtoms((atoms) => [\n        ...atoms,\n        atom<RecipeGroupData>({\n          key: `group-${++groupId}`,\n          default: group,\n        }),\n      ]);\n    },\n    [setGroupAtoms]\n  );\n};\n","import React, { useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useRecoilValue, useSetRecoilState, RecoilState } from 'recoil';\n\nimport { RecipeGroup } from './RecipeGroup';\nimport { Settings } from './Settings';\n\nimport { useGroupAdd, AddGroupAction } from '../actions';\nimport { groupAtomsAtom, groupsState, GroupAtom } from '../atoms';\nimport { RecipeGroupData } from '../state';\nimport { GameData } from '../game';\nimport { assert, assertNever } from '../util';\n\nimport styles from './App.module.css';\n\ninterface Props {\n  gameData: GameData;\n  groups: [RecipeGroupData, GroupAtom][];\n  onAddGroup: AddGroupAction;\n  onRemoveGroupAtom(groupAtom: GroupAtom): void;\n}\n\ninterface State {\n  activePage: 'settings' | GroupAtom;\n}\n\nclass RawApp extends React.PureComponent<Props, State> {\n  state: State = {\n    activePage: 'settings',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n  componentWillUnmount(): void {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (event.key === 'Shift') {\n      document.body.classList.add('shift-down');\n    }\n  };\n  handleKeyUp = (event: KeyboardEvent): void => {\n    if (event.key === 'Shift') {\n      document.body.classList.remove('shift-down');\n    }\n  };\n\n  handleClickGroup = (groupAtom: GroupAtom): void => {\n    this.setState({\n      activePage: groupAtom,\n    });\n  };\n\n  handleClickAddGroup = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    event.preventDefault();\n    const defaultName = `Factory ${this.props.groups.length + 1}`;\n    const name = prompt('What do you want to name this group?', defaultName);\n    if (!name || !name.trim()) {\n      return;\n    }\n    this.props.onAddGroup({ name, rows: [] });\n  };\n\n  handleRemoveGroupAtom = (groupAtom: GroupAtom): void => {\n    if (this.state.activePage === groupAtom) {\n      for (const xy of this.props.groups) {\n        if (xy[1] !== groupAtom) {\n          this.setState({\n            activePage: xy[1],\n          });\n        }\n      }\n    }\n    this.props.onRemoveGroupAtom(groupAtom);\n  };\n\n  handleClickSettings = (): void => {\n    this.setState({\n      activePage: 'settings',\n    });\n  };\n\n  renderNavbar(): React.ReactNode {\n    const settingsActive = this.state.activePage === 'settings';\n\n    const factoryPills = this.props.groups.map(([group, groupAtom], i) => {\n      const active = this.state.activePage === groupAtom;\n      return (\n        <button\n          key={i}\n          type=\"button\"\n          className={`list-group-item list-group-item-action ${\n            active ? 'active' : ''\n          }`}\n          onClick={() => this.handleClickGroup(groupAtom)}\n        >\n          {group.name}\n        </button>\n      );\n    });\n\n    return (\n      <>\n        <ul className=\"list-group mt-3\">\n          <li className=\"list-group-item\">\n            <span role=\"img\" aria-label=\"Factory icon\">\n              🏭\n            </span>{' '}\n            Factories\n          </li>\n\n          {factoryPills}\n\n          <button\n            type=\"button\"\n            className=\"list-group-item list-group-item-action\"\n            onClick={this.handleClickAddGroup}\n          >\n            <span role=\"img\" aria-label=\"Factory icon\">\n              ＋\n            </span>{' '}\n            Add a Factory\n          </button>\n        </ul>\n\n        <ul className=\"list-group mt-3\">\n          <button\n            type=\"button\"\n            className={`list-group-item list-group-item-action ${\n              settingsActive ? 'active' : ''\n            }`}\n            onClick={this.handleClickSettings}\n          >\n            <span role=\"img\" aria-label=\"Gear icon\">\n              ⚙️\n            </span>{' '}\n            Settings\n          </button>\n        </ul>\n      </>\n    );\n  }\n\n  renderBody(): React.ReactNode {\n    if (this.state.activePage === 'settings') {\n      return <Settings />;\n    } else if (this.state.activePage) {\n      return (\n        <RecipeGroup\n          groupAtom={this.state.activePage}\n          onRemoveGroup={this.handleRemoveGroupAtom}\n        />\n      );\n    } else {\n      return assertNever(this.state.activePage);\n    }\n  }\n\n  render(): React.ReactNode {\n    assert(this.props.gameData, 'falsy gameData, should never happen');\n\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className={classNames('col col-2 bg-primary', styles.Sidebar)}>\n            {this.renderNavbar()}\n          </div>\n          <div className=\"col pt-3\">{this.renderBody()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const App: React.FC<{\n  gameData: GameData;\n}> = ({ gameData }) => {\n  const groups = useRecoilValue(groupsState);\n\n  const setGroupAtoms = useSetRecoilState(groupAtomsAtom);\n\n  const handleAddGroup = useGroupAdd();\n\n  const handleRemoveGroupAtom = useCallback(\n    (groupAtom: RecoilState<RecipeGroupData>) => {\n      setGroupAtoms((atoms) => atoms.filter((a) => a !== groupAtom));\n    },\n    [setGroupAtoms]\n  );\n\n  return (\n    <RawApp\n      gameData={gameData}\n      groups={groups}\n      onAddGroup={handleAddGroup}\n      onRemoveGroupAtom={handleRemoveGroupAtom}\n    />\n  );\n};\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { atom, useRecoilValue, useSetRecoilState } from 'recoil';\n\nimport * as game from '../game';\nimport { groupsState, groupAtomsAtom, settingsAtom } from '../atoms';\nimport { CompleteState, RecipeGroupData } from '../state';\nimport * as serialization from '../serialization';\n\nimport { App } from './App';\n\ninterface RawAppLoaderProps {\n  gameData: game.GameData;\n  onSetPreviousState(state: CompleteState): void;\n}\n\ninterface State {\n  loaded: boolean;\n}\n\nclass RawAppLoader extends React.PureComponent<RawAppLoaderProps, State> {\n  state: State = {\n    loaded: false,\n  };\n\n  componentDidMount(): void {\n    this.load().then(\n      () => {\n        this.setState({ loaded: true });\n      },\n      (err) => {\n        this.setState(() => {\n          throw err;\n        });\n      }\n    );\n  }\n\n  getPreviousState(): CompleteState | undefined {\n    const urlState = serialization.getUrlState(this.props.gameData);\n    if (urlState) return urlState;\n\n    try {\n      const storageState = serialization.getLocalStorageState(\n        this.props.gameData\n      );\n      if (storageState) return storageState;\n    } catch (err) {\n      console.error('Failed to load local storage state', err);\n    }\n  }\n\n  async load(): Promise<void> {\n    const previousState = this.getPreviousState();\n    if (!previousState) return;\n\n    this.props.onSetPreviousState(previousState);\n  }\n\n  render(): React.ReactNode {\n    if (!this.state.loaded) {\n      return <h1>Loading...</h1>;\n    }\n    const sheet = `${process.env.PUBLIC_URL}/assets/sprite-sheet-${this.props.gameData.spriteHash}.png`;\n    const style = `\n        .game-icon {\n            background-image: url(${sheet});\n        }\n        `;\n    return (\n      <>\n        <StateWriter gameData={this.props.gameData} />\n        <Prefetch href={sheet} />\n        <style>{style}</style>\n        <App gameData={this.props.gameData} />\n      </>\n    );\n  }\n}\n\nconst StateWriter: React.FC<{ gameData: game.GameData }> = ({ gameData }) => {\n  const groups = useRecoilValue(groupsState);\n  const settings = useRecoilValue(settingsAtom);\n  const initialRender = useRef(true);\n\n  useEffect(() => {\n    // don't waste time re-writing state from the initial render\n    if (initialRender.current) {\n      initialRender.current = false;\n      return;\n    }\n    const completeState: CompleteState = {\n      groups: groups.map((g) => g[0]),\n      settings: settings,\n    };\n    serialization.setUrlState(completeState, gameData);\n    serialization.setLocalStorageState(completeState, gameData);\n  }, [gameData, groups, settings]);\n\n  return null;\n};\n\nconst Prefetch: React.FC<{ href: string }> = (props) => {\n  return ReactDOM.createPortal(\n    <link rel=\"prefetch\" href={props.href} />,\n    document.head\n  );\n};\n\ninterface AppLoaderProps {\n  gameData: game.GameData;\n}\n\nexport const AppLoader: React.FC<AppLoaderProps> = ({ gameData }) => {\n  const setGroupAtoms = useSetRecoilState(groupAtomsAtom);\n  const setSettings = useSetRecoilState(settingsAtom);\n\n  const handleSetPreviousState = useCallback(\n    (state: CompleteState) => {\n      let i = 0;\n      setGroupAtoms(\n        state.groups.map((group) => {\n          return atom<RecipeGroupData>({\n            key: `group-${Date.now()}-${i++}`,\n            default: group,\n          });\n        })\n      );\n      setSettings(state.settings);\n    },\n    [setGroupAtoms, setSettings]\n  );\n\n  return (\n    <RawAppLoader\n      gameData={gameData}\n      onSetPreviousState={handleSetPreviousState}\n    />\n  );\n};\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport usePromise from 'react-use-promise';\n\nimport { gameDataAtom } from '../atoms';\n\nimport { GameData } from '../game';\n\ninterface Props {\n  child(gameData: GameData): React.ReactElement;\n}\n\nconst datasets = {\n  'kras-18': 'Krastorio2 for 1.0.0',\n  'seablock-17': 'Seablock for 0.17',\n} as const;\n\nasync function loadGameData(\n  filename: keyof typeof datasets\n): Promise<GameData> {\n  const response = await fetch(\n    `${process.env.PUBLIC_URL}/assets/${filename}.json`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(\n      `Could not load game data, got HTTP status ${response.status}`\n    );\n  }\n\n  let parsed;\n  try {\n    parsed = await response.json();\n  } catch (err) {\n    throw new Error(`Could not parse game data: ${err}`);\n  }\n  const gameData = new GameData(parsed);\n  return gameData;\n}\n\nexport const GameDataLoader: React.FC<Props> = ({ child }) => {\n  const setGameState = useRecoilState(gameDataAtom)[1];\n\n  const [gameData, error, status] = usePromise<GameData | null>(async () => {\n    const gameData = await loadGameData('kras-18');\n    setGameState(gameData);\n    return gameData;\n  }, []);\n\n  if (status === 'pending') {\n    return <h3>Loading game data...</h3>;\n  } else if (status === 'rejected') {\n    return (\n      <div>\n        <h3>Error loading game data!</h3>\n        <pre>{String(error)}</pre>\n      </div>\n    );\n  } else if (gameData) {\n    return child(gameData);\n  } else {\n    throw new Error('Somehow missing gamedata');\n  }\n};\n\nexport default GameDataLoader;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\n\nimport { ErrorCatcher } from './components/ErrorCatcher';\nimport { AppLoader } from './components/AppLoader';\nimport { GameDataLoader } from './components/GameDataLoader';\n\nimport './index.css';\n\nReactDOM.render(\n  <ErrorCatcher>\n    <RecoilRoot>\n      <GameDataLoader child={(gameData) => <AppLoader gameData={gameData} />} />\n    </RecoilRoot>\n  </ErrorCatcher>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}