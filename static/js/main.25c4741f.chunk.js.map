{"version":3,"sources":["components/ErrorCatcher.tsx","util.ts","rational.ts","game.ts","stateutil.ts","state.tsx","serialization.ts","signal.ts","components/generic/Dropdown.tsx","components/generic/Tooltip.tsx","components/generic/IntegerInput.tsx","components/generic/RationalInput.tsx","components/Icon.tsx","components/MachineCard.tsx","components/RecipeCard.tsx","components/MachinePicker.tsx","components/ModuleCard.tsx","components/ModulePicker.tsx","totals.ts","components/RecipeRow.tsx","components/RecipePicker.tsx","components/TotalCard.tsx","components/App.tsx","components/RecipeGroup.tsx","components/Settings.tsx","components/AppLoader.tsx","index.tsx"],"names":["ErrorCatcher","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","crashMsg","undefined","inherits","createClass","key","value","error","errorInfo","crash","componentStack","stack","join","Sentry","scope","keys","forEach","setExtra","msg","setState","react","className","children","React","assert","check","message","Error","mapValues","obj","fn","ret","values","push","clone","orig","assign","create","round2","num","places","mag","Math","pow","round","num_divmod","a","b","Number","isSafeInteger","quotient","floor","remainder","Rational","p","q","toString","div","num_gcd","divmod","result","less","zero","sub","one","other","fromFloat","min","max","mul","maxDigits","roundingFactor","sign","x","isNegative","negate","add","integerPart","decimalPart","fraction","ten","equal","length","slice","isInteger","r","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","lookups","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","err","return","str","index","indexOf","fromInts","oneThird","twoThirds","rounded","floored","BaseDisplayable","data","name","localised_name","icon_col","icon_row","en","BaseItem","d","raw","usedBy","madeBy","Module","_BaseItem","_this2","type","limitedTo","effects","Set","limitation","speed","effect","bonus","productivity","consumption","pollution","recipe","size","has","GenericItem","Fluid","_BaseItem3","_this4","default_temperature","BaseIngredient","amount","ItemIngredient","_BaseIngredient","gd","_this5","item","itemMap","concat","toDecimal","niceName","FluidIngredient","_BaseIngredient2","_this6","minimum_temperature","maximum_temperature","fluidMap","Infinity","range","BaseProduct","amount_min","amount_max","probability","ItemProduct","_BaseProduct","_this7","ingredient","FluidProduct","_BaseProduct2","_this8","temperature","console","temp","Recipe","_BaseDisplayable2","_this9","category","ingredients","products","crafting_time","madeIn","energy_required","map","results","get","prototype","AssemblingMachine","_BaseEntity","apply","arguments","crafting_categories","BaseEntity","createCategoryMap","entities","catMap","entity","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","hasOwnProperty","GameData","_this10","items","fluids","modules","moduleMap","recipes","recipeMap","entityMap","categoryMap","groupCollapsed","addOfType","ctor","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","edata","itemName","thing","fluid","recipeName","entityName","canBuildRecipe","some","isPositive","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","debug","warn","log","groupEnd","groupOrder","subgroupOrder","group","groups","order","subgroups","subgroup","collection","keyFn","_this11","sort","ordersA","getItemOrder","ordersB","i","valA","valB","getDefaultMachine","input","defaultMachine","game","settings","assemblerOverrides","gameData","defaultState","fakeGameData","rows","activeGroupIdx","recipeTarget","getActiveGroup","updateGroup","newGroup","oldGroup","objectSpread","createDakpan","replaceState","newState","addRow","row","toConsumableArray","updateRow","updates","Array","from","removeRow","splice","moveRow","oldIndex","newIndex","_rows$splice","removed","updateDefaultMachine","newMachine","oldMachine","machine","defineProperty","setActiveGroup","groupIdx","addGroup","removeGroup","maxIndex","setRecipeTarget","StateProvider","useDakpan","withBoth","OldComponent","_useDakpan","_useDakpan2","actions","react_default","createElement","withGame","_useDakpan3","groupv4to5","getLocalStorageState","statestr","localStorage","getItem","stateobj","JSON","parse","version","deserialize","serialize","machineName","numMachines","toFraction","m","beaconModule","numBeacons","reStateUrl","getUrlState","matches","exec","document","location","hash","decodeURIComponent","inflate","atob","to","migrateSerializedState","state1to2","state2to3","state3to4","state4to5","unmigrated","migrated","deserializeSettings","_ref","fromString","n","serialized","Signal","handlers","dispatch","arg","handler","addIngredientFilter","addProductFilter","addRecipeRow","ESC_KEYCODE","Dropdown","buttonRef","handleToggle","isOpen","handleSelect","selected","onSelect","handleWantClose","floater","canToggle","options","option","disabled","classes","Dropdown_DropdownMenu","parentRef","renderOption","onWantClose","ref","onClick","renderSelected","DropdownMenu","_this3","popperInstance","menuRef","popperUpdate","style","styles","handleBodyClick","event","current","target","contains","handleKeyEvent","keyCode","renderOptions","header","active","referenceEl","menuEl","Popper","modifiers","applyStyle","enabled","updateStateWithStyle","body","addEventListener","disableEventListeners","removeEventListener","Tooltip","selfRef","handleMouseEnter","showSelf","handleMouseLeave","zIndex","relativeTo","selfEl","placement","offset","preventOverflow","boundariesElement","_","prevState","initPopper","cleanupPopper","ReactDOM","IntegerInput","_React$PureComponent","handleChange","txtValue","trim","intOnly","positiveOnly","onChange","step","RationalInput","lastIndexOf","rational","Icon","iconRef","y","divStyle","display","backgroundPosition","width","height","icon","title","tooltip","Tooltip_Tooltip","text","lineHeight","marginLeft","MachineCard","crafting_speed","module_slots","RecipeCard","Icon_Icon","product","MachineCard_MachineCard","sprites","extra","float","clear","MachinePicker","machines","Dropdown_Dropdown","ModuleCard","module","bonuses","bonusName","ModulePicker","slot_icon_module","nomod","rocket_launch_products","filter","isBeacon","canUseWith","unshift","ModuleCard_ModuleCard","Totals","addIngredient","newIng","oldIng","match","addProduct","newProd","oldProd","be","clamp","ingredientMult","invert","productMult","isZero","satisfies","IngredientCard","RecipeRow","handleRemoveClick","handleMachineChange","applyChange","handleNumMachinesChange","handleNumBeaconsChange","handleSetAllModules","fill","handleSetModule","handleSetBeaconModule","handleIngredientClick","shiftKey","preventDefault","signal","handleProductClick","handleInputGroupClick","output","getOutput","find","newNum","change","t","numSlots","slots","_loop","IntegerInput_IntegerInput","RationalInput_RationalInput","MachinePicker_MachinePicker","bind","RecipeRow_IngredientCard","react_beautiful_dnd_esm","draggableId","provided","innerRef","draggableProps","dragHandleProps","renderMachines","renderModules","renderBeacons","minWidth","getFn","RE_ADVANCED","RecipePicker","term","query","includes","setQuery","calculateMatches","handleQueryInput","handleRecipeClick","onPickRecipe","callback","debCalculateMatches","cancel","debounce","assertThisInitialized","addHandler","removeHandler","toLowerCase","conditions","consumes","produces","replace","v","_ret","_loop2","_ret2","Fuse","shouldSort","weight","search","RecipePicker_RecipeMatch","placeholder","renderMatches","card","RecipeMatch","handleClickAdd","ing","prod","ActivePage","TotalCard","totals","_totals$reduce","reduce","sortByItem","RecipeGroup","handlePickRecipe","su","handleDragEnd","destination","source","renderRow","availableRecipes","RecipePicker_RecipePicker","onDragEnd","droppableId","droppableProps","RawSettings","categoryNames","entries","entry","localeCompare","CategoryRow","Settings","App","RawApp","handleKeyDown","classList","handleKeyUp","remove","handleClickSettings","activePage","handleClickGroup","Factory","handleClickAddGroup","defaultName","prompt","handleClickRemoveGroup","window","confirm","renderNavbar","settingsActive","factoryPills","cls","role","settingsCls","aria-label","renderFactory","renderSettings","assertNever","RawAppLoader","load","catch","fetch","response","status","json","parsed","_context","t0","urlState","serialization","storageState","sheet","Fragment","AppLoader_StateWriter","AppLoader_Prefetch","href","Component","StateWriter","useEffect","stringify","btoa","deflate","history","setItem","Prefetch","rel","head","AppLoader","dsn","ErrorCatcher_ErrorCatcher","getElementById"],"mappings":"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","file":"static/js/main.25c4741f.chunk.js","sourcesContent":["import * as React from 'react';\nimport * as Sentry from '@sentry/browser';\n\ninterface Props {}\n\ninterface State {\n    crashMsg?: string;\n}\n\nexport class ErrorCatcher extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            crashMsg: undefined,\n        };\n    }\n\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n        // Catch errors in any components below and re-render with error message\n        this.crash(\n            [\n                'Component Stack:',\n                errorInfo.componentStack,\n                '',\n                error && error.stack,\n            ].join('\\n')\n        );\n\n        Sentry.withScope((scope) => {\n            Object.keys(errorInfo).forEach((key) => {\n                scope.setExtra(key, errorInfo[key as keyof React.ErrorInfo]);\n            });\n            Sentry.captureException(error);\n        });\n    }\n\n    crash(msg: string) {\n        this.setState({\n            crashMsg: msg,\n        });\n    }\n\n    render() {\n        if (typeof this.state.crashMsg !== 'undefined') {\n            return (\n                <div className=\"crashed\">\n                    <h1>Crashed!</h1>\n                    <pre>{this.state.crashMsg}</pre>\n                </div>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n","export function assert(check: any, message?: string): void {\n    if (!check) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n\nexport function assertNever(x: never): never {\n    throw new Error('Unexpected object: ' + x);\n}\n\nexport function mapValues<T, V>(\n    obj: { [s: string]: T },\n    fn: (v: T) => V\n): { [s: string]: V } {\n    let ret: { [key: string]: V } = {};\n    for (let key in obj) {\n        ret[key] = fn(obj[key]);\n    }\n    return ret;\n}\n\nexport function values<T>(obj: { [s: string]: T }): T[] {\n    const values = [];\n    for (let key in obj) {\n        values.push(obj[key]);\n    }\n    return values;\n}\n\nexport function clone<T>(orig: T): T {\n    return Object.assign(Object.create(Object.getPrototypeOf(orig)), orig);\n}\n\nexport function round2(num: number, places: number) {\n    const mag = Math.pow(10, places);\n    return Math.round(num * mag) / mag;\n}\n","import { assert } from './util';\n\nfunction num_gcd(a: number, b: number): number {\n    return !b ? a : num_gcd(b, a % b);\n}\n\nfunction num_divmod(a: number, b: number) {\n    assert(Number.isSafeInteger(a));\n    assert(Number.isSafeInteger(b));\n\n    return {\n        quotient: Math.floor(a / b),\n        remainder: a % b,\n    };\n}\n\nconst FLOAT_CONVERT_PRECISION = 10000;\n\nexport class Rational {\n    p: number;\n    q: number;\n\n    constructor(p: number, q: number) {\n        assert(Number.isSafeInteger(p), 'Numerator must be an integer');\n        assert(Number.isSafeInteger(q), 'Denominator must be an integer');\n        assert(q !== 0, 'Denominator must not be zero');\n\n        if (q < 0) {\n            p = -p;\n            q = -q;\n        }\n\n        if (p === 0) {\n            q = 1;\n        }\n\n        const div = num_gcd(p, q);\n        if (div > 1) {\n            p = p / div;\n            q = q / div;\n        }\n        this.p = p;\n        this.q = q;\n    }\n\n    //\n    // Operations returning Rational\n    //\n    floor() {\n        const divmod = num_divmod(this.p, this.q);\n        let result = new Rational(divmod.quotient, 1);\n        if (result.less(Rational.zero) && divmod.remainder !== 0) {\n            result = result.sub(Rational.one);\n        }\n        return result;\n    }\n\n    negate() {\n        return new Rational(-this.p, this.q);\n    }\n\n    invert() {\n        return new Rational(this.q, this.p);\n    }\n\n    add(other: Rational) {\n        return new Rational(\n            this.p * other.q + this.q * other.p,\n            this.q * other.q\n        );\n    }\n\n    sub(other: Rational) {\n        return new Rational(\n            this.p * other.q - this.q * other.p,\n            this.q * other.q\n        );\n    }\n\n    mul(other: Rational | number): Rational {\n        if (typeof other == 'number') {\n            other = Rational.fromFloat(other);\n        }\n        return new Rational(this.p * other.p, this.q * other.q);\n    }\n\n    div(other: Rational) {\n        return new Rational(this.p * other.q, this.q * other.p);\n    }\n\n    clamp(min: Rational | number, max: Rational | number) {\n        if (typeof min == 'number') {\n            min = Rational.fromFloat(min);\n        }\n        if (typeof max == 'number') {\n            max = Rational.fromFloat(max);\n        }\n\n        if (this.less(min)) return min;\n        if (max.less(this)) return max;\n        return this;\n    }\n\n    //\n    // Operations NOT returning Rational\n    //\n    divmod(other: Rational) {\n        var quotient = this.div(other);\n        var div = quotient.floor();\n        var mod = this.sub(other.mul(div));\n        return { quotient: div, remainder: mod };\n    }\n\n    equal(other: Rational) {\n        return this.p === other.p && this.q === other.q;\n    }\n\n    isNegative() {\n        return this.p < 0;\n    }\n    isPositive() {\n        return this.p > 0;\n    }\n\n    isOne() {\n        return this.p === 1;\n    }\n\n    isZero() {\n        return this.p === 0;\n    }\n\n    less(other: Rational) {\n        return this.p * other.q < this.q * other.p;\n    }\n\n    toFloat() {\n        return this.p / this.q;\n    }\n\n    // Disabled to force choice between toFraction and toDecimal\n    toString: null;\n\n    toFraction() {\n        if (this.q === 1) {\n            return this.p.toString();\n        }\n        return this.p.toString() + '/' + this.q.toString();\n    }\n\n    toDecimal(maxDigits?: number, roundingFactor?: Rational) {\n        if (maxDigits == null) {\n            maxDigits = 3;\n        }\n        if (roundingFactor == null) {\n            roundingFactor = new Rational(5, 10 ** (maxDigits + 1));\n        }\n\n        let sign = '';\n        let x: Rational = this;\n        if (x.isNegative()) {\n            sign = '-';\n            x = x.negate();\n        }\n        x = x.add(roundingFactor);\n        let divmod = num_divmod(x.p, x.q);\n        var integerPart = divmod.quotient.toString();\n        var decimalPart = '';\n        var fraction = new Rational(divmod.remainder, x.q);\n        let ten = new Rational(10, 1);\n        while (maxDigits > 0 && !fraction.equal(roundingFactor)) {\n            fraction = fraction.mul(ten);\n            roundingFactor = roundingFactor.mul(ten);\n            let divmod = num_divmod(fraction.p, fraction.q);\n            decimalPart += divmod.quotient.toString();\n            fraction = new Rational(divmod.remainder, fraction.q);\n            maxDigits--;\n        }\n        if (fraction.equal(roundingFactor)) {\n            while (decimalPart[decimalPart.length - 1] === '0') {\n                decimalPart = decimalPart.slice(0, decimalPart.length - 1);\n            }\n        }\n        if (decimalPart !== '') {\n            return sign + integerPart + '.' + decimalPart;\n        }\n        return sign + integerPart;\n    }\n\n    //\n    // Statics\n    //\n    static fromFloat(num: number) {\n        if (Number.isInteger(num)) {\n            return new this(num, 1);\n        }\n\n        // Sufficient precision for our data?\n        const r = new Rational(\n            Math.round(num * FLOAT_CONVERT_PRECISION),\n            FLOAT_CONVERT_PRECISION\n        );\n\n        const divmod = r.divmod(Rational.one);\n        for (const [key, value] of lookups) {\n            if (divmod.remainder.equal(key)) {\n                return divmod.quotient.add(value);\n            }\n        }\n\n        return r;\n    }\n    static fromInts(p: number, q: number) {\n        return new this(p, q);\n    }\n    static fromString(str: string) {\n        const index = str.indexOf('/');\n        if (index === -1) {\n            return Rational.fromFloat(Number(str));\n        } else {\n            const p = Number(str.slice(0, index));\n            const q = Number(str.slice(index + 1));\n            return Rational.fromInts(p, q);\n        }\n    }\n\n    static zero = new Rational(0, 1);\n    static one = new Rational(1, 1);\n    static oneThird = new Rational(1, 3);\n    static twoThirds = new Rational(2, 3);\n}\n\nconst lookups: [Rational, Rational][] = [];\n\nfor (let q = 2; q < 100; q++) {\n    for (let p = 1; p < q; p++) {\n        const num = p / q;\n\n        // Is there a better way to quickly filter out non-repeating decimals?\n        if (num.toString().length < 10) {\n            continue;\n        }\n\n        // Support computer input, use proper rounding\n        const rounded = new Rational(\n            Math.round(num * FLOAT_CONVERT_PRECISION),\n            FLOAT_CONVERT_PRECISION\n        );\n        lookups.push([rounded, Rational.fromInts(p, q)]);\n\n        // Support human input, who just leave off the end after a while\n        const floored = new Rational(\n            Math.floor(num * FLOAT_CONVERT_PRECISION),\n            FLOAT_CONVERT_PRECISION\n        );\n        lookups.push([floored, Rational.fromInts(p, q)]);\n    }\n}\n","import { Rational } from './rational';\nimport { assert, values } from './util';\n\nimport * as schema from './schema';\n\ntype LocalisedName = schema.LocalisedName;\n\ninterface IBaseDisplayable {\n    name: string;\n    localised_name: LocalisedName;\n    icon_col: number;\n    icon_row: number;\n}\n\nexport class BaseDisplayable {\n    name: string;\n    localised_name: LocalisedName;\n    icon_col: number;\n    icon_row: number;\n\n    constructor(data: IBaseDisplayable) {\n        this.name = data.name;\n        this.localised_name = data.localised_name;\n        this.icon_col = data.icon_col;\n        this.icon_row = data.icon_row;\n    }\n\n    niceName() {\n        return this.localised_name.en;\n    }\n}\n\nabstract class BaseItem<T extends schema.Item> extends BaseDisplayable {\n    raw: T;\n    usedBy: Recipe[] = [];\n    madeBy: Recipe[] = [];\n\n    constructor(d: T) {\n        super(d);\n        this.raw = d;\n        this.name = d.name;\n        this.localised_name = d.localised_name;\n        this.icon_col = d.icon_col;\n        this.icon_row = d.icon_row;\n    }\n}\n\nexport class Module extends BaseItem<schema.ModuleItem> {\n    type: 'module';\n    limitedTo: Set<string>;\n    effects: {\n        speed: Rational;\n        productivity: Rational;\n        consumption: Rational;\n        pollution: Rational;\n    };\n\n    constructor(d: schema.ModuleItem) {\n        super(d);\n        this.type = d.type;\n        this.limitedTo = new Set(d.limitation);\n\n        this.effects = {\n            speed: Rational.fromFloat((d.effect.speed || { bonus: 0 }).bonus),\n            productivity: Rational.fromFloat(\n                (d.effect.productivity || { bonus: 0 }).bonus\n            ),\n            consumption: Rational.fromFloat(\n                (d.effect.consumption || { bonus: 0 }).bonus\n            ),\n            pollution: Rational.fromFloat(\n                (d.effect.pollution || { bonus: 0 }).bonus\n            ),\n        };\n    }\n\n    canUseWith(recipe: Recipe) {\n        if (this.limitedTo.size === 0) {\n            return true;\n        }\n\n        return this.limitedTo.has(recipe.name);\n    }\n}\n\nclass GenericItem extends BaseItem<schema.Item> {\n    type: 'generic' = 'generic';\n}\n\nexport type Item = Module | GenericItem;\n\nexport class Fluid extends BaseItem<schema.FluidItem> {\n    default_temperature: number;\n    type: 'fluid' = 'fluid';\n\n    constructor(d: schema.FluidItem) {\n        super(d);\n        this.default_temperature = d.default_temperature;\n    }\n}\n\nabstract class BaseIngredient {\n    name: string;\n    amount: Rational;\n\n    constructor(d: schema.Ingredient) {\n        this.name = d.name;\n        this.amount = Rational.fromFloat(d.amount);\n    }\n}\n\nexport class ItemIngredient extends BaseIngredient {\n    type: 'item' = 'item';\n    item: Item;\n\n    constructor(d: schema.Ingredient, gd: GameData) {\n        super(d);\n        this.item = gd.itemMap[d.name];\n    }\n\n    niceName() {\n        return `${this.amount.toDecimal()} × ${this.item.niceName()}`;\n    }\n}\n\nexport class FluidIngredient extends BaseIngredient {\n    type: 'fluid' = 'fluid';\n    item: Fluid;\n    minimum_temperature: number;\n    maximum_temperature: number;\n\n    constructor(d: schema.Ingredient, gd: GameData) {\n        super(d);\n        this.item = gd.fluidMap[d.name];\n\n        this.minimum_temperature = d.minimum_temperature || -Infinity;\n        this.maximum_temperature = d.maximum_temperature || Infinity;\n\n        if (this.maximum_temperature >= 1.797e308) {\n            this.maximum_temperature = Infinity;\n        }\n        if (this.minimum_temperature <= -1.797e308) {\n            this.minimum_temperature = -Infinity;\n        }\n    }\n\n    niceName() {\n        const min = this.minimum_temperature;\n        const max = this.maximum_temperature;\n        let range = '';\n        if (min !== -Infinity && max !== Infinity) {\n            range = ` (${min}° – ${max}°)`;\n        } else if (max !== Infinity) {\n            range = ` (≤ ${max}°)`;\n        } else if (min !== -Infinity) {\n            range = ` (≥ ${max}°)`;\n        }\n        return `${this.amount.toDecimal()} × ${this.item.niceName()}${range}`;\n    }\n}\n\nexport type Ingredient = ItemIngredient | FluidIngredient;\n\nabstract class BaseProduct {\n    name: string;\n    amount: Rational;\n\n    constructor(d: schema.Product) {\n        this.name = d.name;\n\n        let amount;\n        if ('amount' in d) {\n            amount = Rational.fromFloat(d.amount);\n        } else {\n            amount = Rational.fromInts(d.amount_min + d.amount_max, 2);\n        }\n\n        if (typeof d.probability == 'number') {\n            if (d.probability === 0) {\n                amount = Rational.zero;\n            } else if (d.probability !== 1) {\n                assert(d.probability > 0);\n                assert(d.probability < 1);\n                amount = amount.mul(Rational.fromFloat(d.probability));\n            }\n        }\n        this.amount = amount;\n    }\n}\n\nexport class ItemProduct extends BaseProduct {\n    type: 'item' = 'item';\n    item: Item;\n\n    constructor(d: schema.Product, gd: GameData) {\n        super(d);\n        this.item = gd.itemMap[d.name];\n    }\n\n    niceName() {\n        return `${this.amount.toDecimal()} × ${this.item.niceName()}`;\n    }\n\n    satisfies(ingredient: Ingredient) {\n        return ingredient.type === 'item' && ingredient.item === this.item;\n    }\n}\n\nexport class FluidProduct extends BaseProduct {\n    type: 'fluid' = 'fluid';\n    item: Fluid;\n    temperature: number;\n\n    constructor(d: schema.Product, gd: GameData) {\n        super(d);\n        this.item = gd.fluidMap[d.name];\n        if (!this.item) {\n            console.error('could not find item', d);\n        }\n        this.temperature = d.temperature || this.item.default_temperature;\n    }\n\n    niceName() {\n        let temp = '';\n        if (this.temperature !== this.item.default_temperature) {\n            temp = ` (${this.temperature}°)`;\n        }\n        return `${this.amount.toDecimal()} × ${this.item.niceName()}${temp}`;\n    }\n\n    satisfies(ingredient: Ingredient) {\n        return (\n            ingredient.type === 'fluid' &&\n            ingredient.item === this.item &&\n            ingredient.maximum_temperature >= this.temperature &&\n            ingredient.minimum_temperature <= this.temperature\n        );\n    }\n}\n\nexport type Product = ItemProduct | FluidProduct;\n\nexport class Recipe extends BaseDisplayable {\n    category: string;\n    ingredients: Ingredient[];\n    products: Product[];\n    crafting_time: Rational;\n\n    madeIn: AssemblingMachine[] = [];\n\n    constructor(d: schema.Recipe, gd: GameData) {\n        super(d);\n        this.name = d.name;\n        this.category = d.category;\n        this.crafting_time = Rational.fromFloat(d.energy_required);\n\n        this.ingredients = d.ingredients.map((ingredient) => {\n            if (ingredient.type === 'fluid') {\n                return new FluidIngredient(ingredient, gd);\n            } else {\n                return new ItemIngredient(ingredient, gd);\n            }\n        });\n\n        this.products = d.results.map((result) => {\n            if (result.type === 'fluid') {\n                return new FluidProduct(result, gd);\n            } else {\n                return new ItemProduct(result, gd);\n            }\n        });\n    }\n\n    niceName() {\n        if (this.products.length > 1) {\n            return super.niceName();\n        } else if (this.products[0].amount.equal(Rational.one)) {\n            return this.products[0].item.niceName();\n        } else {\n            return this.products[0].niceName();\n        }\n    }\n}\n\nexport abstract class BaseEntity<T extends schema.BaseEntity> {\n    data: T;\n    constructor(data: T) {\n        this.data = data;\n    }\n\n    niceName() {\n        return this.data.localised_name.en;\n    }\n}\n\nexport class AssemblingMachine extends BaseEntity<\n    schema.AssemblingMachine\n> {\n    canBuildRecipe(recipe: Recipe) {\n        // TODO: this needs to account for entity fluid boxes\n        if (this.data.crafting_categories.indexOf(recipe.category) === -1) {\n            return false;\n        }\n\n        // ingredient_count seems to be item specific. this is disabled until\n        // I can figure out how many fluids a machine can support\n        // if (recipe.ingredients.length > this.data.ingredient_count) {\n        //     return false\n        // }\n        return true;\n    }\n}\n\nexport type Entity = AssemblingMachine;\n\ntype CategoryMap = { [category: string]: AssemblingMachine[] };\n\nconst createCategoryMap = (entities: Entity[]) => {\n    const catMap: CategoryMap = {};\n    for (let entity of entities) {\n        if (!(entity instanceof AssemblingMachine)) {\n        }\n        for (let category of entity.data.crafting_categories) {\n            if (!catMap.hasOwnProperty(category)) {\n                catMap[category] = [];\n            }\n            catMap[category].push(entity);\n        }\n    }\n    return catMap;\n};\n\nexport class GameData {\n    raw: schema.Root;\n\n    items: Item[] = [];\n    itemMap: { [name: string]: Item } = {};\n\n    fluids: Fluid[] = [];\n    fluidMap: { [name: string]: Fluid } = {};\n\n    modules: Module[] = [];\n    moduleMap: { [name: string]: Module } = {};\n\n    recipes: Recipe[] = [];\n    recipeMap: { [name: string]: Recipe } = {};\n\n    entities: Entity[] = [];\n    entityMap: { [name: string]: Entity } = {};\n\n    categoryMap: CategoryMap;\n\n    constructor(raw: schema.Root) {\n        console.groupCollapsed('Game data processing');\n        this.raw = raw;\n\n        type Thing<T> = {\n            new (d: T): Entity;\n        };\n\n        const addOfType = <S extends schema.BaseEntity, C extends Thing<S>>(\n            entities: S[],\n            ctor: C\n        ) => {\n            for (let edata of entities) {\n                const entity = new ctor(edata);\n                this.entityMap[edata.name] = entity;\n                this.entities.push(entity);\n            }\n        };\n\n        addOfType(values(raw['assembling-machine']), AssemblingMachine);\n        addOfType(values(raw['furnace']), AssemblingMachine);\n        addOfType(values(raw['rocket-silo']), AssemblingMachine);\n\n        for (let itemName in raw.items) {\n            const thing = raw.items[itemName];\n            if ('type' in thing && thing.type === 'fluid') {\n                const fluid = new Fluid(thing);\n                this.fluids.push(fluid);\n                this.fluidMap[fluid.name] = fluid;\n            } else if ('type' in thing && thing.type === 'module') {\n                const item = new Module(thing);\n                this.items.push(item);\n                this.itemMap[item.name] = item;\n                this.modules.push(item);\n                this.moduleMap[item.name] = item;\n            } else {\n                const item = new GenericItem(thing);\n                this.items.push(item);\n                this.itemMap[item.name] = item;\n            }\n        }\n\n        for (let recipeName in raw.recipes) {\n            const recipe = new Recipe(raw.recipes[recipeName], this);\n\n            for (let entityName in this.entityMap) {\n                const entity = this.entityMap[entityName];\n\n                if (\n                    'canBuildRecipe' in entity &&\n                    entity.canBuildRecipe(recipe)\n                ) {\n                    recipe.madeIn.push(entity);\n                }\n            }\n            if (!recipe.madeIn.length) {\n                // Filter to only recipes buildable by knonwn assembling machines\n                console.warn(\n                    'Ignoring uncraftable recipe',\n                    recipe.name,\n                    recipe\n                );\n                continue;\n            }\n\n            const hasProducts = recipe.products.some((p) =>\n                p.amount.isPositive()\n            );\n            if (!hasProducts) {\n                console.debug('Ignoring void recipe', recipe.name, recipe);\n                continue;\n            }\n\n            this.recipeMap[recipe.name] = recipe;\n            this.recipes.push(recipe);\n\n            for (let ingredient of recipe.ingredients) {\n                ingredient.item.usedBy.push(recipe);\n            }\n            for (let product of recipe.products) {\n                product.item.madeBy.push(recipe);\n            }\n        }\n\n        this.categoryMap = createCategoryMap(this.entities);\n        console.log(`Processed ${this.items.length} items`);\n        console.log(`Processed ${this.fluids.length} fluids`);\n        console.log(`Processed ${this.recipes.length} recipes`);\n        console.log(`Processed ${this.entities.length} entities`);\n        console.groupEnd();\n    }\n\n    getItemOrder(item: Item | Fluid) {\n        let groupOrder = '';\n        let subgroupOrder = '';\n        const group = this.raw.groups[item.raw.group];\n        if (group) {\n            groupOrder = group.order;\n            subgroupOrder = group.subgroups[item.raw.subgroup] || '';\n        }\n        return [\n            groupOrder,\n            subgroupOrder,\n            item.raw.order,\n            item.raw.name,\n        ];\n    }\n\n    // Sort by\n    // 1. group\n    // 2. subgroup\n    // 3. item order string\n    // 4. item name\n    sortByItem<T>(\n        collection: T[],\n        keyFn: (obj: T) => Item | Fluid\n    ): void {\n        const sortFn = (a: T, b: T) => {\n            const ordersA = this.getItemOrder(keyFn(a));\n            const ordersB = this.getItemOrder(keyFn(b))\n\n            for (const i in ordersA) {\n                const valA = ordersA[i];\n                const valB = ordersB[i];\n                if (valA > valB) {\n                    return 1;\n                } else if (valA < valB) {\n                    return -1;\n                }\n            }\n\n            return 0;\n        }\n\n        collection.sort(sortFn);\n    }\n}\n","import * as game from './game';\nimport { AppState } from './state';\nimport { assert } from './util';\n\nexport function getDefaultMachine(\n    category: string,\n    state: AppState\n): game.AssemblingMachine;\nexport function getDefaultMachine(\n    recipe: game.Recipe,\n    state: AppState\n): game.AssemblingMachine;\n\nexport function getDefaultMachine(\n    input: game.Recipe | string,\n    state: AppState\n): game.AssemblingMachine {\n    const category = input instanceof game.Recipe ? input.category : input;\n\n    let defaultMachine: game.AssemblingMachine;\n    if (category in state.settings.assemblerOverrides) {\n        defaultMachine = state.settings.assemblerOverrides[category];\n    } else {\n        defaultMachine = state.gameData.categoryMap[category][0];\n    }\n\n    if (input instanceof game.Recipe) {\n        assert(input.madeIn.indexOf(defaultMachine) !== -1);\n    }\n\n    return defaultMachine;\n}\n","import React from 'react';\nimport { createDakpan } from 'dakpan';\n\nimport * as game from './game';\nimport { Rational } from './rational';\nimport { getDefaultMachine } from './stateutil';\n\nexport interface RecipeRowData {\n    recipe: game.Recipe;\n    machine: game.AssemblingMachine;\n    numMachines: Rational;\n    modules: (game.Module | null)[];\n    beaconModule: game.Module | null;\n    numBeacons: number;\n}\n\nexport interface RecipeGroupData {\n    name: string;\n    rows: RecipeRowData[];\n}\n\nexport interface AppSettingsData {\n    assemblerOverrides: {\n        [category: string]: game.AssemblingMachine;\n    };\n}\n\nexport interface RecipeTarget {\n    item: game.Item | game.Fluid;\n    amount: Rational;\n}\n\nexport interface AppState {\n    // Loaded automatically\n    gameData: game.GameData;\n\n    // Preserved via url/localstorage\n    groups: RecipeGroupData[];\n    settings: AppSettingsData;\n\n    // unsaved state\n    activeGroupIdx: number;\n    recipeTarget: RecipeTarget | undefined;\n}\n\nexport const defaultState: AppState = {\n    gameData: {fakeGameData: true} as any as game.GameData, // set early by apploader\n    groups: [\n        {\n            name: 'Factory 1',\n            rows: [],\n        },\n    ],\n    settings: {\n        assemblerOverrides: {},\n    },\n\n    activeGroupIdx: 0,\n    recipeTarget: undefined,\n};\n\nfunction getActiveGroup(state: AppState) {\n    return state.groups[state.activeGroupIdx];\n}\n\nfunction updateGroup(state: AppState, newGroup: Partial<RecipeGroupData>) {\n    const groups = state.groups.map((oldGroup, index) => {\n        return index === state.activeGroupIdx\n            ? { ...oldGroup, ...newGroup }\n            : oldGroup;\n    });\n\n    return { ...state, groups };\n}\n\nexport const [StateProvider, useDakpan] = createDakpan(defaultState)({\n    replaceState: (newState: Partial<AppState>) => (state) => {\n        return {...state, ...newState};\n    },\n\n    addRow: (row: RecipeRowData) => (state) => {\n        const group = getActiveGroup(state);\n        // ignore adding duplicate rows\n        if (group.rows.some((r) => r.recipe.name === row.recipe.name)) {\n            return;\n        }\n\n        return updateGroup(state, { rows: [...group.rows, row] });\n    },\n\n    updateRow: (i: number, updates: Partial<RecipeRowData>) => (state) => {\n        const group = getActiveGroup(state);\n        const rows = Array.from(group.rows);\n        rows[i] = { ...group.rows[i], ...updates };\n        return updateGroup(state, {\n            rows: rows,\n        });\n    },\n\n    removeRow: (i: number) => (state) => {\n        const group = getActiveGroup(state);\n        const rows = Array.from(group.rows);\n        rows.splice(i, 1);\n        return updateGroup(state, {\n            rows: rows,\n        });\n    },\n\n    moveRow: (oldIndex: number, newIndex: number) => (state) => {\n        const group = getActiveGroup(state);\n        const rows = Array.from(group.rows);\n\n        const [removed] = rows.splice(oldIndex, 1);\n        rows.splice(newIndex, 0, removed);\n\n        return updateGroup(state, {\n            rows: rows,\n        });\n    },\n\n    updateDefaultMachine: (category, newMachine) => (state) => {\n        const oldMachine = getDefaultMachine(category, state);\n\n        const groups = state.groups.map((group) => {\n            const rows = group.rows.map((row) => {\n                if (\n                    row.recipe.category !== category ||\n                    row.machine !== oldMachine\n                ) {\n                    return row;\n                }\n                return {\n                    ...row,\n                    machine: newMachine,\n                };\n            });\n\n            return { ...group, rows };\n        });\n\n        return {\n            ...state,\n            groups,\n            settings: {\n                ...state.settings,\n                assemblerOverrides: {\n                    ...state.settings.assemblerOverrides,\n                    [category]: newMachine,\n                },\n            },\n        };\n    },\n\n    setActiveGroup: (groupIdx: number) => (state) => {\n        return { ...state, activeGroupIdx: groupIdx };\n    },\n\n    addGroup: (name) => (state) => {\n        const groups = [\n            ...state.groups,\n            {\n                name,\n                rows: [],\n            },\n        ];\n\n        return {\n            ...state,\n            groups,\n            activeGroupIdx: state.groups.length,\n        };\n    },\n\n    removeGroup: (index) => (state) => {\n        // Remove group\n        const groups = Array.from(state.groups);\n        groups.splice(index, 1);\n\n        // Add new group if necessary\n        if (!groups.length) {\n            groups.push({\n                name: 'Factory 1',\n                rows: [],\n            });\n        }\n\n        // Fix the index if it's outside of bounds\n        const maxIndex = groups.length - 1;\n        const activeGroupIdx = Math.min(state.activeGroupIdx, maxIndex);\n\n        return {\n            ...state,\n            groups,\n            activeGroupIdx,\n        };\n    },\n\n    setRecipeTarget: (recipeTarget: RecipeTarget) => (state) => {\n        return {\n            ...state,\n            recipeTarget,\n        };\n    },\n});\n\nexport type AppActions = ReturnType<typeof useDakpan>[1]\n\n\nexport const withBoth = <T extends React.ComponentType<any>>(OldComponent: T) => {\n    type NewProps = Omit<PropsOf<T>, 'state'|'actions'>;\n\n    const WrappedComponent: React.FC<NewProps> = (props: any) => {\n        const [state, actions] = useDakpan();\n        return <OldComponent state={state} actions={actions} {...props}/>;\n    };\n\n    return WrappedComponent;\n}\n\ntype PropsOf<T extends React.ComponentType<any>> = T extends React.ComponentType<infer P> ? P : never;\n\nexport const withGame = <T extends React.ComponentType<any>>(OldComponent: T) => {\n    type NewProps = Omit<PropsOf<T>, 'gameData'>;\n\n    const WrappedComponent: React.FC<NewProps> = (props: any) => {\n        const [state] = useDakpan();\n        return <OldComponent gameData={state.gameData} {...props}/>;\n    };\n\n    return WrappedComponent;\n};\n","import * as game from './game';\nimport { Rational } from './rational';\nimport { AppState, AppSettingsData } from './state';\nimport { getDefaultMachine } from './stateutil';\nimport { mapValues } from './util';\n\nimport { inflate, deflate } from 'pako';\n\ntype SerializedRowV1 = [\n    string, // recipe name, required\n    string | null, // assembling machine, null if default\n    number, // num assembling machines\n    (string | null)[], // modules,\n    string | undefined, // beacon module, if chosen\n    number // num beacon modules\n];\n\ninterface SerializedAppStateV1 {\n    version: 1;\n    data: SerializedRowV1[];\n}\n\nfunction state1to2(state: SerializedAppStateV1): SerializedAppStateV2 {\n    return {\n        version: 2,\n        data: {\n            rows: state.data,\n            settings: {\n                assemblerOverrides: {},\n            },\n        },\n    };\n}\n\ninterface SerializedAppStateV2 {\n    version: 2;\n    data: {\n        rows: SerializedRowV1[];\n        settings: SerializedSettings;\n    };\n}\n\n// V3 = v2 but compressed\nfunction state2to3(state: SerializedAppStateV2): SerializedAppStateV3 {\n    return {\n        version: 3,\n        data: state.data,\n    };\n}\n\ninterface SerializedAppStateV3 {\n    version: 3;\n    data: SerializedAppStateV2['data'];\n}\n\n// v4 is multiple groups of rows\nfunction state3to4(state: SerializedAppStateV3): SerializedAppStateV4 {\n    return {\n        version: 4,\n        data: {\n            settings: state.data.settings,\n            groups: [\n                {\n                    name: 'Factory 1',\n                    rows: state.data.rows,\n                },\n            ],\n        },\n    };\n}\n\n// v4 has multiple groups, each with multiple rows\ninterface SerializedGroupV4 {\n    name: string;\n    rows: SerializedRowV1[];\n}\ninterface SerializedAppStateV4 {\n    version: 4;\n    data: {\n        groups: SerializedGroupV4[];\n        settings: SerializedSettings;\n    };\n}\n\nfunction groupv4to5(group: SerializedGroupV4): SerializedGroupV5 {\n    return {\n        name: group.name,\n        rows: group.rows.map((r) => {\n            return [r[0], r[1], r[2].toString(), r[3], r[4], r[5]];\n        }),\n    };\n}\n\n// v5 has multiple groups, each with multiple rows\nfunction state4to5(state: SerializedAppStateV4): SerializedAppStateV5 {\n    return {\n        version: 5,\n        data: {\n            settings: state.data.settings,\n            groups: state.data.groups.map(groupv4to5),\n        },\n    };\n}\ntype SerializedRowV5 = [\n    string, // recipe name, required\n    string | null, // assembling machine, null if default\n    string, // num assembling machines as a rational\n    (string | null)[], // modules,\n    string | undefined, // beacon module, if chosen\n    number // num beacon modules\n];\n\ninterface SerializedGroupV5 {\n    name: string;\n    rows: SerializedRowV5[];\n}\ninterface SerializedAppStateV5 {\n    version: 5;\n    data: {\n        groups: SerializedGroupV5[];\n        settings: SerializedSettings;\n    };\n}\n\ninterface SerializedAppStateOther {\n    version: 0;\n    data: unknown;\n}\n\ntype MultiSerializedAppState =\n    | SerializedAppStateOther\n    | SerializedAppStateV1\n    | SerializedAppStateV2\n    | SerializedAppStateV3\n    | SerializedAppStateV4\n    | SerializedAppStateV5;\n\n// Latest values\n// type SerializedGroup = SerializedGroupV5;\ntype SerializedRow = SerializedRowV5;\ntype SerializedAppState = SerializedAppStateV5;\n\ninterface SerializedSettings {\n    assemblerOverrides: {\n        [category: string]: string;\n    };\n}\n\nexport function setLocalStorageState(state: AppState) {\n    localStorage.setItem('appstate', JSON.stringify(serialize(state)));\n}\n\nexport function getLocalStorageState(gameData: game.GameData): AppState | null {\n    const statestr = localStorage.getItem('appstate');\n    if (!statestr) {\n        return null;\n    }\n    const stateobj: MultiSerializedAppState = JSON.parse(statestr);\n    if (stateobj.version === 1) {\n        (stateobj as any).version = 3;\n    }\n\n    return deserialize(gameData, stateobj);\n}\n\nexport function setUrlState(state: AppState) {\n    const serialized = serialize(state);\n    const version = serialized.version;\n    let str = JSON.stringify(serialized.data);\n    // compress\n    str = btoa(deflate(str, { to: 'string' }));\n\n    window.history.replaceState('', '', `#${version}-${str}`);\n}\n\nfunction serialize(state: AppState): SerializedAppState {\n    const groups = state.groups.map((group) => {\n        return {\n            name: group.name,\n            rows: group.rows.map((row) => {\n                let machineName: string | null = row.machine.data.name;\n                const defaultMachine = getDefaultMachine(row.recipe, state);\n\n                if (defaultMachine.data.name === machineName) {\n                    machineName = null;\n                }\n\n                const srow: SerializedRow = [\n                    row.recipe.name,\n                    machineName,\n                    row.numMachines.toFraction(),\n                    row.modules.map((m) => (m ? m.name : null)),\n                    row.beaconModule ? row.beaconModule.name : undefined,\n                    row.numBeacons,\n                ];\n                return srow;\n            }),\n        };\n    });\n\n    const settings = {\n        assemblerOverrides: mapValues(\n            state.settings.assemblerOverrides,\n            (a) => a.data.name\n        ),\n    };\n\n    return {\n        version: 5,\n        data: { groups, settings },\n    };\n}\n\nconst reStateUrl = /^#(\\d+)?(?:-)?(.+)$/;\n\nexport function getUrlState(gameData: game.GameData) {\n    const matches = reStateUrl.exec(document.location.hash);\n    if (!matches) {\n        return null;\n    }\n    const version = Number(matches[1] || 1);\n\n    let str = decodeURIComponent(matches[2]);\n    if (version > 2) {\n        str = inflate(atob(str), { to: 'string' });\n    }\n\n    let data = JSON.parse(str);\n\n    return deserialize(gameData, {\n        version: version as 0,\n        data,\n    });\n}\n\nfunction migrateSerializedState(\n    state: MultiSerializedAppState\n): SerializedAppState {\n    switch (state.version) {\n        case 1:\n            state = state1to2(state);\n            // fall through\n        case 2:\n            state = state2to3(state);\n            // fall through\n        case 3:\n            state = state3to4(state);\n            // fall through\n        case 4:\n            state = state4to5(state);\n            // fall through\n        case 5:\n            // the latest\n            break;\n        default:\n            throw new Error(`unknown state: ${state}`);\n    }\n\n    return state;\n}\n\nfunction deserialize(\n    gameData: game.GameData,\n    unmigrated: MultiSerializedAppState\n): AppState {\n    const migrated = migrateSerializedState(unmigrated).data;\n\n    const state: AppState = {\n        gameData: gameData,\n\n        settings: deserializeSettings(gameData, migrated.settings),\n        groups: [],\n\n        activeGroupIdx: 0,\n        recipeTarget: undefined,\n    };\n\n    state.groups = migrated.groups.map((group) => {\n        return {\n            name: group.name,\n            rows: group.rows.map(\n                ([\n                    recipeName,\n                    machineName,\n                    numMachines,\n                    modules,\n                    beaconModule,\n                    numBeacons,\n                ]) => {\n                    const recipe = gameData.recipeMap[recipeName];\n\n                    const machine = machineName\n                        ? gameData.entityMap[machineName]\n                        : getDefaultMachine(recipe, state);\n\n                    return {\n                        recipe: recipe,\n                        machine: machine,\n                        numMachines: Rational.fromString(numMachines),\n                        modules: modules.map((n) =>\n                            n ? gameData.moduleMap[n] : null\n                        ),\n                        beaconModule: beaconModule\n                            ? gameData.moduleMap[beaconModule]\n                            : null,\n                        numBeacons: numBeacons || 0,\n                    };\n                }\n            ),\n        };\n    });\n\n    return state;\n}\n\nfunction deserializeSettings(\n    gameData: game.GameData,\n    serialized: SerializedSettings\n): AppSettingsData {\n    return {\n        assemblerOverrides: mapValues(\n            serialized.assemblerOverrides,\n            (name) => gameData.entityMap[name]\n        ),\n    };\n}\n","import * as game from './game';\n\ninterface SignalHandler<T> {\n    (arg: T): void;\n}\n\nexport class Signal<T> {\n    handlers: SignalHandler<T>[] = [];\n\n    addHandler(handler: SignalHandler<T>) {\n        const index = this.handlers.indexOf(handler);\n        if (index === -1) {\n            this.handlers.push(handler);\n        }\n    }\n\n    removeHandler(handler: SignalHandler<T>) {\n        const index = this.handlers.indexOf(handler);\n        if (index !== -1) {\n            this.handlers.splice(index, 1);\n        }\n    }\n\n    dispatch = (arg: T) => {\n        for (let handler of this.handlers) {\n            handler(arg);\n        }\n    };\n}\n\nexport const addIngredientFilter = new Signal<game.Ingredient>();\nexport const addProductFilter = new Signal<game.Product>();\nexport const addRecipeRow = new Signal<game.Recipe>();\n","import * as React from 'react';\nimport Popper from 'popper.js';\n\ninterface DropdownHeader {\n    header: React.ReactNode;\n}\n\ninterface DropdownDivider {\n    divider: true;\n}\n\ninterface DropdownEntry<T> {\n    key: React.Key;\n    disabled?: boolean;\n    active?: boolean;\n    option: T;\n}\n\ntype DropdownOption<T> = DropdownHeader | DropdownDivider | DropdownEntry<T>;\n\ninterface Props<T> {\n    options: DropdownOption<T>[];\n    selected: T;\n    onSelect(selected: T): void;\n\n    renderOption(option: T): React.ReactNode;\n    renderSelected(option: T): React.ReactNode;\n}\ninterface State {\n    isOpen: boolean;\n}\n\nconst ESC_KEYCODE = 27;\n\nexport class Dropdown<T> extends React.Component<Props<T>, State> {\n    buttonRef: React.RefObject<any>;\n\n    constructor(props: Props<T>) {\n        super(props);\n        this.state = {\n            isOpen: false,\n        };\n        this.buttonRef = React.createRef();\n    }\n\n    handleToggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        });\n    };\n\n    handleSelect = (selected: T) => {\n        this.props.onSelect(selected);\n        if (this.state.isOpen) {\n            this.setState({\n                isOpen: false,\n            });\n        }\n    };\n\n    handleWantClose = () => {\n        if (this.state.isOpen) {\n            this.setState({\n                isOpen: false,\n            });\n        }\n    };\n\n    render() {\n        const canToggle = this.props.options.some((option) => {\n            return 'option' in option && !option.disabled;\n        });\n\n        const classes = ['btn', 'btn-secondary'];\n        if (canToggle) {\n            classes.push('dropdown-toggle');\n        } else {\n            classes.push('disabled');\n        }\n\n        let floater: React.ReactNode | null;\n        if (this.state.isOpen) {\n            floater = (\n                <DropdownMenu\n                    parentRef={this.buttonRef}\n                    options={this.props.options}\n                    renderOption={this.props.renderOption}\n                    onSelect={this.handleSelect}\n                    onWantClose={this.handleWantClose}\n                />\n            );\n        }\n\n        return (\n            <>\n                <button\n                    ref={this.buttonRef}\n                    className={classes.join(' ')}\n                    type=\"button\"\n                    onClick={() => {\n                        canToggle && this.handleToggle();\n                    }}\n                >\n                    {this.props.renderSelected(this.props.selected)}\n                </button>\n                {floater}\n            </>\n        );\n    }\n}\n\ninterface DropdownMenuProps<T> {\n    parentRef: React.RefObject<any>;\n    options: DropdownOption<T>[];\n    renderOption(option: T): React.ReactNode;\n    onSelect(selected: T): void;\n    onWantClose(): void;\n}\n\ninterface DropdownMenuState {\n    style: React.CSSProperties;\n}\n\nclass DropdownMenu<T> extends React.Component<\n    DropdownMenuProps<T>,\n    DropdownMenuState\n> {\n    popperInstance: Popper | null = null;\n    menuRef: React.RefObject<HTMLDivElement>;\n\n    constructor(props: DropdownMenuProps<T>) {\n        super(props);\n        this.menuRef = React.createRef();\n        this.state = {\n            style: {},\n        };\n    }\n\n    popperUpdate = (data: Popper.Data) => {\n        this.setState({\n            style: data.styles as React.CSSProperties,\n        });\n        return data;\n    };\n\n    handleBodyClick = (event: MouseEvent) => {\n        if (!this.menuRef.current) {\n            throw new Error(\n                'Click event without menu rendered. This should not happen.'\n            );\n        }\n        if (!event.target) {\n            throw new Error(\n                'Click event without click target. This should not happen.'\n            );\n        }\n        // TODO: why doesnt EventTarget satisfy \"Node\"\n        const target = event.target as any;\n        if (!this.menuRef.current.contains(target)) {\n            // Click was outside menu\n            this.props.onWantClose();\n        }\n    };\n\n    handleKeyEvent = (event: KeyboardEvent) => {\n        if (event.keyCode === ESC_KEYCODE) {\n            this.props.onWantClose();\n        }\n    };\n\n    componentDidMount() {\n        if (this.popperInstance) {\n            throw new Error('Component mounted twice?');\n        }\n\n        const referenceEl = this.props.parentRef.current;\n        if (!referenceEl) {\n            throw new Error('Cannot mount DropdownMenu without parentRef');\n        }\n\n        const menuEl = this.menuRef.current;\n        if (!menuEl) {\n            throw new Error('Cannot mount DropdownMenu without menuRef');\n        }\n\n        this.popperInstance = new Popper(referenceEl, menuEl, {\n            modifiers: {\n                applyStyle: { enabled: false },\n                updateStateWithStyle: {\n                    enabled: true,\n                    fn: this.popperUpdate,\n                },\n            },\n        });\n\n        document.body.addEventListener('click', this.handleBodyClick);\n        document.body.addEventListener('keyup', this.handleKeyEvent);\n    }\n\n    componentWillUnmount() {\n        if (this.popperInstance) {\n            this.popperInstance.disableEventListeners();\n            this.popperInstance = null;\n        }\n        document.body.removeEventListener('click', this.handleBodyClick);\n        document.body.removeEventListener('keyup', this.handleKeyEvent);\n    }\n\n    renderOptions = () => {\n        return this.props.options.map((option, i) => {\n            if ('header' in option) {\n                return (\n                    <h6 className=\"dropdown-header\" key={'ddkey' + i}>\n                        {option.header}\n                    </h6>\n                );\n            }\n            if ('divider' in option) {\n                return <div className=\"dropdown-divider\" key={'ddkey' + i} />;\n            }\n\n            const classes = ['dropdown-item'];\n            option.active && classes.push('active');\n            option.disabled && classes.push('disabled');\n\n            return (\n                <button\n                    key={option.key}\n                    className={classes.join(' ')}\n                    onClick={() => this.props.onSelect(option.option)}\n                    type=\"button\"\n                >\n                    {this.props.renderOption(option.option)}\n                </button>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className=\"dropdown-menu show\"\n                style={this.state.style}\n                ref={this.menuRef}\n            >\n                {this.renderOptions()}\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Popper from 'popper.js';\n\ninterface Props {\n    relativeTo: React.RefObject<HTMLElement>;\n}\n\ninterface State {\n    showSelf: boolean;\n    style: React.CSSProperties;\n}\n\nexport class Tooltip extends React.Component<Props, State> {\n    selfRef: React.RefObject<any>;\n    popperInstance: Popper | null;\n\n    constructor(props: Props) {\n        super(props);\n        this.selfRef = React.createRef();\n        this.popperInstance = null;\n        this.state = {\n            showSelf: false,\n            style: { zIndex: 1001 },\n        };\n    }\n\n    initPopper() {\n        if (this.popperInstance) {\n            return;\n        }\n\n        const referenceEl = this.props.relativeTo.current;\n        if (!referenceEl) {\n            throw new Error('Invalid relativeTo');\n        }\n\n        const selfEl = this.selfRef.current;\n        if (!selfEl) {\n            throw new Error('No self reference yet?');\n        }\n\n        this.popperInstance = new Popper(referenceEl, selfEl, {\n            placement: 'right',\n            modifiers: {\n                offset: {\n                    enabled: true,\n                    offset: '0, 20',\n                },\n                preventOverflow: {\n                    enabled: true,\n                    boundariesElement: 'window',\n                },\n            },\n        });\n    }\n\n    cleanupPopper() {\n        if (this.popperInstance) {\n            this.popperInstance.disableEventListeners();\n            this.popperInstance = null;\n        }\n    }\n\n    componentDidUpdate(_: Props, prevState: State) {\n        if (prevState.showSelf !== this.state.showSelf) {\n            if (this.state.showSelf) {\n                this.initPopper();\n            } else {\n                this.cleanupPopper();\n            }\n        }\n    }\n\n    componentDidMount() {\n        const referenceEl = this.props.relativeTo.current;\n        if (!referenceEl) {\n            throw new Error('Invalid relativeTo');\n        }\n\n        referenceEl.addEventListener('mouseenter', this.handleMouseEnter);\n        referenceEl.addEventListener('mouseleave', this.handleMouseLeave);\n    }\n\n    handleMouseEnter = () => {\n        this.setState({\n            showSelf: true,\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState({\n            showSelf: false,\n        });\n    };\n\n    componentWillUnmount() {\n        const referenceEl = this.props.relativeTo.current;\n        if (referenceEl) {\n            referenceEl.removeEventListener(\n                'mouseenter',\n                this.handleMouseEnter\n            );\n            referenceEl.removeEventListener(\n                'mouseleave',\n                this.handleMouseLeave\n            );\n        }\n    }\n\n    render() {\n        if (!this.state.showSelf) {\n            return null;\n        }\n\n        return ReactDOM.createPortal(\n            <div style={this.state.style} ref={this.selfRef}>\n                {this.props.children}\n            </div>,\n            document.body\n        );\n    }\n}\n","import * as React from 'react';\n\ninterface Props {\n    value: number;\n    onChange: (value: number) => void;\n    intOnly?: boolean;\n    positiveOnly?: boolean;\n}\n\ninterface State {\n    txtValue: string;\n}\n\nexport class IntegerInput extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            txtValue: props.value.toString(),\n        };\n    }\n\n    public handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n        const value = (event.target as HTMLInputElement).value;\n        this.setState({ txtValue: value });\n        if (!value.trim()) {\n            return;\n        }\n        const num = Number(value);\n        if (this.props.intOnly && !Number.isInteger(num)) {\n            return;\n        }\n        if (this.props.positiveOnly && num < 0) {\n            return;\n        }\n        this.props.onChange(num);\n    };\n\n    render() {\n        return (\n            <input\n                className=\"form-control\"\n                value={this.state.txtValue}\n                onChange={this.handleChange}\n                type=\"number\"\n                min=\"0\"\n                step=\"1\"\n            />\n        );\n    }\n}\n","import * as React from 'react';\nimport { Rational } from '../../rational';\n\ninterface Props {\n    value: Rational;\n    onChange: (value: Rational) => void;\n    positiveOnly?: boolean;\n}\n\ninterface State {\n    txtValue: string;\n    error?: string;\n}\n\nexport class RationalInput extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            txtValue: props.value.toDecimal(),\n        };\n    }\n\n    public handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n        const str = (event.target as HTMLInputElement).value;\n        this.setState({ txtValue: str, error: undefined });\n        if (!str.trim()) {\n            return;\n        }\n\n        const index = str.indexOf('/');\n        const lastIndex = str.lastIndexOf('/');\n        if (index !== lastIndex) {\n            this.setState({ error: 'Too many slashes' });\n            return;\n        }\n\n        let rational;\n        try {\n            rational = Rational.fromString(str);\n        } catch (err) {\n            this.setState({ error: err.message });\n            return;\n        }\n\n        if (this.props.positiveOnly && rational.isNegative()) {\n            this.setState({ error: 'Number must be positive' });\n            return;\n        }\n        this.props.onChange(rational);\n    };\n\n    render() {\n        let className = 'form-control';\n        if (this.state.error) {\n            className += ' is-invalid';\n        }\n        return (\n            <input\n                className={className}\n                value={this.state.txtValue}\n                onChange={this.handleChange}\n                type=\"text\"\n            />\n        );\n    }\n}\n","import * as React from 'react';\n\nimport { Tooltip } from './generic';\n\ninterface Props {\n    obj: { icon_row: number; icon_col: number };\n\n    title?: string;\n    onClick?(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\n    style?: React.CSSProperties;\n    tooltip?: React.ReactNode;\n    text?: string;\n}\n\ninterface State {}\n\nexport class Icon extends React.PureComponent<Props, State> {\n    iconRef: React.RefObject<HTMLDivElement>;\n\n    constructor(props: Props) {\n        super(props);\n        this.iconRef = React.createRef();\n    }\n\n    render() {\n        const x = -this.props.obj.icon_col * 32;\n        const y = -this.props.obj.icon_row * 32;\n\n        const divStyle = {\n            display: 'inline-block',\n            backgroundPosition: `${x}px ${y}px`,\n            width: '32px',\n            height: '32px',\n            ...this.props.style,\n        };\n\n        let icon = (\n            <div\n                ref={this.iconRef}\n                onClick={this.props.onClick}\n                title={this.props.title}\n                className=\"game-icon\"\n                style={divStyle}\n            >\n                &nbsp;\n            </div>\n        );\n\n        if (this.props.tooltip) {\n            icon = (\n                <>\n                    {icon}\n                    <Tooltip\n                        children={this.props.tooltip}\n                        relativeTo={this.iconRef}\n                    />\n                </>\n            );\n        }\n\n        if (this.props.text) {\n            icon = (\n                <div style={{ lineHeight: '32px' }}>\n                    {icon}\n                    <span style={{ marginLeft: '9px' }}>{this.props.text}</span>\n                </div>\n            );\n        }\n\n        return icon;\n    }\n}\n","import * as React from 'react';\nimport * as game from '../game';\n\ninterface Props {\n    machine: game.AssemblingMachine;\n}\n\nexport const MachineCard = (props: Props) => {\n    return (\n        <div className=\"machine-card card\">\n            <div className=\"card-body\">\n                <b>{props.machine.niceName()}</b>\n                <br />\n                <b>Crafting Speed:</b> {props.machine.data.crafting_speed}\n                <br />\n                <b>Module Slots:</b> {props.machine.data.module_slots}\n            </div>\n        </div>\n    );\n};\n","import * as React from 'react';\n\nimport * as game from '../game';\n\nimport { Icon } from './Icon';\nimport { MachineCard } from './MachineCard';\nimport { withGame } from '../state';\n\ninterface Props {\n    gameData: game.GameData;\n    recipe: game.Recipe;\n    onClick?(r: game.Recipe): void;\n}\n\nconst GameRecipeCard = (props: Props) => {\n    const handleClick = () => {\n        props.onClick && props.onClick(props.recipe);\n    };\n    const recipe = props.recipe;\n\n    const ingredients = recipe.ingredients.map((ingredient, i) => (\n        <Icon key={i} obj={ingredient.item} text={ingredient.niceName()} />\n    ));\n    const products = recipe.products.map((product, i) => (\n        <Icon key={i} obj={product.item} text={product.niceName()} />\n    ));\n\n    const madeIn = recipe.madeIn.map((machine, i) => (\n        <Icon\n            key={i}\n            obj={machine.data}\n            tooltip={<MachineCard machine={machine} />}\n        />\n    ));\n\n    return (\n        <div className=\"recipe-tooltip card\" onClick={handleClick}>\n            <div className=\"card-header\">\n                <Icon obj={recipe} text={recipe.niceName()} />\n            </div>\n            <div className=\"card-body\">\n                <Icon\n                    obj={props.gameData.raw.sprites.extra['clock']}\n                    text={recipe.crafting_time.toDecimal()}\n                />\n                <div style={{ float: 'left' }}>\n                    Ingredients:\n                    {ingredients}\n                </div>\n                <div style={{ display: 'inline-block' }}>\n                    Products:\n                    {products}\n                </div>\n                <div style={{ clear: 'both' }} />\n                <div style={{ lineHeight: '32px' }}>\n                    Made In:\n                    {madeIn}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport const RecipeCard = withGame(GameRecipeCard);\n","import * as React from 'react';\n\nimport * as game from '../game';\n\nimport { Icon } from './Icon';\nimport { MachineCard } from './MachineCard';\nimport { Dropdown } from './generic';\n\ntype Machine = game.AssemblingMachine;\n\ninterface MachinePickerProps {\n    machines: Machine[];\n    selected: Machine;\n    onChange(m: Machine): void;\n}\n\nconst renderSelected = (machine: Machine) => {\n    return (\n        <Icon obj={machine.data} tooltip={<MachineCard machine={machine} />} />\n    );\n};\n\nconst renderOption = (machine: Machine) => {\n    return (\n        <Icon\n            obj={machine.data}\n            tooltip={<MachineCard machine={machine} />}\n            text={machine.niceName()}\n        />\n    );\n};\n\nexport const MachinePicker = (props: MachinePickerProps) => {\n    const options = props.machines.map((machine) => ({\n        key: machine.data.name,\n        option: machine,\n        active: machine === props.selected,\n    }));\n\n    return (\n        <Dropdown\n            options={options}\n            selected={props.selected}\n            onSelect={props.onChange}\n            renderOption={renderOption}\n            renderSelected={renderSelected}\n        />\n    );\n};\n","import * as React from 'react';\n\nimport { Module } from '../game';\nimport { round2 } from '../util';\n\nconst niceName = {\n    consumption: 'Energy Consumption',\n    productivity: 'Productivity',\n    speed: 'Speed',\n    pollution: 'Pollution',\n};\n\nexport const ModuleCard = ({ module }: { module: Module }) => {\n    const bonuses = [];\n    for (let bonusName in module.raw.effect) {\n        const bonus = module.raw.effect[\n            bonusName as keyof typeof module.raw.effect\n        ]!.bonus;\n        bonuses.push(\n            <div key={bonusName}>\n                <b>\n                    {niceName[bonusName as keyof typeof niceName]}:{' '}\n                    {round2(bonus * 100, 2)}%\n                </b>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"module-card card\">\n            <div className=\"card-header\">\n                <b>{module.niceName()}</b>\n            </div>\n            <div className=\"card-body\">{bonuses}</div>\n        </div>\n    );\n};\n","import * as React from 'react';\n\nimport { GameData, Module, Recipe } from '../game';\n\nimport { Icon } from './Icon';\nimport { ModuleCard } from './ModuleCard';\nimport { Dropdown } from './generic';\nimport { withGame } from '../state';\n\ninterface ModulePickerProps {\n    gameData: GameData;\n    recipe: Recipe;\n    isBeacon?: boolean;\n    selected: Module | null;\n    onChange(m: Module | null): void;\n}\n\nconst GameModulePicker = (props: ModulePickerProps) => {\n    const icon = props.gameData.raw.sprites.extra.slot_icon_module;\n    const nomod = new Module({\n        type: 'module',\n        name: 'no_module',\n        localised_name: { en: 'No Module' },\n        category: 'speed',\n        effect: {},\n        limitation: [],\n        rocket_launch_products: [],\n\n        icon_row: icon.icon_row,\n        icon_col: icon.icon_col,\n\n        group: '',\n        subgroup: '',\n        order: '',\n    });\n\n    const renderSelected = (module: Module | null) => {\n        if (module) {\n            return (\n                <Icon obj={module} tooltip={<ModuleCard module={module} />} />\n            );\n        } else {\n            return <Icon obj={nomod} />;\n        }\n    };\n\n    const renderOption = (module: Module | null) => {\n        if (module) {\n            return (\n                <Icon\n                    obj={module}\n                    tooltip={<ModuleCard module={module} />}\n                    text={module.niceName()}\n                />\n            );\n        } else {\n            return <Icon obj={nomod} text={nomod.niceName()} />;\n        }\n    };\n\n    const options = props.gameData.modules\n        .filter((m) => {\n            // TODO: what is the actual logic for which modules are allowed in beacons?\n            if (props.isBeacon && m.effects.productivity.isPositive()) {\n                return false;\n            }\n            return m.canUseWith(props.recipe);\n        })\n        .map((m) => ({\n            key: m.name,\n            option: m as Module | null,\n            active: m === props.selected,\n        }));\n\n    options.unshift({\n        key: 'no_module',\n        option: null,\n        active: !props.selected,\n    });\n\n    return (\n        <Dropdown\n            options={options}\n            selected={props.selected}\n            onSelect={props.onChange}\n            renderOption={renderOption}\n            renderSelected={renderSelected}\n        />\n    );\n};\n\nexport const ModulePicker = withGame(GameModulePicker);\n","import * as game from './game';\n\nimport { clone } from './util';\n\nimport { Rational } from './rational';\n\nimport { RecipeRowData } from './state';\n\nexport class Totals {\n    products: game.Product[] = [];\n    ingredients: game.Ingredient[] = [];\n\n    addIngredient = (newIng: game.Ingredient) => {\n        for (let oldIng of this.ingredients) {\n            let match =\n                newIng.type === oldIng.type && newIng.item === oldIng.item;\n            if (newIng.type === 'fluid' && oldIng.type === 'fluid') {\n                match =\n                    match &&\n                    (newIng.maximum_temperature === oldIng.maximum_temperature &&\n                        newIng.minimum_temperature ===\n                            oldIng.minimum_temperature);\n            }\n\n            if (match) {\n                oldIng.amount = oldIng.amount.add(newIng.amount);\n                return;\n            }\n        }\n        this.ingredients.push(newIng);\n    };\n\n    addProduct = (newProd: game.Product) => {\n        for (let oldProd of this.products) {\n            let match =\n                newProd.type === oldProd.type && newProd.item === oldProd.item;\n            if (newProd.type === 'fluid' && oldProd.type === 'fluid') {\n                match = match && newProd.temperature === oldProd.temperature;\n            }\n\n            if (match) {\n                oldProd.amount = oldProd.amount.add(newProd.amount);\n                return;\n            }\n        }\n        this.products.push(newProd);\n    };\n\n    addRow(row: RecipeRowData) {\n        const effects = {\n            consumption: Rational.one,\n            pollution: Rational.one,\n            productivity: Rational.one,\n            speed: Rational.one,\n        };\n\n        for (let module of row.modules) {\n            if (!module) continue;\n            effects.consumption = effects.consumption.add(\n                module.effects.consumption\n            );\n            effects.pollution = effects.pollution.add(module.effects.pollution);\n            effects.productivity = effects.productivity.add(\n                module.effects.productivity\n            );\n            effects.speed = effects.speed.add(module.effects.speed);\n        }\n\n        if (row.beaconModule && row.numBeacons > 0) {\n            // TODO: export and use \"distribution_effectivity\" from beacon entities\n            // assume the common value of 0.5 for now\n\n            const be = row.beaconModule.effects;\n            const num = Rational.fromInts(row.numBeacons, 2);\n            effects.consumption = effects.consumption.add(\n                be.consumption.mul(num)\n            );\n            effects.pollution = effects.pollution.add(be.pollution.mul(num));\n            effects.productivity = effects.productivity.add(\n                be.productivity.mul(num)\n            );\n            effects.speed = effects.speed.add(be.speed.mul(num));\n        }\n\n        // Allowed -80% to de facto max of signed short int\n        effects.consumption = effects.consumption.clamp(0.2, 32767);\n        effects.pollution = effects.pollution.clamp(0.2, 32767);\n        effects.speed = effects.speed.clamp(0.2, 32767);\n\n        // Special minimum: -0%\n        effects.productivity = effects.productivity.clamp(1, 32767);\n\n        const ingredientMult = Rational.one\n            .mul(row.recipe.crafting_time.invert())\n            .mul(row.numMachines)\n            .mul(row.machine.data.crafting_speed)\n            .mul(effects.speed);\n\n        const productMult = ingredientMult.mul(effects.productivity);\n\n        row.recipe.ingredients\n            .map((ingredient) => {\n                ingredient = clone(ingredient);\n                ingredient.amount = ingredient.amount.mul(ingredientMult);\n                return ingredient;\n            })\n            .forEach(this.addIngredient);\n\n        row.recipe.products\n            .map((product) => {\n                product = clone(product);\n                product.amount = product.amount.mul(productMult);\n                return product;\n            })\n            .forEach(this.addProduct);\n    }\n\n    reduce() {\n        let ingredients = this.ingredients.map(clone);\n        let products = this.products.map(clone);\n\n        for (let product of products) {\n            for (let ingredient of ingredients) {\n                if (product.amount.isZero() || ingredient.amount.isZero()) {\n                    continue;\n                }\n                if (!product.satisfies(ingredient)) {\n                    continue;\n                }\n                if (product.amount.less(ingredient.amount)) {\n                    // More ingredient than product\n                    ingredient.amount = ingredient.amount.sub(product.amount);\n                    product.amount = Rational.zero;\n                } else if (ingredient.amount.less(product.amount)) {\n                    // More product than ingredient\n                    product.amount = product.amount.sub(ingredient.amount);\n                    ingredient.amount = Rational.zero;\n                } else {\n                    ingredient.amount = Rational.zero;\n                    product.amount = Rational.zero;\n                }\n            }\n        }\n\n        ingredients = ingredients.filter((i) => !i.amount.isZero());\n        products = products.filter((p) => !p.amount.isZero());\n\n        return { ingredients, products };\n    }\n}\n","import * as React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport * as game from '../game';\nimport { Rational } from '../rational';\n\nimport { Icon } from './Icon';\nimport { RecipeCard } from './RecipeCard';\nimport { MachinePicker } from './MachinePicker';\nimport { ModulePicker } from './ModulePicker';\nimport { IntegerInput, RationalInput } from './generic';\n\n// import {clone} from '../util'\nimport { Totals } from '../totals';\nimport { withBoth, RecipeRowData, AppActions, AppState } from '../state';\n\nimport * as signal from '../signal';\n\ninterface Props extends RecipeRowData {\n    index: number;\n    actions: AppActions;\n    state: AppState;\n}\n\ninterface IngredientCardProps {\n    obj: game.Ingredient | game.Product;\n}\n\nconst IngredientCard = (props: IngredientCardProps) => (\n    <div className=\"card\">\n        <div className=\"card-header\">\n            {props.obj.item.niceName()} ({props.obj.name})\n        </div>\n    </div>\n);\n\nclass RawRecipeRow extends React.Component<Props, {}> {\n    public handleRemoveClick = () => {\n        this.props.actions.removeRow(this.props.index);\n    };\n\n    public handleMachineChange = (machine: game.AssemblingMachine) => {\n        this.applyChange({\n            machine: machine,\n            modules: this.props.modules\n                .filter((module) => module !== null)\n                .slice(0, machine.data.module_slots),\n        });\n    };\n\n    public handleNumMachinesChange = (num: Rational) => {\n        this.applyChange({ numMachines: num });\n    };\n\n    public handleNumBeaconsChange = (num: number) => {\n        this.applyChange({ numBeacons: num });\n    };\n\n    public handleSetAllModules = () => {\n        this.applyChange({\n            modules: new Array(this.props.machine.data.module_slots).fill(\n                this.props.modules[0]\n            ),\n        });\n    };\n\n    public handleSetModule = (index: number, module: game.Module | null) => {\n        const modules = this.props.modules.slice();\n        modules[index] = module;\n        this.applyChange({ modules: modules });\n    };\n\n    public handleSetBeaconModule = (module: game.Module | null) => {\n        this.applyChange({ beaconModule: module });\n    };\n\n    public handleIngredientClick = (\n        ingredient: game.Ingredient,\n        event: React.MouseEvent\n    ) => {\n        if (event.shiftKey) {\n            event.preventDefault();\n            this.props.actions.setRecipeTarget({\n                item: ingredient.item,\n                amount: ingredient.amount,\n            });\n            return;\n        }\n        if (ingredient.item.madeBy.length === 1) {\n            signal.addRecipeRow.dispatch(ingredient.item.madeBy[0]);\n        } else {\n            signal.addIngredientFilter.dispatch(ingredient);\n        }\n    };\n\n    public handleProductClick = (\n        product: game.Product,\n        event: React.MouseEvent\n    ) => {\n        if (event.shiftKey) {\n            event.preventDefault();\n            this.props.actions.setRecipeTarget({\n                item: product.item,\n                amount: product.amount,\n            });\n            return;\n        }\n        if (product.item.usedBy.length === 1) {\n            signal.addRecipeRow.dispatch(product.item.usedBy[0]);\n        } else {\n            signal.addProductFilter.dispatch(product);\n        }\n    };\n\n    handleInputGroupClick: React.MouseEventHandler<any> = (event) => {\n        const { recipeTarget } = this.props.state;\n        if (!event.shiftKey || !recipeTarget) {\n            return;\n        }\n        event.preventDefault();\n        const output = this.getOutput();\n\n        let current: game.Ingredient | game.Product | undefined;\n        current = output.ingredients.find((x) => {\n            return x.item.name === recipeTarget.item.name;\n        });\n\n        current =\n            current ||\n            output.products.find((x) => {\n                return x.item.name === recipeTarget.item.name;\n            });\n\n        if (!current) {\n            console.error(\n                `Could not find ${recipeTarget.item.name} in totals`,\n                output\n            );\n            return;\n        }\n\n        const newNum = recipeTarget.amount\n            .div(current.amount)\n            .mul(this.props.numMachines);\n        this.applyChange({\n            numMachines: newNum,\n        });\n    };\n\n    applyChange(change: Partial<RecipeRowData>) {\n        this.props.actions.updateRow(this.props.index, change);\n    }\n\n    getOutput() {\n        const t = new Totals();\n        t.addRow(this.props);\n        return {\n            ingredients: t.ingredients,\n            products: t.products,\n        };\n    }\n\n    renderModules() {\n        const numSlots = this.props.machine.data.module_slots;\n\n        const slots = [];\n        for (let i = 0; i < numSlots; i++) {\n            const module = this.props.modules[i];\n            slots.push(\n                <ModulePicker\n                    key={i}\n                    recipe={this.props.recipe}\n                    selected={module}\n                    onChange={(m) => this.handleSetModule(i, m)}\n                />\n            );\n        }\n\n        if (numSlots > 1) {\n            slots.splice(\n                1,\n                0,\n                <button\n                    onClick={this.handleSetAllModules}\n                    key=\"applicator\"\n                    className=\"btn\"\n                >\n                    →\n                </button>\n            );\n        }\n\n        return slots;\n    }\n\n    renderBeacons() {\n        return (\n            <div className=\"btn-toolbar mb-3\">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text\">Beacon Modules</div>\n                    </div>\n                    <IntegerInput\n                        value={this.props.numBeacons}\n                        onChange={this.handleNumBeaconsChange}\n                        positiveOnly={true}\n                        intOnly={true}\n                    />\n                    <div className=\"input-group-append btn-icon-wrapper\">\n                        <ModulePicker\n                            isBeacon={true}\n                            recipe={this.props.recipe}\n                            selected={this.props.beaconModule}\n                            onChange={this.handleSetBeaconModule}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderMachines() {\n        return (\n            <div className=\"btn-toolbar mb-3\">\n                <div\n                    className=\"input-group\"\n                    onClick={this.handleInputGroupClick}\n                >\n                    <RationalInput\n                        key={this.props.numMachines.toFraction()}\n                        value={this.props.numMachines}\n                        onChange={this.handleNumMachinesChange}\n                        positiveOnly={true}\n                    />\n                    <div className=\"input-group-append btn-icon-wrapper\">\n                        <MachinePicker\n                            machines={this.props.recipe.madeIn}\n                            selected={this.props.machine}\n                            onChange={this.handleMachineChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const recipe = this.props.recipe;\n        const output = this.getOutput();\n\n        const ingredients = output.ingredients.map((ingredient, i) => (\n            <div className=\"mb-1\" key={i}>\n                <Icon\n                    onClick={this.handleIngredientClick.bind(null, ingredient)}\n                    tooltip={<IngredientCard obj={ingredient} />}\n                    obj={ingredient.item}\n                    text={`${ingredient.amount.toDecimal()} / sec`}\n                />\n            </div>\n        ));\n        const products = output.products.map((product, i) => (\n            <div className=\"mb-1\" key={i}>\n                <Icon\n                    onClick={this.handleProductClick.bind(null, product)}\n                    tooltip={<IngredientCard obj={product} />}\n                    obj={product.item}\n                    text={`${product.amount.toDecimal()} / sec`}\n                />\n            </div>\n        ));\n        return (\n            <Draggable draggableId={recipe.name} index={this.props.index}>\n                {(provided) => (\n                    <div\n                        className=\"recipe-row card mb-3\"\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                    >\n                        <div\n                            className=\"card-header\"\n                            {...provided.dragHandleProps}\n                        >\n                            <div style={{ float: 'left' }}>\n                                <Icon\n                                    obj={recipe}\n                                    text={recipe.niceName()}\n                                    tooltip={<RecipeCard recipe={recipe} />}\n                                />\n                            </div>\n                            <div style={{ float: 'right' }}>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-danger\"\n                                    onClick={this.handleRemoveClick}\n                                >\n                                    Remove\n                                </button>\n                            </div>\n                            <div style={{ clear: 'both' }} />\n                        </div>\n                        <div className=\"card-body\">\n                            <div style={{ float: 'left' }}>\n                                {this.renderMachines()}\n                                <div className=\"mb-3 btn-group btn-icon-wrapper\">\n                                    {this.renderModules()}\n                                </div>\n                                {this.renderBeacons()}\n                            </div>\n\n                            <div style={{ float: 'right' }}>\n                                <div\n                                    className=\"mr-3\"\n                                    style={{\n                                        display: 'inline-block',\n                                        float: 'left',\n                                        minWidth: '150px',\n                                    }}\n                                >\n                                    <b>Ingredients:</b>\n                                    {ingredients}\n                                </div>\n\n                                <div\n                                    className=\"mr-2\"\n                                    style={{\n                                        display: 'inline-block',\n                                        minWidth: '150px',\n                                    }}\n                                >\n                                    <b>Products:</b>\n                                    {products}\n                                </div>\n                            </div>\n                            <div style={{ clear: 'both' }} />\n                        </div>\n                    </div>\n                )}\n            </Draggable>\n        );\n    }\n}\n\nexport const RecipeRow = withBoth(RawRecipeRow);\n","import * as React from 'react';\nimport Fuse from 'fuse.js';\nimport debounce from 'lodash/debounce';\n\nimport * as game from '../game';\nimport * as signal from '../signal';\n\nimport { Icon } from './Icon';\n\ntype KeyTypes = 'niceName' | 'name';\n\nfunction getFn(recipe: game.Recipe, key: string) {\n    switch (key as KeyTypes) {\n        case 'niceName':\n            return recipe.niceName();\n        case 'name':\n            return recipe.name;\n    }\n}\n\nconst RE_ADVANCED = /((?:produces)|(?:consumes)):([a-z0-9-]+)/g;\n\ninterface Props {\n    recipes: game.Recipe[];\n    onPickRecipe(r: game.Recipe): void;\n}\n\ninterface State {\n    query: string;\n    matches: game.Recipe[];\n}\n\nexport class RecipePicker extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            query: '',\n            matches: [],\n        };\n    }\n\n    componentDidMount() {\n        signal.addIngredientFilter.addHandler(this.handleIngredientClick);\n        signal.addProductFilter.addHandler(this.handleProductClick);\n    }\n\n    componentWillUnmount() {\n        this.debCalculateMatches.cancel();\n        signal.addIngredientFilter.removeHandler(this.handleIngredientClick);\n        signal.addProductFilter.removeHandler(this.handleProductClick);\n    }\n\n    public handleIngredientClick = (ingredient: game.Ingredient) => {\n        const term = `produces:${ingredient.name}`;\n        if (!this.state.query.includes(term)) {\n            this.setQuery(`${this.state.query} ${term}`, () => {\n                this.calculateMatches();\n            });\n        }\n    };\n\n    public handleProductClick = (product: game.Product) => {\n        const term = `consumes:${product.name}`;\n        if (!this.state.query.includes(term)) {\n            this.setQuery(`${this.state.query} ${term}`, () => {\n                this.calculateMatches();\n            });\n        }\n    };\n\n    public handleQueryInput = (event: React.FormEvent<HTMLInputElement>) => {\n        const target = event.target as HTMLInputElement;\n        this.setQuery(target.value);\n    };\n\n    public handleRecipeClick = (recipe: game.Recipe) => {\n        this.props.onPickRecipe(recipe);\n        this.setQuery('');\n    };\n\n    public setQuery = (query: string, callback?: () => void) => {\n        if (!query.trim()) {\n            this.debCalculateMatches.cancel();\n            this.setState(\n                {\n                    query: '',\n                    matches: [],\n                },\n                callback\n            );\n        } else {\n            this.setState({ query: query }, callback);\n            this.debCalculateMatches();\n        }\n    };\n\n    calculateMatches() {\n        let query = this.state.query.trim().toLowerCase();\n        if (!query) {\n            this.setState({ matches: [] });\n            return;\n        }\n\n        const conditions = {\n            consumes: [] as string[],\n            produces: [] as string[],\n        };\n\n        type ckey = keyof typeof conditions;\n\n        query = query\n            .replace(RE_ADVANCED, (_, key, value) => {\n                conditions[key as ckey].push(value);\n                return '';\n            })\n            .trim();\n\n        let recipes = this.props.recipes;\n        if (conditions.consumes.length || conditions.produces.length) {\n            recipes = recipes.filter((recipe) => {\n                for (let name of conditions.consumes) {\n                    if (!recipe.ingredients.some((i) => i.name === name)) {\n                        return false;\n                    }\n                }\n                for (let name of conditions.produces) {\n                    if (!recipe.products.some((i) => i.name === name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n\n        if (query) {\n            const fuse = new Fuse(recipes, {\n                shouldSort: true,\n                getFn: getFn,\n                keys: [\n                    {\n                        name: 'niceName',\n                        weight: 0.7,\n                    },\n                    {\n                        name: 'name',\n                        weight: 0.2,\n                    },\n                ],\n            });\n            recipes = fuse.search(query);\n        }\n        this.setState({ matches: recipes });\n    }\n\n    debCalculateMatches = debounce(this.calculateMatches.bind(this), 200);\n\n    renderMatches() {\n        if (!this.state.matches.length) {\n            return '';\n        }\n        let matches = this.state.matches;\n        if (matches.length > 100) {\n            matches = matches.slice(0, 100);\n        }\n        return (\n            <table className=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th>Recipe</th>\n                        <th>Time</th>\n                        <th>Ingredients</th>\n                        <th>Products</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {matches.map((r) => (\n                        <RecipeMatch\n                            recipe={r}\n                            key={r.name}\n                            onClick={this.handleRecipeClick}\n                        />\n                    ))}\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"recipe-picker\">\n                <div>\n                    <input\n                        className=\"editable-display form-control\"\n                        placeholder=\"Search for a recipe\"\n                        value={this.state.query}\n                        onChange={this.handleQueryInput}\n                    />\n                </div>\n                {this.renderMatches()}\n            </div>\n        );\n    }\n}\n\ninterface RecipeMatchProps {\n    recipe: game.Recipe;\n    onClick(recipe: game.Recipe): void;\n}\n\nfunction card(body: React.ReactNode) {\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">{body}</div>\n        </div>\n    );\n}\n\nclass RecipeMatch extends React.PureComponent<RecipeMatchProps, {}> {\n    handleClickAdd = () => {\n        this.props.onClick(this.props.recipe);\n    };\n\n    render() {\n        const recipe = this.props.recipe;\n        const ingredients = recipe.ingredients.map((ing, i) => (\n            <Icon key={i} obj={ing.item} tooltip={card(ing.niceName())} />\n        ));\n        const products = recipe.products.map((prod, i) => (\n            <Icon key={i} obj={prod.item} tooltip={card(prod.niceName())} />\n        ));\n        return (\n            <tr onClick={this.handleClickAdd}>\n                <td className=\"result-name\">\n                    <Icon obj={recipe} text={recipe.niceName()} />\n                </td>\n                <td>{recipe.crafting_time.toDecimal()}</td>\n                <td>{ingredients}</td>\n                <td>{products}</td>\n            </tr>\n        );\n    }\n}\n","import * as React from 'react';\nimport { Icon } from './Icon';\nimport { withGame, RecipeRowData } from '../state';\nimport { Totals } from '../totals';\nimport * as game from '../game';\n\ninterface Props {\n    gameData: game.GameData;\n    rows: RecipeRowData[];\n}\n\nfunction RawTotalCard(props: Props) {\n    const totals = new Totals();\n    for (let row of props.rows) {\n        totals.addRow(row);\n    }\n\n    const { ingredients, products } = totals.reduce();\n    if (!ingredients.length && !products.length) {\n        return <div />;\n    }\n\n    props.gameData.sortByItem(products, (p) => p.item);\n\n    return (\n        <div className=\"card combined-totals\">\n            <div className=\"card-header\">Combined Totals</div>\n            <div className=\"card-body\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            Ingredients:\n                            {ingredients.map((ing, i) => (\n                                <Icon\n                                    key={i}\n                                    obj={ing.item}\n                                    text={ing.niceName()}\n                                />\n                            ))}\n                        </div>\n                        <div className=\"col\">\n                            Products:\n                            {products.map((prod, i) => (\n                                <Icon\n                                    key={i}\n                                    obj={prod.item}\n                                    text={prod.niceName()}\n                                />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport const TotalCard = withGame(RawTotalCard);\n","import * as React from 'react';\n\nimport { RecipeGroup } from './RecipeGroup';\nimport { Settings } from './Settings';\n\nimport { AppActions, AppState, withBoth } from '../state';\nimport { assertNever } from '../util';\n\ninterface Props {\n    state: AppState;\n    actions: AppActions;\n}\n\ninterface State {\n    activePage: ActivePage;\n}\n\nenum ActivePage {\n    Factory = 'FACTORY',\n    Settings = 'SETTINGS',\n}\n\nclass RawApp extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            activePage: ActivePage.Factory,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n        document.addEventListener('keyup', this.handleKeyUp);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n        document.removeEventListener('keyup', this.handleKeyUp);\n    }\n\n    handleKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Shift') {\n            document.body.classList.add('shift-down');\n        }\n    };\n    handleKeyUp = (event: KeyboardEvent) => {\n        if (event.key === 'Shift') {\n            document.body.classList.remove('shift-down');\n        }\n    };\n\n    handleClickSettings: React.MouseEventHandler<HTMLButtonElement> = (\n        event\n    ) => {\n        event.preventDefault();\n        this.setState({\n            activePage: ActivePage.Settings,\n        });\n    };\n\n    handleClickGroup = (\n        i: number,\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        event.preventDefault();\n        this.setState({\n            activePage: ActivePage.Factory,\n        });\n        this.props.actions.setActiveGroup(i);\n    };\n\n    handleClickAddGroup: React.MouseEventHandler<HTMLButtonElement> = (\n        event\n    ) => {\n        event.preventDefault();\n        const defaultName = `Factory ${this.props.state.groups.length + 1}`;\n        const name = prompt(\n            'What do you want to name this group?',\n            defaultName\n        );\n        if (!name || !name.trim()) {\n            return;\n        }\n        this.props.actions.addGroup(name);\n    };\n\n    handleClickRemoveGroup = (\n        i: number,\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        event.preventDefault();\n        const group = this.props.state.groups[this.props.state.activeGroupIdx];\n        if (window.confirm(`Are you sure you want to delete ${group.name}`)) {\n            this.props.actions.removeGroup(i);\n        }\n    };\n\n    renderNavbar = () => {\n        const settingsActive = this.state.activePage === ActivePage.Settings;\n        const factoryPills = this.props.state.groups.map((group, i) => {\n            const cls =\n                !settingsActive && this.props.state.activeGroupIdx === i\n                    ? 'btn btn-primary'\n                    : 'btn btn-secondary';\n\n            return (\n                <div className=\"btn-group mr-2\" role=\"group\" key={i}>\n                    <button\n                        type=\"button\"\n                        className={cls}\n                        onClick={this.handleClickGroup.bind(null, i)}\n                    >\n                        {group.name}\n                    </button>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-danger\"\n                        title=\"Remove this group\"\n                        onClick={this.handleClickRemoveGroup.bind(null, i)}\n                    >\n                        ✖\n                    </button>\n                </div>\n            );\n        });\n        const settingsCls = settingsActive\n            ? 'btn btn-primary'\n            : 'btn btn-secondary';\n\n        return (\n            <nav className=\"navbar\">\n                <div\n                    className=\"btn-toolbar\"\n                    role=\"toolbar\"\n                    aria-label=\"Toolbar with button groups\"\n                >\n                    {factoryPills}\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-secondary mr-2\"\n                        title=\"Add a factory\"\n                        onClick={this.handleClickAddGroup}\n                    >\n                        +\n                    </button>\n                    <button\n                        type=\"button\"\n                        className={settingsCls}\n                        onClick={this.handleClickSettings}\n                    >\n                        Settings\n                    </button>\n                </div>\n            </nav>\n        );\n    };\n\n    renderFactory = () => {\n        const group = this.props.state.groups[this.props.state.activeGroupIdx];\n\n        return (\n            <div className=\"container\">\n                <RecipeGroup rows={group.rows} />\n            </div>\n        );\n    };\n\n    renderSettings = () => {\n        return (\n            <div className=\"container\">\n                <Settings />\n            </div>\n        );\n    };\n\n    render() {\n        if (!this.props.state.gameData.raw) {\n            return null;\n        }\n        let body: JSX.Element;\n        if (this.state.activePage === ActivePage.Factory) {\n            body = this.renderFactory();\n        } else if (this.state.activePage === ActivePage.Settings) {\n            body = this.renderSettings();\n        } else {\n            return assertNever(this.state.activePage);\n        }\n\n        return (\n            <>\n                {this.renderNavbar()}\n                {body}\n            </>\n        );\n    }\n}\n\nexport const App = withBoth(RawApp);\n","import * as React from 'react';\n\nimport { DropResult, DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nimport * as signal from '../signal';\nimport * as game from '../game';\nimport { Rational } from '../rational';\n\nimport { RecipeRow } from './RecipeRow';\nimport { RecipePicker } from './RecipePicker';\nimport { TotalCard } from './TotalCard';\n\nimport { RecipeRowData } from '../state';\n\nimport { AppActions, AppState, withBoth } from '../state';\nimport * as su from '../stateutil';\n\ninterface Props {\n    rows: RecipeRowData[];\n    state: AppState;\n    actions: AppActions;\n}\n\nclass RawRecipeGroup extends React.Component<Props, {}> {\n    componentDidMount() {\n        signal.addRecipeRow.addHandler(this.handlePickRecipe);\n    }\n\n    componentWillUnmount() {\n        signal.addRecipeRow.removeHandler(this.handlePickRecipe);\n    }\n\n    handlePickRecipe = (recipe: game.Recipe) => {\n        this.props.actions.addRow({\n            recipe: recipe,\n            machine: su.getDefaultMachine(recipe, this.props.state),\n            numMachines: Rational.one,\n            modules: [],\n            beaconModule: null,\n            numBeacons: 0,\n        });\n    };\n\n    handleDragEnd = (result: DropResult) => {\n        if (!result.destination) {\n            return;\n        }\n        this.props.actions.moveRow(\n            result.source.index,\n            result.destination.index\n        );\n    };\n\n    renderRow = (data: RecipeRowData, index: number) => {\n        return <RecipeRow key={data.recipe.name} index={index} {...data} />;\n    };\n\n    render() {\n        const gd = this.props.state.gameData;\n        const availableRecipes = gd.recipes.filter((recipe) => {\n            return !this.props.rows.some((row) => row.recipe === recipe);\n        });\n\n        return (\n            <div className=\"recipe-group\">\n                <RecipePicker\n                    recipes={availableRecipes}\n                    onPickRecipe={this.handlePickRecipe}\n                />\n                <hr />\n\n                <DragDropContext onDragEnd={this.handleDragEnd}>\n                    <Droppable droppableId={'eyy'}>\n                        {(provided) => (\n                            <div\n                                ref={provided.innerRef}\n                                {...provided.droppableProps}\n                            >\n                                {this.props.rows.map(this.renderRow)}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n\n                <hr />\n                <TotalCard rows={this.props.rows} />\n            </div>\n        );\n    }\n}\n\nexport const RecipeGroup = withBoth(RawRecipeGroup);\n","import * as React from 'react';\n\nimport * as game from '../game';\n\nimport { AppActions, AppState, withGame, withBoth } from '../state';\nimport { getDefaultMachine } from '../stateutil';\n\nimport { MachinePicker } from './MachinePicker';\n\ninterface RawSettingsProps {\n    gameData: game.GameData;\n}\n\nclass RawSettings extends React.Component<RawSettingsProps, {}> {\n    render() {\n        const categoryNames = Object.entries(this.props.gameData.categoryMap)\n            .filter((entry) => entry[1].length > 1)\n            .map((entry) => entry[0]);\n\n        categoryNames.sort((a, b) => a.localeCompare(b));\n\n        return (\n            <div>\n                <h3>Default Assemblers</h3>\n                {categoryNames.map((name) => (\n                    <CategoryRow key={name} category={name} />\n                ))}\n            </div>\n        );\n    }\n}\n\ninterface CategoryRowProps {\n    category: string;\n    state: AppState;\n    actions: AppActions;\n}\n\nclass RawCategoryRow extends React.Component<CategoryRowProps, {}> {\n    handleChange = (machine: game.AssemblingMachine) => {\n        this.props.actions.updateDefaultMachine(this.props.category, machine);\n    };\n\n    render() {\n        const machines = this.props.state.gameData.categoryMap[\n            this.props.category\n        ];\n        const selected = getDefaultMachine(\n            this.props.category,\n            this.props.state\n        );\n        return (\n            <div className=\"btn-toolbar mb-3\" key={this.props.category}>\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            {this.props.category}\n                        </span>\n                    </div>\n                    <div className=\"input-group-append btn-icon-wrapper\">\n                        <MachinePicker\n                            machines={machines}\n                            selected={selected}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst CategoryRow = withBoth(RawCategoryRow);\n\nexport const Settings = withGame(RawSettings);\n","import React, { useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport * as game from '../game';\nimport { AppActions, withBoth, useDakpan } from '../state';\nimport * as serialization from '../serialization';\n\nimport { App } from './App';\n\ninterface Props {\n    actions: AppActions\n}\ninterface State {\n    gameData: game.GameData | null;\n}\n\nclass RawAppLoader extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            gameData: null,\n        };\n    }\n    componentDidMount() {\n        this.load().catch((err) => {\n            this.setState(() => {\n                throw err;\n            });\n        });\n    }\n\n    async load() {\n        const response = await fetch('assets/landblock.json');\n        if (response.status !== 200) {\n            throw new Error(\n                `Could not load game data, got HTTP status ${response.status}`\n            );\n        }\n\n        let parsed;\n        try {\n            parsed = await response.json();\n        } catch (err) {\n            throw new Error(`Could not parse game data: ${err}`);\n        }\n\n        const gameData = new game.GameData(parsed);\n\n        this.props.actions.replaceState({ gameData });\n\n        const urlState = serialization.getUrlState(gameData);\n        if (urlState) {\n            // everything comes from url state\n            this.props.actions.replaceState(urlState);\n        } else {\n            // Load just settings\n            const storageState = serialization.getLocalStorageState(gameData);\n            if (storageState) {\n                // everything comes from url state\n                this.props.actions.replaceState(storageState);\n            }\n        }\n\n        this.setState({ gameData });\n    }\n\n    render() {\n        if (!this.state.gameData) {\n            return (\n                <h1>Loading...</h1>\n            );\n        }\n        const sheet = `assets/sprite-sheet-${\n            this.state.gameData.raw.sprites.hash\n        }.png`;\n        const style = `\n        .game-icon {\n            background-image: url(${sheet});\n        }\n        `;\n        return (\n            <>\n                <StateWriter />\n                <Prefetch href={sheet} />\n                <style>{style}</style>\n                <App />\n            </>\n        );\n    }\n}\n\nconst StateWriter: React.FC = () => {\n    const [state] = useDakpan();\n\n    useEffect(() => {\n        serialization.setUrlState(state);\n        serialization.setLocalStorageState(state);\n    }, [state]);\n\n    return null;\n};\n\n\n\nconst Prefetch: React.FC<{href: string}> = (props) => {\n    return ReactDOM.createPortal(\n        <link rel=\"prefetch\" href={props.href} />,\n        document.head\n    );\n};\n\nexport const AppLoader = withBoth(RawAppLoader);\n","import * as Sentry from '@sentry/browser';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ErrorCatcher } from './components/ErrorCatcher';\nimport { AppLoader } from './components/AppLoader';\nimport {StateProvider} from './state';\n\n// import 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nif (process.env.NODE_ENV === 'production') {\n    Sentry.init({\n        dsn: 'https://2ab99c1e02a448cbaa06595164416044@sentry.io/1385727',\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <ErrorCatcher>\n            <StateProvider>\n                <AppLoader />\n            </StateProvider>\n        </ErrorCatcher>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}